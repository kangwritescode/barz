{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actions';\nimport vinyl from '../assets/vinyl.mov';\nimport { updateObject } from '../shared/utility';\nconst initialState = {\n  // global background\n  bgvideo: vinyl,\n  bgvideostyle: null,\n  // music related\n  playing: false,\n  musicURL: '',\n  volume: 50,\n  songPointer: 0,\n  allStations: {\n    lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n    boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n    dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n    chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n  },\n  // user related,\n  loggedIn: false,\n  needsInfo: true,\n  autoSignInOver: false,\n  uid: '',\n  email: '',\n  username: '',\n  gender: '',\n  address: '',\n  photoRef: null,\n  handles: {\n    facebook: '',\n    instagram: '',\n    soundcloud: '',\n    youtube: ''\n  },\n  blurb: '',\n  // ui related\n  shouldRefetchPosts: false\n};\n\nconst toggleMusic = (state, action, bool) => {\n  return updateObject(state, {\n    playing: bool\n  });\n};\n\nconst changeMusicUrl = (state, action) => {\n  return updateObject(state, {\n    musicURL: action.musicURL\n  });\n};\n\nconst changeMusicVolume = (state, action) => {\n  return updateObject(state, {\n    volume: action.volume\n  });\n};\n\nconst setSongPointer = (state, action) => {\n  return updateObject(state, {\n    songPointer: action.value\n  });\n};\n\nconst authenticate = (state, action) => {\n  return updateObject(state, {\n    loggedIn: true,\n    email: action.email\n  });\n};\n\nconst setUserData = (state, action) => {\n  return updateObject(state, _objectSpread({}, action.data, {\n    loggedIn: true,\n    autoSignInOver: true\n  }));\n};\n\nconst logOut = (state, action) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('uid');\n  return updateObject(state, _objectSpread({}, initialState, {\n    autoSignInOver: true\n  }));\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // music related\n    case actionTypes.PLAY_MUSIC:\n      return toggleMusic(state, action, true);\n\n    case actionTypes.STOP_MUSIC:\n      return toggleMusic(state, action, false);\n\n    case actionTypes.CHANGE_MUSIC_URL:\n      return changeMusicUrl(state, action);\n\n    case actionTypes.CHANGE_VOLUME:\n      return changeMusicVolume(state, action);\n\n    case actionTypes.SET_SONG_POINTER:\n      return setSongPointer(state, action);\n\n    case actionTypes.AUTHENTICATE:\n      return authenticate(state, action);\n\n    case actionTypes.SET_USER_DATA:\n      return setUserData(state, action);\n\n    case actionTypes.LOG_OUT:\n      return logOut(state, action);\n\n    case actionTypes.SET_PHOTO_URL:\n      return _objectSpread({}, state, {\n        photoURL: action.photoURL\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/store/reducer.js"],"names":["actionTypes","vinyl","updateObject","initialState","bgvideo","bgvideostyle","playing","musicURL","volume","songPointer","allStations","lofi","boombap","dilla","chillhop","loggedIn","needsInfo","autoSignInOver","uid","email","username","gender","address","photoRef","handles","facebook","instagram","soundcloud","youtube","blurb","shouldRefetchPosts","toggleMusic","state","action","bool","changeMusicUrl","changeMusicVolume","setSongPointer","value","authenticate","setUserData","data","logOut","localStorage","removeItem","reducer","type","PLAY_MUSIC","STOP_MUSIC","CHANGE_MUSIC_URL","CHANGE_VOLUME","SET_SONG_POINTER","AUTHENTICATE","SET_USER_DATA","LOG_OUT","SET_PHOTO_URL","photoURL"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\nimport vinyl from '../assets/vinyl.mov'\nimport { updateObject } from '../shared/utility'\n\nconst initialState = {\n\n    // global background\n    bgvideo: vinyl,\n    bgvideostyle: null,\n\n    // music related\n    playing: false,\n    musicURL: '',\n    volume: 50,\n    songPointer: 0,\n    allStations: {\n        lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n        boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n        dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n        chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n    },\n\n    // user related,\n    loggedIn: false,\n    needsInfo: true,\n    autoSignInOver: false,\n    uid: '',\n    email: '',\n    username: '',\n    gender: '',\n    address: '',\n    photoRef: null,\n    handles: {\n        facebook: '',\n        instagram: '',\n        soundcloud: '',\n        youtube: ''\n    },\n    blurb: '',\n\n    // ui related\n    shouldRefetchPosts: false\n\n}\n\nconst toggleMusic = (state, action, bool) => {\n    return updateObject(state, {\n        playing: bool\n    })\n}\nconst changeMusicUrl = (state, action) => {\n    return updateObject(state, {\n        musicURL: action.musicURL\n    })\n}\nconst changeMusicVolume = (state, action) => {\n    return updateObject(state, {\n        volume: action.volume\n    })\n}\nconst setSongPointer = (state, action) => {\n    return updateObject(state, {\n        songPointer: action.value\n    })\n}\n\nconst authenticate = (state, action) => {\n    return updateObject(state, {\n        loggedIn: true,\n        email: action.email\n    })\n}\n\nconst setUserData = (state, action) => {\n    return updateObject(state, {\n        ...action.data,\n        loggedIn: true,\n        autoSignInOver: true,\n    })\n}\n\nconst logOut = (state, action) => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('uid')\n    return updateObject(state, {\n        ...initialState,\n        autoSignInOver: true\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        // music related\n        case actionTypes.PLAY_MUSIC: return toggleMusic(state, action, true)\n        case actionTypes.STOP_MUSIC: return toggleMusic(state, action, false)\n        case actionTypes.CHANGE_MUSIC_URL: return changeMusicUrl(state, action)\n        case actionTypes.CHANGE_VOLUME: return changeMusicVolume(state, action)\n        case actionTypes.SET_SONG_POINTER: return setSongPointer(state, action)\n\n        case actionTypes.AUTHENTICATE: return authenticate(state, action)\n        case actionTypes.SET_USER_DATA: return setUserData(state, action)\n        case actionTypes.LOG_OUT: return logOut(state, action)\n        \n        case actionTypes.SET_PHOTO_URL:\n            return {\n                ...state,\n                photoURL: action.photoURL\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}