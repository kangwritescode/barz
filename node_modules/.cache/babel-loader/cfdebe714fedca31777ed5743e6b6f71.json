{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/Turntable/Turntable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions';\nimport './Turntable.css';\nimport glare from '../../../assets/glare.png';\nimport arm from '../../../assets/arm.png';\nimport Slider from './Slider/Slider';\n\nconst Turntable = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        animateOkay = _useState2[0],\n        setAnimateOkay = _useState2[1];\n\n  const getGenre = num => {\n    switch (num) {\n      case 1:\n        return 'lofi';\n\n      case 2:\n        return 'boombap';\n\n      case 3:\n        return 'dilla';\n\n      case 0:\n        return 'chillhop';\n\n      default:\n        return 'error';\n    }\n  };\n\n  useEffect(() => {\n    if (props.playing) {\n      setAnimateOkay(false);\n    }\n\n    return () => {};\n  }, [props.playing]);\n\n  const playMusic = () => {\n    // change song, play music\n    if (!animateOkay) {\n      setAnimateOkay(true);\n    }\n\n    var songs = Object.values(props.allStations);\n    props.changeURL(songs[props.songPointer]);\n    props.playMusic();\n    console.log(props.allStations); // stage correct pointer\n\n    if (props.songPointer === songs.length - 1) {\n      props.setSongPointer(0);\n    } else {\n      props.setSongPointer(props.songPointer + 1);\n    }\n  };\n\n  var initialAnimate = !animateOkay ? {\n    animation: 'none'\n  } : null;\n  return React.createElement(\"div\", {\n    className: \"turntable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"click-space\",\n    onClick: props.playing ? props.stopMusic : playMusic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    customStyle: props.customStyle ? props.customStyle.slider : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"vinyl\",\n    style: props.customStyle ? props.customStyle.vinyl : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.playing ? React.createElement(\"h1\", {\n    className: \"turntable__word-animation\",\n    style: initialAnimate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, getGenre(props.songPointer)) : null, React.createElement(\"img\", {\n    alt: \"\",\n    className: props.playing ? 'spinning' : null,\n    style: props.customStyle ? props.customStyle.glare : null,\n    id: \"glare\",\n    src: glare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"inner-vinyl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"dot\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"arm-container \".concat(props.playing ? 'record-play' : 'record-stop'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\",\n    id: \"arm\",\n    src: arm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"buttons-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"button\",\n    id: \"\".concat(props.playing ? null : 'button-active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"button\",\n    id: \"\".concat(props.playing ? 'button-active' : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nlet mapStatetoProps = state => {\n  return {\n    musicURL: state.musicURL,\n    volume: state.volume,\n    playing: state.playing,\n    allStations: _objectSpread({}, state.allStations),\n    songPointer: state.songPointer\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    playMusic: () => dispatch({\n      type: actionTypes.PLAY_MUSIC\n    }),\n    stopMusic: () => dispatch({\n      type: actionTypes.STOP_MUSIC\n    }),\n    changeURL: newURL => dispatch({\n      type: actionTypes.CHANGE_MUSIC_URL,\n      musicURL: newURL\n    }),\n    changeVol: volume => dispatch({\n      type: actionTypes.CHANGE_VOLUME,\n      volume: volume\n    }),\n    setSongPointer: val => dispatch({\n      type: actionTypes.SET_SONG_POINTER,\n      value: val\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Turntable);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/Turntable/Turntable.js"],"names":["React","Component","useEffect","useState","connect","actionTypes","glare","arm","Slider","Turntable","props","animateOkay","setAnimateOkay","getGenre","num","playing","playMusic","songs","Object","values","allStations","changeURL","songPointer","console","log","length","setSongPointer","initialAnimate","animation","stopMusic","customStyle","slider","vinyl","mapStatetoProps","state","musicURL","volume","mapDispatchToProps","dispatch","type","PLAY_MUSIC","STOP_MUSIC","newURL","CHANGE_MUSIC_URL","changeVol","CHANGE_VOLUME","val","SET_SONG_POINTER","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,oBACaP,QAAQ,CAAC,IAAD,CADrB;AAAA;AAAA,QAClBQ,WADkB;AAAA,QACLC,cADK;;AAGzB,QAAMC,QAAQ,GAAIC,GAAD,IAAS;AACtB,YAAQA,GAAR;AACI,WAAK,CAAL;AACI,eAAO,MAAP;;AACJ,WAAK,CAAL;AACI,eAAO,SAAP;;AACJ,WAAK,CAAL;AACI,eAAO,OAAP;;AACJ,WAAK,CAAL;AACI,eAAO,UAAP;;AACJ;AACI,eAAO,OAAP;AAVR;AAYH,GAbD;;AAeAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAK,CAACK,OAAV,EAAmB;AACfH,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AACD,WAAO,MAAM,CAEZ,CAFD;AAGH,GAPQ,EAON,CAACF,KAAK,CAACK,OAAP,CAPM,CAAT;;AAUA,QAAMC,SAAS,GAAG,MAAM;AAEpB;AACA,QAAI,CAACL,WAAL,EAAkB;AACdC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AACD,QAAIK,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACU,WAApB,CAAZ;AACAV,IAAAA,KAAK,CAACW,SAAN,CAAgBJ,KAAK,CAACP,KAAK,CAACY,WAAP,CAArB;AACAZ,IAAAA,KAAK,CAACM,SAAN;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACU,WAAlB,EAToB,CAWpB;;AACA,QAAIV,KAAK,CAACY,WAAN,KAAsBL,KAAK,CAACQ,MAAN,GAAe,CAAzC,EAA4C;AAAEf,MAAAA,KAAK,CAACgB,cAAN,CAAqB,CAArB;AAAyB,KAAvE,MACK;AAAEhB,MAAAA,KAAK,CAACgB,cAAN,CAAqBhB,KAAK,CAACY,WAAN,GAAoB,CAAzC;AAA6C;AACvD,GAdD;;AAgBA,MAAIK,cAAc,GAAG,CAAChB,WAAD,GAAe;AAAEiB,IAAAA,SAAS,EAAE;AAAb,GAAf,GAAuC,IAA5D;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,OAAO,EAAElB,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACmB,SAAtB,GAAkCb,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEN,KAAK,CAACoB,WAAN,GAAoBpB,KAAK,CAACoB,WAAN,CAAkBC,MAAtC,GAA+C,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,KAAK,EAAErB,KAAK,CAACoB,WAAN,GAAoBpB,KAAK,CAACoB,WAAN,CAAkBE,KAAtC,GAA8C,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKtB,KAAK,CAACK,OAAN,GACG;AACI,IAAA,SAAS,6BADb;AAEI,IAAA,KAAK,EAAEY,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKd,QAAQ,CAACH,KAAK,CAACY,WAAP,CAHb,CADH,GAKW,IAPhB,EAQI;AACI,IAAA,GAAG,EAAC,EADR;AAEI,IAAA,SAAS,EAAEZ,KAAK,CAACK,OAAN,GAAgB,UAAhB,GAA6B,IAF5C;AAGI,IAAA,KAAK,EAAEL,KAAK,CAACoB,WAAN,GAAoBpB,KAAK,CAACoB,WAAN,CAAkBxB,KAAtC,GAA8C,IAHzD;AAII,IAAA,EAAE,EAAC,OAJP;AAIe,IAAA,GAAG,EAAEA,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAaI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAgBI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAHJ,EAuBI;AAAK,IAAA,SAAS,0BAAmBI,KAAK,CAACK,OAAN,GAAgB,aAAhB,GAAgC,aAAnD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,EAAE,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAER,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,EA0BI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,UAAd;AAA0B,IAAA,EAAE,YAAKG,KAAK,CAACK,OAAN,GAAgB,IAAhB,GAAuB,eAA5B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,UAAd;AAA0B,IAAA,EAAE,YAAKL,KAAK,CAACK,OAAN,GAAgB,eAAhB,GAAkC,IAAvC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1BJ,CADJ;AAiCH,CA/ED;;AAiFA,IAAIkB,eAAe,GAAGC,KAAK,IAAI;AAC3B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QADb;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAFX;AAGHrB,IAAAA,OAAO,EAAEmB,KAAK,CAACnB,OAHZ;AAIHK,IAAAA,WAAW,oBACJc,KAAK,CAACd,WADF,CAJR;AAOHE,IAAAA,WAAW,EAAEY,KAAK,CAACZ;AAPhB,GAAP;AASH,CAVD;;AAWA,IAAIe,kBAAkB,GAAGC,QAAQ,IAAI;AACjC,SAAO;AACHtB,IAAAA,SAAS,EAAE,MAAMsB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElC,WAAW,CAACmC;AAApB,KAAD,CADtB;AAEHX,IAAAA,SAAS,EAAE,MAAMS,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElC,WAAW,CAACoC;AAApB,KAAD,CAFtB;AAGHpB,IAAAA,SAAS,EAAGqB,MAAD,IAAYJ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElC,WAAW,CAACsC,gBAApB;AAAsCR,MAAAA,QAAQ,EAAEO;AAAhD,KAAD,CAH5B;AAIHE,IAAAA,SAAS,EAAGR,MAAD,IAAYE,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElC,WAAW,CAACwC,aAApB;AAAmCT,MAAAA,MAAM,EAAEA;AAA3C,KAAD,CAJ5B;AAKHV,IAAAA,cAAc,EAAGoB,GAAD,IAASR,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElC,WAAW,CAAC0C,gBAApB;AAAsCC,MAAAA,KAAK,EAAEF;AAA7C,KAAD;AAL9B,GAAP;AAOH,CARD;;AAUA,eAAe1C,OAAO,CAAC6B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C5B,SAA7C,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../../../store/actions'\nimport './Turntable.css'\nimport glare from '../../../assets/glare.png'\nimport arm from '../../../assets/arm.png'\nimport Slider from './Slider/Slider'\n\nconst Turntable = (props) => {\n    const [animateOkay, setAnimateOkay] = useState(true)\n\n    const getGenre = (num) => {\n        switch (num) {\n            case 1:\n                return 'lofi'\n            case 2:\n                return 'boombap'\n            case 3:\n                return 'dilla'\n            case 0:\n                return 'chillhop'\n            default:\n                return 'error'\n        }\n    }\n\n    useEffect(() => {\n        if (props.playing) {\n            setAnimateOkay(false)\n        }\n        return () => {\n\n        };\n    }, [props.playing])\n\n\n    const playMusic = () => {\n\n        // change song, play music\n        if (!animateOkay) {\n            setAnimateOkay(true)\n        }\n        var songs = Object.values(props.allStations)\n        props.changeURL(songs[props.songPointer])\n        props.playMusic()\n        console.log(props.allStations)\n\n        // stage correct pointer\n        if (props.songPointer === songs.length - 1) { props.setSongPointer(0) }\n        else { props.setSongPointer(props.songPointer + 1) }\n    }\n\n    var initialAnimate = !animateOkay ? { animation: 'none' } : null\n\n    return (\n        <div className=\"turntable\">\n            <div id=\"click-space\" onClick={props.playing ? props.stopMusic : playMusic}></div>\n            <Slider customStyle={props.customStyle ? props.customStyle.slider : null} />\n            <div id=\"vinyl\" style={props.customStyle ? props.customStyle.vinyl : null}>\n\n                {props.playing ?\n                    <h1\n                        className={`turntable__word-animation`}\n                        style={initialAnimate}>\n                        {getGenre(props.songPointer)}\n                    </h1> : null}\n                <img\n                    alt=\"\"\n                    className={props.playing ? 'spinning' : null}\n                    style={props.customStyle ? props.customStyle.glare : null}\n                    id=\"glare\" src={glare} />\n                <div id=\"inner-vinyl\">\n\n                </div>\n                <div id=\"dot\">\n\n                </div>\n            </div>\n            <div className={`arm-container ${props.playing ? 'record-play' : 'record-stop'}`} >\n                <img alt=\"\" id=\"arm\" src={arm} />\n            </div>\n            <div id=\"buttons-container\">\n                <div className={`button`} id={`${props.playing ? null : 'button-active'}`}></div>\n                <div className={`button`} id={`${props.playing ? 'button-active' : null}`}></div>\n            </div>\n        </div>\n    )\n}\n\nlet mapStatetoProps = state => {\n    return {\n        musicURL: state.musicURL,\n        volume: state.volume,\n        playing: state.playing,\n        allStations: {\n            ...state.allStations\n        },\n        songPointer: state.songPointer\n    }\n}\nlet mapDispatchToProps = dispatch => {\n    return {\n        playMusic: () => dispatch({ type: actionTypes.PLAY_MUSIC }),\n        stopMusic: () => dispatch({ type: actionTypes.STOP_MUSIC }),\n        changeURL: (newURL) => dispatch({ type: actionTypes.CHANGE_MUSIC_URL, musicURL: newURL }),\n        changeVol: (volume) => dispatch({ type: actionTypes.CHANGE_VOLUME, volume: volume }),\n        setSongPointer: (val) => dispatch({ type: actionTypes.SET_SONG_POINTER, value: val })\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Turntable)"]},"metadata":{},"sourceType":"module"}