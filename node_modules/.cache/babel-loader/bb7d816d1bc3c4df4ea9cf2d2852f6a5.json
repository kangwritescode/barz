{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport './PostLikes.css';\n\nconst PostLikes = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        points = _useState2[0],\n        setPoints = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        likes = _useState4[0],\n        setLikes = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dislikes = _useState6[0],\n        setDislikes = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        myVote = _useState8[0],\n        setMyVote = _useState8[1];\n\n  useEffect(() => {\n    const db = firebase.firestore();\n    const votesListener = db.collection('postVotes').where('pid', '==', props.viewedPost.pid).onSnapshot(snapshot => {\n      var points = 0;\n      var likes = 0;\n      var dislikes = 0;\n      var myVote = null; // for every vote of this post\n\n      snapshot.docs.forEach(vote => {\n        vote = vote.data();\n\n        if (vote.value === 1) {\n          likes += 1;\n        }\n\n        if (vote.value === -1) {\n          dislikes += 1;\n        }\n\n        if (vote.voterID === props.myUID) {\n          myVote = vote;\n        }\n      });\n      points = likes - dislikes < 0 ? 0 : likes - dislikes;\n      setPoints(points);\n      setLikes(likes);\n      setDislikes(dislikes);\n      setMyVote(myVote);\n    });\n    return () => {\n      votesListener();\n    };\n  }, [props.postSelected, props.viewedPost]);\n  const pointsPercentage = likes > 0 ? Math.floor(likes * 1.0 / (likes + dislikes * 1.0) * 100) : null;\n  console.log(myVote);\n  var voteIcon = React.createElement(\"i\", {\n    className: \"fas fa-fire vote-icon-container__fire\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  });\n\n  if (myVote.value === 1) {\n    voteIcon = React.createElement(\"i\", {\n      className: \"fas fa-fire vote-icon-container__fire lit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  } else if (myVote.value === -1) {\n    voteIcon = React.createElement(\"i\", {\n      className: \"fa fa-trash red\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"likes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"vote-icon-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, voteIcon), React.createElement(\"div\", {\n    className: \"total-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, points, \" pt\", points === 1 ? null : 's', \". \", pointsPercentage ? '(' + pointsPercentage + '%)' : null), React.createElement(\"div\", {\n    className: \"fans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, likes, \" \", likes === 1 ? 'like' : 'likes'));\n};\n\nconst mapStatetoProps = state => {\n  return {\n    myUID: state.uid\n  };\n};\n\nexport default connect(mapStatetoProps, null)(PostLikes);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js"],"names":["React","Component","useState","useEffect","connect","firebase","PostLikes","props","points","setPoints","likes","setLikes","dislikes","setDislikes","myVote","setMyVote","db","firestore","votesListener","collection","where","viewedPost","pid","onSnapshot","snapshot","docs","forEach","vote","data","value","voterID","myUID","postSelected","pointsPercentage","Math","floor","console","log","voteIcon","mapStatetoProps","state","uid"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\nimport './PostLikes.css'\n\nconst PostLikes = (props) => {\n\n    const [points, setPoints] = useState(0);\n    const [likes, setLikes] = useState(0)\n    const [dislikes, setDislikes] = useState(0)\n    const [myVote, setMyVote] = useState({})\n\n\n\n    useEffect(() => {\n\n        const db = firebase.firestore()\n        const votesListener = db.collection('postVotes').where('pid', '==', props.viewedPost.pid).onSnapshot(snapshot => {\n            var points = 0\n            var likes = 0\n            var dislikes = 0\n            var myVote = null;\n            // for every vote of this post\n            snapshot.docs.forEach(vote => {\n                vote = vote.data()\n                if (vote.value === 1) {\n                    likes += 1\n                }\n                if (vote.value === -1) {\n                    dislikes += 1\n                }\n                if (vote.voterID === props.myUID) {\n                    myVote = vote\n                }\n            })\n            points = (likes - dislikes) < 0 ? 0 : (likes - dislikes)\n            setPoints(points)\n            setLikes(likes)\n            setDislikes(dislikes)\n            setMyVote(myVote)\n        })\n        return () => {\n            votesListener()\n        };\n    }, [props.postSelected, props.viewedPost]);\n\n    const pointsPercentage = likes > 0 ? Math.floor((likes * 1.0) / (likes + dislikes * 1.0) * 100) : null\n\n    console.log(myVote)\n    var voteIcon = <i className=\"fas fa-fire vote-icon-container__fire\"/>\n    if (myVote.value === 1) {\n        voteIcon = <i className=\"fas fa-fire vote-icon-container__fire lit\"></i>\n    } else if (myVote.value === -1) {\n        voteIcon = <i className=\"fa fa-trash red\" aria-hidden=\"true\"></i>\n    }\n    \n\n    return (\n        <div className='likes'>\n            <div className={`vote-icon-container`}>\n                {voteIcon}\n            </div>\n            <div className='total-score'>\n                {points} pt{points === 1 ? null : 's'}. {pointsPercentage ? '(' + pointsPercentage + '%)' : null}\n            </div>\n            <div className='fans'>\n                {likes} {likes === 1 ? 'like' : 'likes'}\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStatetoProps = state => {\n    return {\n        myUID: state.uid\n    }\n}\n\nexport default connect(mapStatetoProps, null)(PostLikes)\n"]},"metadata":{},"sourceType":"module"}