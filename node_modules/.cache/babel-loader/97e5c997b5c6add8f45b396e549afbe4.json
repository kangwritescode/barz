{"ast":null,"code":"const myPlaceFinder = (votes, myUID) => {\n  console.log(votes, 'sdfsfsdf');\n  const dict = {}; // votes.forEach(vote => {\n  //     if (vote.receiverID in dict) {\n  //         dict[vote.receiverID] = dict[vote.receiverID] + vote.value\n  //     } else {\n  //         dict[vote.receiverID] = vote.value\n  //     }\n  // })\n  // var arr = []\n  // console.log(dict)\n  // for (let key in dict) {\n  //     var obj = { uid: key, score: dict[key] }\n  //     arr.push(obj)\n  // }\n  // arr = arr.sort((a, b) => {\n  //     if (a.score > b.score) {\n  //         return -1\n  //     } return 1\n  // })\n\n  var myPosition;\n  var myScore;\n  arr.forEach((item, index) => {\n    if (item.uid === myUID) {\n      myPosition = index + 1;\n      myScore = item.score;\n    }\n  }); // if you've received no votes\n\n  if (!myPosition) {\n    return arr.length + 1;\n  }\n\n  return {\n    myPos: myPosition,\n    myScore: myScore\n  };\n};\n\nexport default {\n  myPlaceFinder: myPlaceFinder\n};","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubTools/HubTools.js"],"names":["myPlaceFinder","votes","myUID","console","log","dict","myPosition","myScore","arr","forEach","item","index","uid","score","length","myPos"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,UAAnB;AACA,QAAMI,IAAI,GAAG,EAAb,CAFoC,CAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,UAAJ;AACA,MAAIC,OAAJ;AAEAC,EAAAA,GAAG,CAACC,OAAJ,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,QAAID,IAAI,CAACE,GAAL,KAAaV,KAAjB,EAAwB;AACpBI,MAAAA,UAAU,GAAGK,KAAK,GAAG,CAArB;AACAJ,MAAAA,OAAO,GAAGG,IAAI,CAACG,KAAf;AACH;AACJ,GALD,EAxBoC,CA8BpC;;AACA,MAAI,CAACP,UAAL,EAAiB;AACb,WAAOE,GAAG,CAACM,MAAJ,GAAa,CAApB;AACH;;AACD,SAAO;AACHC,IAAAA,KAAK,EAAET,UADJ;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CAtCD;;AAwCA,eAAe;AACXP,EAAAA,aAAa,EAAEA;AADJ,CAAf","sourcesContent":["const myPlaceFinder = (votes, myUID) => {\n    console.log(votes, 'sdfsfsdf')\n    const dict = {}\n    // votes.forEach(vote => {\n    //     if (vote.receiverID in dict) {\n    //         dict[vote.receiverID] = dict[vote.receiverID] + vote.value\n    //     } else {\n    //         dict[vote.receiverID] = vote.value\n    //     }\n    // })\n    // var arr = []\n    // console.log(dict)\n    // for (let key in dict) {\n    //     var obj = { uid: key, score: dict[key] }\n    //     arr.push(obj)\n    // }\n    // arr = arr.sort((a, b) => {\n    //     if (a.score > b.score) {\n    //         return -1\n    //     } return 1\n    // })\n    var myPosition\n    var myScore\n    \n    arr.forEach((item, index) => {\n        if (item.uid === myUID) {\n            myPosition = index + 1\n            myScore = item.score\n        }\n    })\n    // if you've received no votes\n    if (!myPosition) {\n        return arr.length + 1\n    }\n    return {\n        myPos: myPosition,\n        myScore: myScore\n    }\n}\n\nexport default {\n    myPlaceFinder: myPlaceFinder\n}\n\n"]},"metadata":{},"sourceType":"module"}