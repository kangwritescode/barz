{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport './ManyView.css';\nimport ManyPost from './ManyPost/ManyPost';\nimport timeDict from '../../../Wordsmiths/WordSmithsTools/timeDict';\nimport Turntable from '../../../../components/Scribble/Turntable/Turntable';\nimport Commenter from './Commenter/Commenter';\nimport Community from './Community/Community';\nimport DeleteComment from '../../../../components/Scribble/MyBars/ViewedBar/DeleteComment/DeleteComment';\n\nclass ManyView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissions: [],\n      votes: [],\n      comments: [],\n      postSelected: false,\n      selectedPost: null,\n      showDeleteComment: false,\n      cid: null\n    };\n\n    this.componentDidMount = () => {\n      this.fetchSubmissions();\n      this.fetchVotes();\n      this.fetchSubmissionComments();\n      document.addEventListener('click', this.toggleCommenter);\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('click', this.toggleCommenter);\n    };\n\n    this.toggleCommenter = event => {\n      this.props.closesCommenter.forEach(className => {\n        if (event.target.classList.contains(className)) {\n          this.setState(_objectSpread({}, this.state, {\n            postSelected: false\n          }));\n        }\n      });\n    };\n\n    this.toggleDeleteCommentModal = (bool, cid) => {\n      this.setState(_objectSpread({}, this.state, {\n        showDeleteComment: bool,\n        cid: cid\n      }));\n    };\n\n    this.fetchSubmissionComments = () => {\n      const db = firebase.firestore();\n      db.collection('postComments').onSnapshot(snapshot => {\n        var comments = [];\n\n        for (var comment of snapshot.docs) {\n          comment = _objectSpread({}, comment.data(), {\n            cid: comment.id\n          });\n          comments.push(comment);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          comments: comments\n        }));\n      });\n    };\n\n    this.fetchSubmissions = () => {\n      const db = firebase.firestore();\n      db.collection('submissions').onSnapshot(snapshot => {\n        var submissions = [];\n\n        for (var submission of snapshot.docs) {\n          submission = _objectSpread({}, submission.data(), {\n            pid: submission.id\n          });\n          submissions.push(submission);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          submissions: submissions\n        }));\n      });\n    };\n\n    this.fetchVotes = () => {\n      var db = firebase.firestore();\n      db.collection('postVotes').onSnapshot(querySnapshot => {\n        const votes = [];\n        querySnapshot.forEach(doc => {\n          var vote = _objectSpread({}, doc.data(), {\n            vid: doc.id\n          });\n\n          votes.push(vote);\n        });\n        this.setState(_objectSpread({}, this.state, {\n          votes: votes\n        }));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.submissionLikes = pid => {\n      var votes = Object.values(this.state.votes);\n      var postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1);\n      console.log(postVotes);\n      return postVotes.length;\n    };\n\n    this.submissionComments = pid => {\n      var comments = [...this.state.comments];\n      var postComments = comments.filter(comment => comment.pid === pid);\n      return postComments.length;\n    };\n\n    this.sort_submissions = submissions => {\n      submissions = [...submissions];\n\n      switch (this.props.sort) {\n        case 'Newest':\n          submissions = submissions.sort((a, b) => {\n            var first = a.createdOn.toDate();\n            var second = b.createdOn.toDate();\n            return first > second ? -1 : 1;\n          });\n          break;\n\n        case 'Oldest':\n          submissions = submissions.sort((a, b) => {\n            var first = a.createdOn.toDate();\n            var second = b.createdOn.toDate();\n            return first < second ? -1 : 1;\n          });\n          break;\n\n        case 'Likes':\n          submissions = submissions.sort((a, b) => {\n            var aVotes = this.submissionLikes(a.pid);\n            var bVotes = this.submissionLikes(b.pid);\n            return aVotes > bVotes ? -1 : 1;\n          });\n          break;\n\n        case 'Comments':\n          submissions = submissions.sort((a, b) => {\n            var aComments = this.submissionComments(a.pid);\n            var bComments = this.submissionComments(b.pid);\n            return aComments > bComments ? -1 : 1;\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return submissions;\n    };\n\n    this.filter_submissions = submissions => {\n      submissions = [...submissions]; // Voted / Unvoted filter\n\n      if (this.props.filter !== 'All Posts') {\n        var votes = this.state.votes;\n        var myVotes = votes.filter(vote => vote.voterID === this.props.uid);\n        submissions = submissions.filter(submission => {\n          var thisVotes = myVotes.filter(vote => vote.pid === submission.pid);\n          var unvoted = true;\n          thisVotes.forEach(vote => {\n            if (vote.value === 1 || vote.value === -1) {\n              unvoted = false;\n            }\n          });\n\n          if (this.props.filter === 'Unvoted') {\n            return unvoted;\n          } else {\n            return !unvoted;\n          }\n        });\n      } // Coast filter\n\n\n      if (this.props.coast !== 'All Coasts') {\n        switch (this.props.coast) {\n          case 'West':\n            submissions = submissions.filter(submission => submission.address.region === 'West');\n            break;\n\n          case 'East':\n            submissions = submissions.filter(submission => submission.address.region === 'East');\n            break;\n\n          case 'South':\n            submissions = submissions.filter(submission => submission.address.region === 'South');\n            break;\n\n          case 'Midwest':\n            submissions = submissions.filter(submission => submission.address.region === 'Midwest');\n            break;\n\n          default:\n            break;\n        }\n      } // Time filter\n\n\n      submissions = submissions.filter(submission => {\n        var now = new Date();\n        var passedMilliseconds = now - submission.createdOn.toDate().getTime();\n        var passedDays = passedMilliseconds / 1000 / 60 / 60 / 24;\n        return passedDays < timeDict[this.props.time];\n      });\n      return submissions;\n    };\n\n    this.selectPost = pid => {\n      var post = this.state.submissions.filter(submission => submission.pid === pid);\n      post = post[0];\n      this.setState({\n        postSelected: true,\n        selectedPost: post\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.votes);\n    var submissions = [...this.state.submissions];\n    submissions = this.sort_submissions(submissions);\n    submissions = this.filter_submissions(submissions);\n    var manyPosts = null;\n\n    if (submissions.length > 0) {\n      manyPosts = submissions.map((submission, index) => {\n        return React.createElement(ManyPost, Object.assign({\n          key: submission.pid,\n          comments: this.state.comments.filter(comment => comment.pid === submission.pid),\n          index: index,\n          selectPost: this.selectPost,\n          votes: this.state.votes.filter(vote => vote.pid === submission.pid)\n        }, submission, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"many-view-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.state.showDeleteComment ? React.createElement(DeleteComment, {\n      cid: this.state.cid,\n      toggleDeleteCommentModal: this.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"many-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"many-view__posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, manyPosts), React.createElement(\"div\", {\n      className: \"many-view__modules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticky-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Commenter, {\n      customStyle: {\n        body: {\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        },\n        header: {\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        }\n      },\n      selectedPost: this.state.selectedPost,\n      postSelected: this.state.postSelected,\n      comments: this.state.comments,\n      toggleDeleteCommentModal: this.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Community, {\n      submissions: this.state.submissions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"turntable-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Turntable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nManyView.defaultProps = {\n  closesCommenter: [\"many-view__posts\", \"many-view\", \"many-view__modules\", \"sticky-wrapper\", \"Community\", 'many-view-layout']\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(ManyView);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyView.js"],"names":["React","Component","firebase","connect","ManyPost","timeDict","Turntable","Commenter","Community","DeleteComment","ManyView","state","submissions","votes","comments","postSelected","selectedPost","showDeleteComment","cid","componentDidMount","fetchSubmissions","fetchVotes","fetchSubmissionComments","document","addEventListener","toggleCommenter","componentWillUnmount","removeEventListener","event","props","closesCommenter","forEach","className","target","classList","contains","setState","toggleDeleteCommentModal","bool","db","firestore","collection","onSnapshot","snapshot","comment","docs","data","id","push","submission","pid","querySnapshot","doc","vote","vid","err","console","log","submissionLikes","Object","values","postVotes","filter","value","length","submissionComments","postComments","sort_submissions","sort","a","b","first","createdOn","toDate","second","aVotes","bVotes","aComments","bComments","filter_submissions","myVotes","voterID","uid","thisVotes","unvoted","coast","address","region","now","Date","passedMilliseconds","getTime","passedDays","time","selectPost","post","render","manyPosts","map","index","body","backgroundColor","header","defaultProps","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,oBAAP;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,aAAP,MAA0B,8EAA1B;;AAGA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAc7BU,KAd6B,GAcrB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,YAAY,EAAE,KAJV;AAKJC,MAAAA,YAAY,EAAE,IALV;AAMJC,MAAAA,iBAAiB,EAAE,KANf;AAOJC,MAAAA,GAAG,EAAE;AAPD,KAdqB;;AAAA,SAwB7BC,iBAxB6B,GAwBT,MAAM;AACtB,WAAKC,gBAAL;AACA,WAAKC,UAAL;AACA,WAAKC,uBAAL;AACAC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,eAAxC;AACH,KA7B4B;;AAAA,SA8B7BC,oBA9B6B,GA8BN,MAAM;AACzBH,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKF,eAA3C;AACH,KAhC4B;;AAAA,SAqC7BA,eArC6B,GAqCVG,KAAD,IAAW;AACzB,WAAKC,KAAL,CAAWC,eAAX,CAA2BC,OAA3B,CAAmCC,SAAS,IAAI;AAC5C,YAAIJ,KAAK,CAACK,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgCH,SAAhC,CAAJ,EAAgD;AAC5C,eAAKI,QAAL,mBACO,KAAKzB,KADZ;AAEII,YAAAA,YAAY,EAAE;AAFlB;AAIH;AACJ,OAPD;AAQH,KA9C4B;;AAAA,SAgD7BsB,wBAhD6B,GAgDF,CAACC,IAAD,EAAOpB,GAAP,KAAe;AACtC,WAAKkB,QAAL,mBACO,KAAKzB,KADZ;AAEIM,QAAAA,iBAAiB,EAAEqB,IAFvB;AAGIpB,QAAAA,GAAG,EAAEA;AAHT;AAKH,KAtD4B;;AAAA,SAyD7BI,uBAzD6B,GAyDH,MAAM;AAC5B,YAAMiB,EAAE,GAAGrC,QAAQ,CAACsC,SAAT,EAAX;AACAD,MAAAA,EAAE,CAACE,UAAH,CAAc,cAAd,EAA8BC,UAA9B,CAA0CC,QAAD,IAAc;AACnD,YAAI7B,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAI8B,OAAT,IAAoBD,QAAQ,CAACE,IAA7B,EAAmC;AAC/BD,UAAAA,OAAO,qBACAA,OAAO,CAACE,IAAR,EADA;AAEH5B,YAAAA,GAAG,EAAE0B,OAAO,CAACG;AAFV,YAAP;AAIAjC,UAAAA,QAAQ,CAACkC,IAAT,CAAcJ,OAAd;AACH;;AACD,aAAKR,QAAL,mBACO,KAAKzB,KADZ;AAEIG,UAAAA,QAAQ,EAAEA;AAFd;AAKH,OAdD;AAeH,KA1E4B;;AAAA,SA4E7BM,gBA5E6B,GA4EV,MAAM;AACrB,YAAMmB,EAAE,GAAGrC,QAAQ,CAACsC,SAAT,EAAX;AACAD,MAAAA,EAAE,CAACE,UAAH,CAAc,aAAd,EAA6BC,UAA7B,CAAyCC,QAAD,IAAc;AAClD,YAAI/B,WAAW,GAAG,EAAlB;;AACA,aAAK,IAAIqC,UAAT,IAAuBN,QAAQ,CAACE,IAAhC,EAAsC;AAClCI,UAAAA,UAAU,qBACHA,UAAU,CAACH,IAAX,EADG;AAENI,YAAAA,GAAG,EAAED,UAAU,CAACF;AAFV,YAAV;AAIAnC,UAAAA,WAAW,CAACoC,IAAZ,CAAiBC,UAAjB;AACH;;AACD,aAAKb,QAAL,mBACO,KAAKzB,KADZ;AAEIC,UAAAA,WAAW,EAAEA;AAFjB;AAKH,OAdD;AAeH,KA7F4B;;AAAA,SA+F7BS,UA/F6B,GA+FhB,MAAM;AACf,UAAIkB,EAAE,GAAGrC,QAAQ,CAACsC,SAAT,EAAT;AAEAD,MAAAA,EAAE,CAACE,UAAH,CAAc,WAAd,EAA2BC,UAA3B,CAAsCS,aAAa,IAAI;AACnD,cAAMtC,KAAK,GAAG,EAAd;AACAsC,QAAAA,aAAa,CAACpB,OAAd,CAAuBqB,GAAD,IAAS;AAC3B,cAAIC,IAAI,qBACDD,GAAG,CAACN,IAAJ,EADC;AAEJQ,YAAAA,GAAG,EAAEF,GAAG,CAACL;AAFL,YAAR;;AAIAlC,UAAAA,KAAK,CAACmC,IAAN,CAAWK,IAAX;AACH,SAND;AAOA,aAAKjB,QAAL,mBACO,KAAKzB,KADZ;AAEIE,UAAAA,KAAK,EAAEA;AAFX;AAIH,OAbD,EAaG0C,GAAG,IAAI;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAfD;AAgBH,KAlH4B;;AAAA,SAsH7BG,eAtH6B,GAsHVR,GAAD,IAAS;AACvB,UAAIrC,KAAK,GAAG8C,MAAM,CAACC,MAAP,CAAc,KAAKjD,KAAL,CAAWE,KAAzB,CAAZ;AACA,UAAIgD,SAAS,GAAGhD,KAAK,CAACiD,MAAN,CAAaT,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaA,GAAb,IAAoBG,IAAI,CAACU,KAAL,KAAe,CAAxD,CAAhB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACA,aAAOA,SAAS,CAACG,MAAjB;AACH,KA3H4B;;AAAA,SA6H7BC,kBA7H6B,GA6HPf,GAAD,IAAS;AAC1B,UAAIpC,QAAQ,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,CAAf;AACA,UAAIoD,YAAY,GAAGpD,QAAQ,CAACgD,MAAT,CAAgBlB,OAAO,IAAIA,OAAO,CAACM,GAAR,KAAgBA,GAA3C,CAAnB;AACA,aAAOgB,YAAY,CAACF,MAApB;AACH,KAjI4B;;AAAA,SAmI7BG,gBAnI6B,GAmITvD,WAAD,IAAiB;AAChCA,MAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,CAAd;;AACA,cAAQ,KAAKiB,KAAL,CAAWuC,IAAnB;AACI,aAAK,QAAL;AACIxD,UAAAA,WAAW,GAAGA,WAAW,CAACwD,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,gBAAIC,KAAK,GAAGF,CAAC,CAACG,SAAF,CAAYC,MAAZ,EAAZ;AACA,gBAAIC,MAAM,GAAGJ,CAAC,CAACE,SAAF,CAAYC,MAAZ,EAAb;AACA,mBAAOF,KAAK,GAAGG,MAAR,GAAiB,CAAC,CAAlB,GAAsB,CAA7B;AACH,WAJa,CAAd;AAKA;;AACJ,aAAK,QAAL;AACI9D,UAAAA,WAAW,GAAGA,WAAW,CAACwD,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,gBAAIC,KAAK,GAAGF,CAAC,CAACG,SAAF,CAAYC,MAAZ,EAAZ;AACA,gBAAIC,MAAM,GAAGJ,CAAC,CAACE,SAAF,CAAYC,MAAZ,EAAb;AACA,mBAAOF,KAAK,GAAGG,MAAR,GAAiB,CAAC,CAAlB,GAAsB,CAA7B;AACH,WAJa,CAAd;AAKA;;AACJ,aAAK,OAAL;AACI9D,UAAAA,WAAW,GAAGA,WAAW,CAACwD,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,gBAAIK,MAAM,GAAG,KAAKjB,eAAL,CAAqBW,CAAC,CAACnB,GAAvB,CAAb;AACA,gBAAI0B,MAAM,GAAG,KAAKlB,eAAL,CAAqBY,CAAC,CAACpB,GAAvB,CAAb;AACA,mBAAOyB,MAAM,GAAGC,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAA9B;AACH,WAJa,CAAd;AAKA;;AACJ,aAAK,UAAL;AACIhE,UAAAA,WAAW,GAAGA,WAAW,CAACwD,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrC,gBAAIO,SAAS,GAAG,KAAKZ,kBAAL,CAAwBI,CAAC,CAACnB,GAA1B,CAAhB;AACA,gBAAI4B,SAAS,GAAG,KAAKb,kBAAL,CAAwBK,CAAC,CAACpB,GAA1B,CAAhB;AACA,mBAAO2B,SAAS,GAAGC,SAAZ,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH,WAJa,CAAd;AAKA;;AACJ;AACI;AA9BR;;AAgCA,aAAOlE,WAAP;AACH,KAtK4B;;AAAA,SAwK7BmE,kBAxK6B,GAwKPnE,WAAD,IAAiB;AAClCA,MAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,CAAd,CADkC,CAGlC;;AACA,UAAI,KAAKiB,KAAL,CAAWiC,MAAX,KAAsB,WAA1B,EAAuC;AACnC,YAAIjD,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,YAAImE,OAAO,GAAGnE,KAAK,CAACiD,MAAN,CAAaT,IAAI,IAAIA,IAAI,CAAC4B,OAAL,KAAiB,KAAKpD,KAAL,CAAWqD,GAAjD,CAAd;AACAtE,QAAAA,WAAW,GAAGA,WAAW,CACpBkD,MADS,CACFb,UAAU,IAAI;AAClB,cAAIkC,SAAS,GAAGH,OAAO,CAAClB,MAAR,CAAeT,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaD,UAAU,CAACC,GAA/C,CAAhB;AACA,cAAIkC,OAAO,GAAG,IAAd;AACAD,UAAAA,SAAS,CAACpD,OAAV,CAAkBsB,IAAI,IAAI;AACtB,gBAAIA,IAAI,CAACU,KAAL,KAAe,CAAf,IAAoBV,IAAI,CAACU,KAAL,KAAe,CAAC,CAAxC,EAA2C;AACvCqB,cAAAA,OAAO,GAAG,KAAV;AACH;AACJ,WAJD;;AAKA,cAAI,KAAKvD,KAAL,CAAWiC,MAAX,KAAsB,SAA1B,EAAqC;AACjC,mBAAOsB,OAAP;AACH,WAFD,MAEO;AACH,mBAAO,CAACA,OAAR;AACH;AACJ,SAdS,CAAd;AAeH,OAtBiC,CAuBlC;;;AACA,UAAI,KAAKvD,KAAL,CAAWwD,KAAX,KAAqB,YAAzB,EAAuC;AACnC,gBAAQ,KAAKxD,KAAL,CAAWwD,KAAnB;AACI,eAAK,MAAL;AACIzE,YAAAA,WAAW,GAAGA,WAAW,CAACkD,MAAZ,CAAmBb,UAAU,IAAIA,UAAU,CAACqC,OAAX,CAAmBC,MAAnB,KAA8B,MAA/D,CAAd;AACA;;AACJ,eAAK,MAAL;AACI3E,YAAAA,WAAW,GAAGA,WAAW,CAACkD,MAAZ,CAAmBb,UAAU,IAAIA,UAAU,CAACqC,OAAX,CAAmBC,MAAnB,KAA8B,MAA/D,CAAd;AACA;;AACJ,eAAK,OAAL;AACI3E,YAAAA,WAAW,GAAGA,WAAW,CAACkD,MAAZ,CAAmBb,UAAU,IAAIA,UAAU,CAACqC,OAAX,CAAmBC,MAAnB,KAA8B,OAA/D,CAAd;AACA;;AACJ,eAAK,SAAL;AACI3E,YAAAA,WAAW,GAAGA,WAAW,CAACkD,MAAZ,CAAmBb,UAAU,IAAIA,UAAU,CAACqC,OAAX,CAAmBC,MAAnB,KAA8B,SAA/D,CAAd;AACA;;AACJ;AACI;AAdR;AAgBH,OAzCiC,CA0ClC;;;AACA3E,MAAAA,WAAW,GAAGA,WAAW,CAACkD,MAAZ,CAAmBb,UAAU,IAAI;AAC3C,YAAIuC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,YAAIC,kBAAkB,GAAGF,GAAG,GAAGvC,UAAU,CAACuB,SAAX,CAAqBC,MAArB,GAA8BkB,OAA9B,EAA/B;AACA,YAAIC,UAAU,GAAIF,kBAAkB,GAAG,IAArB,GAA4B,EAA5B,GAAiC,EAAjC,GAAsC,EAAxD;AACA,eAAOE,UAAU,GAAGvF,QAAQ,CAAC,KAAKwB,KAAL,CAAWgE,IAAZ,CAA5B;AACH,OALa,CAAd;AAMA,aAAOjF,WAAP;AACH,KA1N4B;;AAAA,SA6N7BkF,UA7N6B,GA6Nf5C,GAAD,IAAS;AAClB,UAAI6C,IAAI,GAAG,KAAKpF,KAAL,CAAWC,WAAX,CAAuBkD,MAAvB,CAA8Bb,UAAU,IAAIA,UAAU,CAACC,GAAX,KAAmBA,GAA/D,CAAX;AACA6C,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACA,WAAK3D,QAAL,CAAc;AACVrB,QAAAA,YAAY,EAAE,IADJ;AAEVC,QAAAA,YAAY,EAAE+E;AAFJ,OAAd;AAIH,KApO4B;AAAA;;AAuO7BC,EAAAA,MAAM,GAAG;AAELxC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9C,KAAL,CAAWE,KAAvB;AAEA,QAAID,WAAW,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,WAAf,CAAlB;AACAA,IAAAA,WAAW,GAAG,KAAKuD,gBAAL,CAAsBvD,WAAtB,CAAd;AACAA,IAAAA,WAAW,GAAG,KAAKmE,kBAAL,CAAwBnE,WAAxB,CAAd;AACA,QAAIqF,SAAS,GAAG,IAAhB;;AACA,QAAIrF,WAAW,CAACoD,MAAZ,GAAqB,CAAzB,EAA4B;AACxBiC,MAAAA,SAAS,GAAGrF,WAAW,CAACsF,GAAZ,CAAgB,CAACjD,UAAD,EAAakD,KAAb,KAAuB;AAE/C,eACI,oBAAC,QAAD;AACI,UAAA,GAAG,EAAElD,UAAU,CAACC,GADpB;AAEI,UAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWG,QAAX,CAAoBgD,MAApB,CAA2BlB,OAAO,IAAIA,OAAO,CAACM,GAAR,KAAgBD,UAAU,CAACC,GAAjE,CAFd;AAGI,UAAA,KAAK,EAAEiD,KAHX;AAII,UAAA,UAAU,EAAE,KAAKL,UAJrB;AAKI,UAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWE,KAAX,CAAiBiD,MAAjB,CAAwBT,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaD,UAAU,CAACC,GAAxD;AALX,WAMQD,UANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,OAXW,CAAZ;AAYH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtC,KAAL,CAAWM,iBAAX,GAA+B,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,GAA/B;AAAoC,MAAA,wBAAwB,EAAE,KAAKmB,wBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,GAAgI,IADrI,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK4D,SADL,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAE;AAACG,QAAAA,IAAI,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAP;AAAuDC,QAAAA,MAAM,EAAE;AAACD,UAAAA,eAAe,EAAE;AAAlB;AAA/D,OADjB;AAEI,MAAA,YAAY,EAAE,KAAK1F,KAAL,CAAWK,YAF7B;AAGI,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWI,YAH7B;AAII,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWG,QAJzB;AAKI,MAAA,wBAAwB,EAAE,KAAKuB,wBALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAK1B,KAAL,CAAWC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ,CAJJ,CAFJ,CADJ;AAyBH;;AAvR4B;;AAA3BF,Q,CAEK6F,Y,GAAe;AAClBzE,EAAAA,eAAe,EAAE,CACb,kBADa,EAEb,WAFa,EAGb,oBAHa,EAIb,gBAJa,EAKb,WALa,EAMb,kBANa;AADC,C;;AAwR1B,MAAM0E,eAAe,GAAG7F,KAAK,IAAI;AAC7B,SAAO;AACHuE,IAAAA,GAAG,EAAEvE,KAAK,CAACuE;AADR,GAAP;AAGH,CAJD;;AAMA,eAAe/E,OAAO,CAACqG,eAAD,EAAkB,IAAlB,CAAP,CAA+B9F,QAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport './ManyView.css'\nimport ManyPost from './ManyPost/ManyPost'\nimport timeDict from '../../../Wordsmiths/WordSmithsTools/timeDict'\nimport Turntable from '../../../../components/Scribble/Turntable/Turntable'\nimport Commenter from './Commenter/Commenter'\nimport Community from './Community/Community'\nimport DeleteComment from '../../../../components/Scribble/MyBars/ViewedBar/DeleteComment/DeleteComment'\n\n\nclass ManyView extends Component {\n\n    static defaultProps = {\n        closesCommenter: [\n            \"many-view__posts\",\n            \"many-view\",\n            \"many-view__modules\",\n            \"sticky-wrapper\",\n            \"Community\",\n            'many-view-layout'\n        ]\n\n    }\n\n    state = {\n        submissions: [],\n        votes: [],\n        comments: [],\n        postSelected: false,\n        selectedPost: null,\n        showDeleteComment: false,\n        cid: null\n    }\n\n    componentDidMount = () => {\n        this.fetchSubmissions()\n        this.fetchVotes()\n        this.fetchSubmissionComments()\n        document.addEventListener('click', this.toggleCommenter)\n    }\n    componentWillUnmount = () => {\n        document.removeEventListener('click', this.toggleCommenter)\n    }\n\n\n\n\n    toggleCommenter = (event) => {\n        this.props.closesCommenter.forEach(className => {\n            if (event.target.classList.contains(className)) {\n                this.setState({\n                    ...this.state,\n                    postSelected: false\n                })\n            }\n        });   \n    }\n\n    toggleDeleteCommentModal = (bool, cid) => {\n        this.setState({\n            ...this.state,\n            showDeleteComment: bool,\n            cid: cid\n        })\n    }\n\n\n    fetchSubmissionComments = () => {\n        const db = firebase.firestore()\n        db.collection('postComments').onSnapshot((snapshot) => {\n            var comments = []\n            for (var comment of snapshot.docs) {\n                comment = {\n                    ...comment.data(),\n                    cid: comment.id\n                }\n                comments.push(comment)\n            }\n            this.setState({\n                ...this.state,\n                comments: comments\n            })\n\n        })\n    }\n\n    fetchSubmissions = () => {\n        const db = firebase.firestore()\n        db.collection('submissions').onSnapshot((snapshot) => {\n            var submissions = []\n            for (var submission of snapshot.docs) {\n                submission = {\n                    ...submission.data(),\n                    pid: submission.id\n                }\n                submissions.push(submission)\n            }\n            this.setState({\n                ...this.state,\n                submissions: submissions\n            })\n\n        })\n    }\n\n    fetchVotes = () => {\n        var db = firebase.firestore()\n\n        db.collection('postVotes').onSnapshot(querySnapshot => {\n            const votes = []\n            querySnapshot.forEach((doc) => {\n                var vote = {\n                    ...doc.data(),\n                    vid: doc.id\n                }\n                votes.push(vote)\n            })\n            this.setState({\n                ...this.state,\n                votes: votes\n            })\n        }, err => {\n            console.log(err)\n        })\n    }\n\n\n\n    submissionLikes = (pid) => {\n        var votes = Object.values(this.state.votes)\n        var postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1)\n        console.log(postVotes)\n        return postVotes.length\n    }\n\n    submissionComments = (pid) => {\n        var comments = [...this.state.comments]\n        var postComments = comments.filter(comment => comment.pid === pid)\n        return postComments.length\n    }\n\n    sort_submissions = (submissions) => {\n        submissions = [...submissions]\n        switch (this.props.sort) {\n            case 'Newest':\n                submissions = submissions.sort((a, b) => {\n                    var first = a.createdOn.toDate()\n                    var second = b.createdOn.toDate()\n                    return first > second ? -1 : 1\n                })\n                break;\n            case 'Oldest':\n                submissions = submissions.sort((a, b) => {\n                    var first = a.createdOn.toDate()\n                    var second = b.createdOn.toDate()\n                    return first < second ? -1 : 1\n                })\n                break;\n            case 'Likes':\n                submissions = submissions.sort((a, b) => {\n                    var aVotes = this.submissionLikes(a.pid)\n                    var bVotes = this.submissionLikes(b.pid)\n                    return aVotes > bVotes ? -1 : 1\n                })\n                break;\n            case 'Comments':\n                submissions = submissions.sort((a, b) => {\n                    var aComments = this.submissionComments(a.pid)\n                    var bComments = this.submissionComments(b.pid)\n                    return aComments > bComments ? -1 : 1\n                })\n                break;\n            default:\n                break;\n        }\n        return submissions\n    }\n\n    filter_submissions = (submissions) => {\n        submissions = [...submissions]\n\n        // Voted / Unvoted filter\n        if (this.props.filter !== 'All Posts') {\n            var votes = this.state.votes\n            var myVotes = votes.filter(vote => vote.voterID === this.props.uid)\n            submissions = submissions\n                .filter(submission => {\n                    var thisVotes = myVotes.filter(vote => vote.pid === submission.pid)\n                    var unvoted = true\n                    thisVotes.forEach(vote => {\n                        if (vote.value === 1 || vote.value === -1) {\n                            unvoted = false\n                        }\n                    })\n                    if (this.props.filter === 'Unvoted') {\n                        return unvoted\n                    } else {\n                        return !unvoted\n                    }\n                })\n        }\n        // Coast filter\n        if (this.props.coast !== 'All Coasts') {\n            switch (this.props.coast) {\n                case 'West':\n                    submissions = submissions.filter(submission => submission.address.region === 'West')\n                    break;\n                case 'East':\n                    submissions = submissions.filter(submission => submission.address.region === 'East')\n                    break;\n                case 'South':\n                    submissions = submissions.filter(submission => submission.address.region === 'South')\n                    break;\n                case 'Midwest':\n                    submissions = submissions.filter(submission => submission.address.region === 'Midwest')\n                    break;\n                default:\n                    break;\n            }\n        }\n        // Time filter\n        submissions = submissions.filter(submission => {\n            var now = new Date()\n            var passedMilliseconds = now - submission.createdOn.toDate().getTime()\n            var passedDays = (passedMilliseconds / 1000 / 60 / 60 / 24)\n            return passedDays < timeDict[this.props.time]\n        })\n        return submissions\n    }\n\n\n    selectPost = (pid) => {\n        var post = this.state.submissions.filter(submission => submission.pid === pid)\n        post = post[0]\n        this.setState({\n            postSelected: true,\n            selectedPost: post\n        })\n    }\n\n\n    render() {\n\n        console.log(this.state.votes)\n\n        var submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n        var manyPosts = null\n        if (submissions.length > 0) {\n            manyPosts = submissions.map((submission, index) => {\n\n                return (\n                    <ManyPost\n                        key={submission.pid}\n                        comments={this.state.comments.filter(comment => comment.pid === submission.pid)}\n                        index={index}\n                        selectPost={this.selectPost}\n                        votes={this.state.votes.filter(vote => vote.pid === submission.pid)}\n                        {...submission} />\n                )\n            })\n        }\n\n        return (\n            <div className='many-view-layout'>\n                {this.state.showDeleteComment ? <DeleteComment cid={this.state.cid} toggleDeleteCommentModal={this.toggleDeleteCommentModal}/> : null}\n                <div className='many-view'>\n                    <div className='many-view__posts'>\n                        {manyPosts}\n                    </div>\n                    <div className='many-view__modules'>\n                        <div className='sticky-wrapper'>\n                            <Commenter\n                                customStyle={{body: {backgroundColor: 'rgba(255, 255, 255, 0.95)'}, header: {backgroundColor: 'rgba(255, 255, 255, 0.95)'}}}\n                                selectedPost={this.state.selectedPost}\n                                postSelected={this.state.postSelected}\n                                comments={this.state.comments}\n                                toggleDeleteCommentModal={this.toggleDeleteCommentModal} />\n                            <Community submissions={this.state.submissions} />\n                            <div className='turntable-wrapper'>\n                                <Turntable />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(ManyView)\n"]},"metadata":{},"sourceType":"module"}