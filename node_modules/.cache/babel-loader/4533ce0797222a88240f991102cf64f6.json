{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/Scribble.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport * as actionTypes from '../../store/actions';\nimport './Scribble.css';\nimport vinyl from '../../assets/vinyl.mov';\nimport vinyIMG from '../../assets/vinylIMG.png';\nimport Post from './Post/Post';\nimport MyBars from './MyBars/MyBars';\nimport Toolkit from './Toolkit/Toolkit';\nimport Turntable from './Turntable/Turntable';\nimport nafla from '../../assets/nafla-blows.m4v';\n\nclass Scribble extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewFocus: 'Post'\n    };\n\n    this.toggleView = () => {\n      if (this.state.viewFocus === 'Post') {\n        this.setState({\n          viewFocus: 'MyBars'\n        });\n      } else if (this.state.viewFocus === 'MyBars') {\n        this.setState({\n          viewFocus: 'Post'\n        });\n      }\n\n      return;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Scribble\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"backup-img\",\n      src: vinyIMG,\n      alt: \"alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      src: nafla,\n      autoPlay: true,\n      loop: true,\n      playsInline: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(MyBars, {\n      focused: this.state.viewFocus,\n      toggle: this.toggleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Post, {\n      focused: this.state.viewFocus,\n      toggle: this.toggleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Toolkit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"scribble-turntable-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Turntable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nlet mapStatetoProps = state => {\n  return {\n    musicURL: state.musicURL,\n    volume: state.volume,\n    playing: state.playing,\n    allStations: _objectSpread({}, state.allStations)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    playMusic: () => dispatch({\n      type: actionTypes.PLAY_MUSIC\n    }),\n    stopMusic: () => dispatch({\n      type: actionTypes.STOP_MUSIC\n    }),\n    changeURL: newURL => dispatch({\n      type: actionTypes.CHANGE_MUSIC_URL,\n      musicURL: newURL\n    }),\n    changeVol: volume => dispatch({\n      type: actionTypes.CHANGE_VOLUME,\n      volume: volume\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/Scribble.js"],"names":["React","Component","connect","actionTypes","vinyl","vinyIMG","Post","MyBars","Toolkit","Turntable","nafla","Scribble","state","viewFocus","toggleView","setState","render","mapStatetoProps","musicURL","volume","playing","allStations","mapDispatchToProps","dispatch","playMusic","type","PLAY_MUSIC","stopMusic","STOP_MUSIC","changeURL","newURL","CHANGE_MUSIC_URL","changeVol","CHANGE_VOLUME"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport * as actionTypes from '../../store/actions'\nimport './Scribble.css'\nimport vinyl from '../../assets/vinyl.mov'\nimport vinyIMG from '../../assets/vinylIMG.png'\nimport Post from './Post/Post'\nimport MyBars from './MyBars/MyBars'\nimport Toolkit from './Toolkit/Toolkit'\nimport Turntable from './Turntable/Turntable'\nimport nafla from '../../assets/nafla-blows.m4v'\n\n\nclass Scribble extends Component {\n\n    state = {\n        viewFocus: 'Post',\n    }\n\n    toggleView = () => {\n        if (this.state.viewFocus === 'Post') {\n            this.setState({\n                viewFocus: 'MyBars'\n            })\n        } else if (this.state.viewFocus === 'MyBars') {\n            this.setState({\n                viewFocus: 'Post'\n            })\n        }\n        return\n    }\n\n\n    render() {\n\n\n        return (\n            <div className=\"Scribble\">\n                <img id='backup-img' src={vinyIMG} alt='alt'></img>\n                <video src={nafla} autoPlay={true} loop={true} playsInline={true} muted />\n                {/* <div id=\"scribbleOverlay\" /> */}\n                <div className=\"row-one\">\n                    <MyBars focused={this.state.viewFocus} toggle={this.toggleView} />\n                    <Post focused={this.state.viewFocus} toggle={this.toggleView} />\n                    <div></div>\n                </div>\n                <div className=\"row-two\">\n                    <Toolkit />\n                    <div className='scribble-turntable-wrapper'>\n                        <Turntable />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nlet mapStatetoProps = state => {\n    return {\n        musicURL: state.musicURL,\n        volume: state.volume,\n        playing: state.playing,\n        allStations: {\n            ...state.allStations\n        }\n    }\n}\nlet mapDispatchToProps = dispatch => {\n    return {\n        playMusic: () => dispatch({ type: actionTypes.PLAY_MUSIC }),\n        stopMusic: () => dispatch({ type: actionTypes.STOP_MUSIC }),\n        changeURL: (newURL) => dispatch({ type: actionTypes.CHANGE_MUSIC_URL, musicURL: newURL }),\n        changeVol: (volume) => dispatch({ type: actionTypes.CHANGE_VOLUME, volume: volume })\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);"]},"metadata":{},"sourceType":"module"}