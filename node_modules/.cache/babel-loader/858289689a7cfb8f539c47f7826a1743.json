{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/ManyView/ManyView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport './ManyView.css';\nimport ManyPost from './ManyPost/ManyPost';\nimport timeDict from '../../Wordsmiths/WordSmithsTools/timeDict';\nimport Turntable from '../../Scribble/Turntable/Turntable';\nimport Commenter from './Commenter/Commenter';\nimport Community from './Community/Community';\nimport DeleteComment from '../../Scribble/MyBars/ViewedBar/DeleteComment/DeleteComment';\nimport CircularSpinner from '../../../components/CircularSpinner/CircularSpinner';\n\nclass ManyView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissions: [],\n      votes: [],\n      comments: [],\n      postSelected: false,\n      selectedPost: null,\n      focusedElement: null,\n      showDeleteComment: false,\n      cid: null,\n      isDoneFetching: false\n    };\n\n    this.componentDidMount = () => {\n      this.fetchSubmissions();\n      this.fetchVotes();\n      this.fetchSubmissionComments();\n      document.addEventListener('click', this.toggleCommenter);\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('click', this.toggleCommenter);\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (prevProps.sort !== this.props.sort || prevProps.filter !== this.props.filter || prevProps.view !== this.props.view || prevProps.coast !== this.props.coast || prevProps.time !== this.props.time) {\n        document.getElementById('many-view-layout').scrollTop = 0;\n      }\n    };\n\n    this.setIsDoneFetching = bool => {\n      this.setState(_objectSpread({}, this.state, {\n        isDoneFetching: bool\n      }));\n    };\n\n    this.toggleCommenter = event => {\n      this.props.closesCommenter.forEach(className => {\n        if (event.target.classList.contains(className)) {\n          if (this.state.focusedElement) {\n            this.state.focusedElement.classList.remove('focused-many-post');\n          }\n\n          this.setState(_objectSpread({}, this.state, {\n            postSelected: false,\n            focusedElement: null\n          }));\n        }\n      });\n    };\n\n    this.toggleDeleteCommentModal = (bool, cid) => {\n      this.setState(_objectSpread({}, this.state, {\n        showDeleteComment: bool,\n        cid: cid\n      }));\n    };\n\n    this.fetchSubmissionComments = () => {\n      const db = firebase.firestore();\n      db.collection('postComments').onSnapshot(snapshot => {\n        let comments = [];\n\n        for (let comment of snapshot.docs) {\n          comment = _objectSpread({}, comment.data(), {\n            cid: comment.id\n          });\n          comments.push(comment);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          comments: comments\n        }));\n      });\n    };\n\n    this.fetchSubmissions = () => {\n      const db = firebase.firestore();\n      db.collection('submissions').onSnapshot(snapshot => {\n        let submissions = [];\n\n        for (let submission of snapshot.docs) {\n          submission = _objectSpread({}, submission.data(), {\n            pid: submission.id\n          });\n          submissions.push(submission);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          submissions: submissions\n        }));\n      });\n    };\n\n    this.fetchVotes = () => {\n      let db = firebase.firestore();\n      db.collection('postVotes').onSnapshot(querySnapshot => {\n        const votes = [];\n        querySnapshot.forEach(doc => {\n          let vote = _objectSpread({}, doc.data(), {\n            vid: doc.id\n          });\n\n          votes.push(vote);\n        });\n        this.setState(_objectSpread({}, this.state, {\n          votes: votes\n        }));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.submissionLikes = pid => {\n      let votes = Object.values(this.state.votes);\n      let postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1);\n      console.log(postVotes);\n      return postVotes.length;\n    };\n\n    this.submissionComments = pid => {\n      let comments = [...this.state.comments];\n      let postComments = comments.filter(comment => comment.pid === pid);\n      return postComments.length;\n    };\n\n    this.sort_submissions = submissions => {\n      submissions = [...submissions];\n\n      switch (this.props.sort) {\n        case 'Newest':\n          submissions = submissions.sort((a, b) => {\n            let first = a.createdOn.toDate();\n            let second = b.createdOn.toDate();\n            return first > second ? -1 : 1;\n          });\n          break;\n\n        case 'Oldest':\n          submissions = submissions.sort((a, b) => {\n            let first = a.createdOn.toDate();\n            let second = b.createdOn.toDate();\n            return first < second ? -1 : 1;\n          });\n          break;\n\n        case 'Likes':\n          submissions = submissions.sort((a, b) => {\n            let aVotes = this.submissionLikes(a.pid);\n            let bVotes = this.submissionLikes(b.pid);\n            return aVotes > bVotes ? -1 : 1;\n          });\n          break;\n\n        case 'Comments':\n          submissions = submissions.sort((a, b) => {\n            let aComments = this.submissionComments(a.pid);\n            let bComments = this.submissionComments(b.pid);\n            return aComments > bComments ? -1 : 1;\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return submissions;\n    };\n\n    this.filter_submissions = submissions => {\n      submissions = [...submissions]; // Voted / Unvoted filter\n\n      if (this.props.filter !== 'All Posts') {\n        let votes = this.state.votes;\n        let myVotes = votes.filter(vote => vote.voterID === this.props.uid);\n        submissions = submissions.filter(submission => {\n          let thisVotes = myVotes.filter(vote => vote.pid === submission.pid);\n          let unvoted = true;\n          thisVotes.forEach(vote => {\n            if (vote.value === 1 || vote.value === -1) {\n              unvoted = false;\n            }\n          });\n\n          if (this.props.filter === 'Unvoted') {\n            return unvoted;\n          } else {\n            return !unvoted;\n          }\n        });\n      } // Coast filter\n\n\n      if (this.props.coast !== 'All Coasts') {\n        switch (this.props.coast) {\n          case 'West':\n            submissions = submissions.filter(submission => submission.address.region === 'West');\n            break;\n\n          case 'East':\n            submissions = submissions.filter(submission => submission.address.region === 'East');\n            break;\n\n          case 'South':\n            submissions = submissions.filter(submission => submission.address.region === 'South');\n            break;\n\n          case 'Midwest':\n            submissions = submissions.filter(submission => submission.address.region === 'Midwest');\n            break;\n\n          default:\n            break;\n        }\n      } // Time filter\n\n\n      submissions = submissions.filter(submission => {\n        let now = new Date();\n        let passedMilliseconds = now - submission.createdOn.toDate().getTime();\n        let passedDays = passedMilliseconds / 1000 / 60 / 60 / 24;\n        return passedDays < timeDict[this.props.time];\n      });\n      return submissions;\n    };\n\n    this.scrollToPost = element => {\n      var topPos = element.offsetTop;\n      document.getElementById('many-view-layout').scrollTop = topPos;\n    };\n\n    this.selectPost = pid => {\n      let post = this.state.submissions.filter(submission => submission.pid === pid);\n      post = post[0]; // if there is a focusedElement, unfocus it\n\n      if (this.state.focusedElement) {\n        this.state.focusedElement.classList.remove('focused-many-post');\n      } // focus selected element\n\n\n      var myElement = document.getElementById(\"scrollTo\".concat(pid));\n      myElement.classList.add('focused-many-post'); // scroll to selected element\n\n      this.scrollToPost(myElement);\n      this.setState({\n        postSelected: true,\n        selectedPost: post,\n        focusedElement: myElement\n      });\n    };\n  }\n\n  render() {\n    let submissions = [...this.state.submissions];\n    submissions = this.sort_submissions(submissions);\n    submissions = this.filter_submissions(submissions);\n    let manyPosts = React.createElement(CircularSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    });\n\n    if (submissions.length > 0) {\n      manyPosts = submissions.map((submission, index) => {\n        return React.createElement(ManyPost, Object.assign({\n          key: submission.pid,\n          comments: this.state.comments.filter(comment => comment.pid === submission.pid),\n          index: index,\n          selectPost: this.selectPost,\n          votes: this.state.votes.filter(vote => vote.pid === submission.pid)\n        }, submission, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"many-view-layout\",\n      id: \"many-view-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, this.state.showDeleteComment ? React.createElement(DeleteComment, {\n      cid: this.state.cid,\n      toggleDeleteCommentModal: this.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"many-view__posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, manyPosts), React.createElement(\"div\", {\n      className: \"many-view__modules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Commenter, {\n      customStyle: {\n        body: {\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        },\n        header: {\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        }\n      },\n      selectedPost: this.state.selectedPost,\n      postSelected: this.state.postSelected,\n      comments: this.state.comments,\n      toggleDeleteCommentModal: this.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Community, {\n      submissions: this.state.submissions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"turntable-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Turntable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nManyView.defaultProps = {\n  closesCommenter: [\"many-view__posts\", \"many-view\", \"many-view__modules\", \"sticky-wrapper\", \"Community\", 'many-view-layout']\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.user.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(ManyView);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/ManyView/ManyView.js"],"names":["React","Component","firebase","connect","ManyPost","timeDict","Turntable","Commenter","Community","DeleteComment","CircularSpinner","ManyView","state","submissions","votes","comments","postSelected","selectedPost","focusedElement","showDeleteComment","cid","isDoneFetching","componentDidMount","fetchSubmissions","fetchVotes","fetchSubmissionComments","document","addEventListener","toggleCommenter","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","sort","props","filter","view","coast","time","getElementById","scrollTop","setIsDoneFetching","bool","setState","event","closesCommenter","forEach","className","target","classList","contains","remove","toggleDeleteCommentModal","db","firestore","collection","onSnapshot","snapshot","comment","docs","data","id","push","submission","pid","querySnapshot","doc","vote","vid","err","console","log","submissionLikes","Object","values","postVotes","value","length","submissionComments","postComments","sort_submissions","a","b","first","createdOn","toDate","second","aVotes","bVotes","aComments","bComments","filter_submissions","myVotes","voterID","uid","thisVotes","unvoted","address","region","now","Date","passedMilliseconds","getTime","passedDays","scrollToPost","element","topPos","offsetTop","selectPost","post","myElement","add","render","manyPosts","map","index","body","backgroundColor","header","defaultProps","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport './ManyView.css'\nimport ManyPost from './ManyPost/ManyPost'\nimport timeDict from '../../Wordsmiths/WordSmithsTools/timeDict'\nimport Turntable from '../../Scribble/Turntable/Turntable'\nimport Commenter from './Commenter/Commenter'\nimport Community from './Community/Community'\nimport DeleteComment from '../../Scribble/MyBars/ViewedBar/DeleteComment/DeleteComment'\nimport CircularSpinner from '../../../components/CircularSpinner/CircularSpinner'\n\n\nclass ManyView extends Component {\n\n    static defaultProps = {\n        closesCommenter: [\n            \"many-view__posts\",\n            \"many-view\",\n            \"many-view__modules\",\n            \"sticky-wrapper\",\n            \"Community\",\n            'many-view-layout'\n        ]\n\n    }\n\n    state = {\n        submissions: [],\n        votes: [],\n        comments: [],\n        postSelected: false,\n        selectedPost: null,\n        focusedElement: null,\n        showDeleteComment: false,\n        cid: null,\n        isDoneFetching: false\n\n    }\n\n    componentDidMount = () => {\n\n        this.fetchSubmissions()\n        this.fetchVotes()\n        this.fetchSubmissionComments()\n        document.addEventListener('click', this.toggleCommenter)\n\n\n    }\n    componentWillUnmount = () => {\n        document.removeEventListener('click', this.toggleCommenter)\n    }\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.sort !== this.props.sort ||\n            prevProps.filter !== this.props.filter ||\n            prevProps.view !== this.props.view ||\n            prevProps.coast !== this.props.coast ||\n            prevProps.time !== this.props.time) {\n                document.getElementById('many-view-layout').scrollTop = 0;\n            }\n    }\n\n\n    setIsDoneFetching = (bool) => {\n        this.setState({\n            ...this.state,\n            isDoneFetching: bool\n        })\n    }\n\n\n    toggleCommenter = (event) => {\n        this.props.closesCommenter.forEach(className => {\n            if (event.target.classList.contains(className)) {\n                if (this.state.focusedElement) {\n                    this.state.focusedElement.classList.remove('focused-many-post')\n                }\n                this.setState({\n                    ...this.state,\n                    postSelected: false,\n                    focusedElement: null\n                })\n            }\n        });\n    }\n\n    toggleDeleteCommentModal = (bool, cid) => {\n        this.setState({\n            ...this.state,\n            showDeleteComment: bool,\n            cid: cid\n        })\n    }\n\n\n    fetchSubmissionComments = () => {\n        const db = firebase.firestore()\n        db.collection('postComments').onSnapshot((snapshot) => {\n            let comments = []\n            for (let comment of snapshot.docs) {\n                comment = {\n                    ...comment.data(),\n                    cid: comment.id\n                }\n                comments.push(comment)\n            }\n            this.setState({\n                ...this.state,\n                comments: comments\n            })\n\n        })\n    }\n\n    fetchSubmissions = () => {\n        const db = firebase.firestore()\n        db.collection('submissions').onSnapshot((snapshot) => {\n            let submissions = []\n            for (let submission of snapshot.docs) {\n                submission = {\n                    ...submission.data(),\n                    pid: submission.id\n                }\n                submissions.push(submission)\n            }\n            this.setState({\n                ...this.state,\n                submissions: submissions\n            })\n\n        })\n    }\n\n    fetchVotes = () => {\n        let db = firebase.firestore()\n\n        db.collection('postVotes').onSnapshot(querySnapshot => {\n            const votes = []\n            querySnapshot.forEach((doc) => {\n                let vote = {\n                    ...doc.data(),\n                    vid: doc.id\n                }\n                votes.push(vote)\n            })\n            this.setState({\n                ...this.state,\n                votes: votes\n            })\n        }, err => {\n            console.log(err)\n        })\n    }\n\n\n\n    submissionLikes = (pid) => {\n        let votes = Object.values(this.state.votes)\n        let postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1)\n        console.log(postVotes)\n        return postVotes.length\n    }\n\n    submissionComments = (pid) => {\n        let comments = [...this.state.comments]\n        let postComments = comments.filter(comment => comment.pid === pid)\n        return postComments.length\n    }\n\n    sort_submissions = (submissions) => {\n        submissions = [...submissions]\n        switch (this.props.sort) {\n            case 'Newest':\n                submissions = submissions.sort((a, b) => {\n                    let first = a.createdOn.toDate()\n                    let second = b.createdOn.toDate()\n                    return first > second ? -1 : 1\n                })\n                break;\n            case 'Oldest':\n                submissions = submissions.sort((a, b) => {\n                    let first = a.createdOn.toDate()\n                    let second = b.createdOn.toDate()\n                    return first < second ? -1 : 1\n                })\n                break;\n            case 'Likes':\n                submissions = submissions.sort((a, b) => {\n                    let aVotes = this.submissionLikes(a.pid)\n                    let bVotes = this.submissionLikes(b.pid)\n                    return aVotes > bVotes ? -1 : 1\n                })\n                break;\n            case 'Comments':\n                submissions = submissions.sort((a, b) => {\n                    let aComments = this.submissionComments(a.pid)\n                    let bComments = this.submissionComments(b.pid)\n                    return aComments > bComments ? -1 : 1\n                })\n                break;\n            default:\n                break;\n        }\n        return submissions\n    }\n\n    filter_submissions = (submissions) => {\n        submissions = [...submissions]\n\n        // Voted / Unvoted filter\n        if (this.props.filter !== 'All Posts') {\n            let votes = this.state.votes\n            let myVotes = votes.filter(vote => vote.voterID === this.props.uid)\n            submissions = submissions\n                .filter(submission => {\n                    let thisVotes = myVotes.filter(vote => vote.pid === submission.pid)\n                    let unvoted = true\n                    thisVotes.forEach(vote => {\n                        if (vote.value === 1 || vote.value === -1) {\n                            unvoted = false\n                        }\n                    })\n                    if (this.props.filter === 'Unvoted') {\n                        return unvoted\n                    } else {\n                        return !unvoted\n                    }\n                })\n        }\n        // Coast filter\n        if (this.props.coast !== 'All Coasts') {\n            switch (this.props.coast) {\n                case 'West':\n                    submissions = submissions.filter(submission => submission.address.region === 'West')\n                    break;\n                case 'East':\n                    submissions = submissions.filter(submission => submission.address.region === 'East')\n                    break;\n                case 'South':\n                    submissions = submissions.filter(submission => submission.address.region === 'South')\n                    break;\n                case 'Midwest':\n                    submissions = submissions.filter(submission => submission.address.region === 'Midwest')\n                    break;\n                default:\n                    break;\n            }\n        }\n        // Time filter\n        submissions = submissions.filter(submission => {\n            let now = new Date()\n            let passedMilliseconds = now - submission.createdOn.toDate().getTime()\n            let passedDays = (passedMilliseconds / 1000 / 60 / 60 / 24)\n            return passedDays < timeDict[this.props.time]\n        })\n        return submissions\n    }\n    scrollToPost = (element) => {\n        var topPos = element.offsetTop;\n        document.getElementById('many-view-layout').scrollTop = topPos;\n    }\n\n\n    selectPost = (pid) => {\n        let post = this.state.submissions.filter(submission => submission.pid === pid)\n        post = post[0]\n        \n        // if there is a focusedElement, unfocus it\n        if (this.state.focusedElement) {\n            this.state.focusedElement.classList.remove('focused-many-post')\n        }\n\n        // focus selected element\n        var myElement = document.getElementById(`scrollTo${pid}`);\n        myElement.classList.add('focused-many-post')\n\n        // scroll to selected element\n        this.scrollToPost(myElement)\n\n        this.setState({\n            postSelected: true,\n            selectedPost: post,\n            focusedElement: myElement\n        })\n    }\n\n    render() {\n\n\n\n\n        let submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n        let manyPosts = <CircularSpinner />\n        if (submissions.length > 0) {\n            manyPosts = submissions.map((submission, index) => {\n\n                return (\n\n                    <ManyPost\n                        key={submission.pid}\n                        comments={this.state.comments.filter(comment => comment.pid === submission.pid)}\n                        index={index}\n                        selectPost={this.selectPost}\n                        votes={this.state.votes.filter(vote => vote.pid === submission.pid)}\n                        {...submission} />\n\n\n                )\n            })\n        }\n\n\n\n\n        return (\n            <div className='many-view-layout' id='many-view-layout'>\n                {this.state.showDeleteComment ? <DeleteComment cid={this.state.cid} toggleDeleteCommentModal={this.toggleDeleteCommentModal} /> : null}\n                {/* {this.state.postSelected ? <div className={`many-view-layout__backdrop`}></div> : null} */}\n                <div className='many-view__posts'>\n                    {manyPosts}\n                </div>\n                <div className='many-view__modules'>\n                    <Commenter\n                        customStyle={{ body: { backgroundColor: 'rgba(255, 255, 255, 0.95)' }, header: { backgroundColor: 'rgba(255, 255, 255, 0.95)' } }}\n                        selectedPost={this.state.selectedPost}\n                        postSelected={this.state.postSelected}\n                        comments={this.state.comments}\n                        toggleDeleteCommentModal={this.toggleDeleteCommentModal} />\n                    <Community submissions={this.state.submissions} />\n                    <div className='turntable-wrapper'>\n                        <Turntable />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.user.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(ManyView)\n"]},"metadata":{},"sourceType":"module"}