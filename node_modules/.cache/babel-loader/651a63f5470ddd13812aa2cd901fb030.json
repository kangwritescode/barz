{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport './PostEditor.css';\nimport { connect } from 'react-redux';\nimport FireApi from '../../../FireApi/FireApi';\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost';\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter';\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment';\nimport DeletePost from '../MyBars/ViewedBar/DeletePost/DeletePost';\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner';\nimport CircularSpinner from '../../../shared/CircularSpinner/CircularSpinner';\n\nconst PostEditor = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        votes = _useState4[0],\n        setVotes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cid = _useState8[0],\n        setCid = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        pidForDelete = _useState10[0],\n        setPidForDelete = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        commenterFocused = _useState12[0],\n        setCommenterFocused = _useState12[1];\n\n  useEffect(() => {\n    FireApi.fetchSinglePost(setPost, props.pid);\n    const commentsListener = FireApi.allSubmissionCommentsListener(setComments);\n    const votesListener = FireApi.allVotesListener(setVotes, props.pid);\n    return () => {\n      commentsListener();\n      votesListener();\n    };\n  }, [props.pid]);\n  var content = React.createElement(CircularSpinner, {\n    customStyle: {\n      zIndex: '110'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n\n  if (post) {\n    content = React.createElement(\"div\", {\n      className: \"editor-layout__content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ManyPost, Object.assign({\n      comments: comments.filter(post => post.pid === props.pid),\n      selectPost: () => null,\n      votes: votes.filter(vote => vote.pid === props.pid),\n      customStyle: {\n        paragraph: {\n          width: '17em'\n        }\n      }\n    }, post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container__edit-comment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"edit-comment-container__edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"edit__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Options\"))), React.createElement(Commenter, {\n      toggleDeleteCommentModal: (bool, cid) => setCid(cid),\n      customStyle: {\n        body: {\n          height: '19.6em',\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        },\n        header: {\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        }\n      },\n      selectedPost: post,\n      postSelected: post,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"editor-layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, cid ? React.createElement(DeleteComment, {\n    cid: cid,\n    toggleDeleteCommentModal: () => setCid(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : null, React.createElement(DeletePost, {\n    pid: pidForDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"editor-backdrop\",\n    onClick: () => props.toggleEditor(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js"],"names":["React","useState","useEffect","connect","FireApi","ManyPost","Commenter","DeleteComment","DeletePost","DotSpinner","CircularSpinner","PostEditor","props","comments","setComments","votes","setVotes","post","setPost","cid","setCid","pidForDelete","setPidForDelete","commenterFocused","setCommenterFocused","fetchSinglePost","pid","commentsListener","allSubmissionCommentsListener","votesListener","allVotesListener","content","zIndex","filter","vote","paragraph","width","bool","body","height","backgroundColor","header","toggleEditor","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './PostEditor.css'\nimport { connect } from 'react-redux'\nimport FireApi from '../../../FireApi/FireApi'\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost'\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter'\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment'\nimport DeletePost from '../MyBars/ViewedBar/DeletePost/DeletePost'\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner'\nimport CircularSpinner from '../../../shared/CircularSpinner/CircularSpinner'\n\nconst PostEditor = (props) => {\n\n    const [comments, setComments] = useState([])\n    const [votes, setVotes] = useState([])\n    const [post, setPost] = useState(null)\n    const [cid, setCid] = useState(null)\n    const [pidForDelete, setPidForDelete] = useState(null)\n    const [commenterFocused, setCommenterFocused] = useState(true)\n\n    useEffect(() => {\n\n        FireApi.fetchSinglePost(setPost, props.pid)\n        const commentsListener = FireApi.allSubmissionCommentsListener(setComments)\n        const votesListener = FireApi.allVotesListener(setVotes, props.pid)\n\n        return () => {\n            commentsListener()\n            votesListener()\n        };\n    }, [props.pid])\n\n    var content = <CircularSpinner customStyle={{ zIndex: '110' }} />\n    if (post) {\n        content = (\n            <div className={`editor-layout__content-container`}>\n                <ManyPost\n                    comments={comments.filter(post => post.pid === props.pid)}\n                    selectPost={() => null}\n                    votes={votes.filter(vote => vote.pid === props.pid)}\n                    customStyle={{ paragraph: { width: '17em' } }}\n                    {...post} />\n                <div className={`content-container__edit-comment-container`}>\n                    <div\n                        className={`edit-comment-container__edit`}>\n\n                        <div className={`edit__header`}>\n                            <div>Options</div>\n                        </div>\n                    </div>\n                    <Commenter\n                        toggleDeleteCommentModal={(bool, cid) => setCid(cid)}\n                        customStyle={{\n                            body: {\n                                height: '19.6em',\n                                backgroundColor: 'rgba(255, 255, 255, 0.95)'\n                            },\n                            header: {\n                                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                            }\n                        }}\n                        selectedPost={post}\n                        postSelected={post}\n                        comments={comments} />\n                </div>\n            </div>\n\n        )\n    }\n    return (\n        <div className={`editor-layout`}>\n            {cid ?\n                <DeleteComment\n                    cid={cid}\n                    toggleDeleteCommentModal={() => setCid(false)}\n                />\n                : null}\n            <DeletePost pid={pidForDelete}/>\n            <div className='editor-backdrop' onClick={() => props.toggleEditor(null)} />\n            {content}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor)\n"]},"metadata":{},"sourceType":"module"}