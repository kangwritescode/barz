{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport firebase from 'firebase';\nimport './RegForm.css';\n\nfunction RegForm(props) {\n  //state\n  var _useState = useState('profile'),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPass = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zipcode = _useState10[0],\n      setZipcode = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allEmails = _useState12[0],\n      setAllEmails = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      allUsernames = _useState14[0],\n      setAllUsernames = _useState14[1]; // on mounting\n\n\n  useEffect(() => {\n    fetchEmailsAndUsernames();\n  }, []); // fetch emails\n\n  const fetchEmailsAndUsernames = async () => {\n    const db = firebase.firestore();\n    var emailsAndUsernames = await db.collection('users').get().then(snapshots => {\n      var emails = [];\n      var usernames = [];\n      snapshots.forEach(snapshot => {\n        emails.push(snapshot.data().email);\n        usernames.push(snapshot.data().username);\n      });\n      return [emails, usernames];\n    });\n    setAllEmails(emailsAndUsernames[0]);\n    setAllUsernames(emailsAndUsernames[1]);\n  }; // validate functions\n\n\n  const validateEmail = email => {\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validatePassword = password => {\n    if (password.length < 6) {\n      return false;\n    }\n\n    return true;\n  }; // auth functions\n\n\n  const firstStep = () => {\n    if (allEmails.includes(email)) {\n      props.setErrMsg('An account with that email already exists.');\n      props.setShowErr(true);\n    } else {\n      setStep('profile');\n    }\n  }; // validate values\n\n\n  const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null;\n  const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null;\n  const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null; // form\n\n  var form = React.createElement(\"div\", {\n    className: \"account-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Account Info\"), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidEmail),\n    placeholder: \"Email\",\n    value: email,\n    onInput: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidPass),\n    type: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onInput: event => setPass(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"reg-button \".concat(isValidContinue),\n    onClick: event => {\n      event.preventDefault();\n      firstStep();\n    },\n    disabled: !isValidContinue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Continue\"));\n\n  if (step === 'profile') {\n    form = React.createElement(\"div\", {\n      className: \"profile-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reg-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Profile Info\"), React.createElement(\"input\", {\n      className: \"large-input\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: event => setUsername(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"zip-sex-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: \"zip-input\",\n      placeholder: \"Hometown ZIP\",\n      value: zipcode,\n      maxLength: \"5\",\n      onChange: event => setZipcode(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sex-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"div\", {\n      className: \"sex-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"button\", {\n      className: \"reg-button\",\n      onClick: () => setStep('profile'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"reg-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-close\",\n    id: \"reg-form-close\",\n    onClick: () => props.updateReg(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"reg-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Sign Up\"), form);\n}\n\nexport default RegForm;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js"],"names":["React","useState","useEffect","validator","firebase","RegForm","props","step","setStep","email","setEmail","password","setPass","username","setUsername","zipcode","setZipcode","allEmails","setAllEmails","allUsernames","setAllUsernames","fetchEmailsAndUsernames","db","firestore","emailsAndUsernames","collection","get","then","snapshots","emails","usernames","forEach","snapshot","push","data","validateEmail","isEmail","validatePassword","length","firstStep","includes","setErrMsg","setShowErr","isInvalidEmail","isInvalidPass","isValidContinue","form","event","target","value","preventDefault","updateReg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport validator from 'validator'\nimport firebase from 'firebase'\nimport './RegForm.css'\n\nfunction RegForm(props) {\n\n    //state\n    var [step, setStep] = useState('profile')\n    var [email, setEmail] = useState('')\n    var [password, setPass] = useState('')\n    var [username, setUsername] = useState('')\n    var [zipcode, setZipcode] = useState(null)\n    var [allEmails, setAllEmails] = useState([])\n    var [allUsernames, setAllUsernames] = useState([])\n\n    // on mounting\n    useEffect(() => {\n        fetchEmailsAndUsernames()\n    }, [])\n\n    // fetch emails\n    const fetchEmailsAndUsernames = async () => {\n        const db = firebase.firestore()\n        var emailsAndUsernames = await db.collection('users').get()\n            .then(snapshots => {\n                var emails = []\n                var usernames = []\n                snapshots.forEach(snapshot => {\n                    emails.push(snapshot.data().email)\n                    usernames.push(snapshot.data().username)\n                })\n                return [emails, usernames]\n            })\n        setAllEmails(emailsAndUsernames[0])\n        setAllUsernames(emailsAndUsernames[1])\n    }\n\n\n    // validate functions\n    const validateEmail = (email) => {\n        if (!validator.isEmail(email)) {\n            return false\n        }\n        return true\n    }\n    const validatePassword = (password) => {\n        if (password.length < 6) {\n            return false\n        }\n        return true\n    }\n    \n    // auth functions\n\n    const firstStep = () => {\n        if (allEmails.includes(email)) {\n            props.setErrMsg('An account with that email already exists.')\n            props.setShowErr(true)\n        } else {\n            setStep('profile') \n        }\n    }\n\n\n\n    // validate values\n    const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n    const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n    const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null\n\n\n    // form\n    var form = (\n        <div className='account-wrapper'>\n            <div className='reg-detail'>Account Info</div>\n            <input\n                className={`large-input ${isInvalidEmail}`}\n                placeholder='Email'\n                value={email}\n                onInput={event => setEmail(event.target.value)}></input>\n            <input\n                className={`large-input ${isInvalidPass}`}\n                type='password'\n                value={password}\n                placeholder='Password'\n                onInput={event => setPass(event.target.value)}></input>\n            <button\n                className={`reg-button ${isValidContinue}`}\n                onClick={(event) => {\n                    event.preventDefault(); \n                    firstStep()\n                }}\n                disabled={!isValidContinue}>Continue</button>\n        </div>\n\n    )\n    if (step === 'profile') {\n        form = (\n            <div className='profile-wrapper'>\n                <div className='reg-detail'>Profile Info</div>\n                <input \n                    className='large-input' \n                    placeholder='Username'\n                    value={username}\n                    onChange={event => setUsername(event.target.value)}></input>\n                <div className='zip-sex-wrapper'>\n                    <input \n                        type='number' \n                        className='zip-input' \n                        placeholder='Hometown ZIP'\n                        value={zipcode}\n                        maxLength='5'\n                        onChange={event => setZipcode(event.target.value)}></input>\n                    <div className='sex-button'>M</div>\n                    <div className='sex-button'>F</div>\n                </div>\n                <button className='reg-button' onClick={() => setStep('profile')}>Submit</button>\n            </div>\n        )\n    }\n    return (\n        <form className='reg-form'>\n            <i className=\"fa fa-close\" id='reg-form-close' onClick={() => props.updateReg(false)}></i>\n            <h1 className='reg-header'>Sign Up</h1>\n            {form}\n        </form>\n    )\n}\n\nexport default RegForm\n"]},"metadata":{},"sourceType":"module"}