{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport firebase from 'firebase';\nimport './RegForm.css';\n\nfunction RegForm(props) {\n  //state\n  var _useState = useState('account'),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPass = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      allEmails = _useState8[0],\n      setAllEmails = _useState8[1]; // on mounting\n\n\n  useEffect(() => {\n    fetchEmails();\n  }, []); // fetch emails\n\n  const fetchEmails = async () => {\n    const db = firebase.firestore();\n    var allEmails = await db.collection('users').get().then(snapshots => {\n      var emails = [];\n      snapshots.forEach(snapshot => {\n        emails.push(snapshot.data().email);\n      });\n    });\n    setAllEmails(allEmails);\n  }; // validate functions\n\n\n  const validateEmail = email => {\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validatePassword = password => {\n    if (password.length < 6) {\n      return false;\n    }\n\n    return true;\n  }; // validate values\n\n\n  const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null;\n  const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null;\n  const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null; // form\n\n  var form = React.createElement(\"div\", {\n    className: \"account-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Account Info\"), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidEmail),\n    placeholder: \"Email\",\n    value: email,\n    onInput: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidPass),\n    type: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onInput: event => setPass(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"reg-button \".concat(isValidContinue),\n    onClick: event => {\n      event.preventDefault();\n      setStep('profile');\n    },\n    disabled: !isValidContinue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Continue\"));\n\n  if (step === 'profile') {\n    form = React.createElement(\"div\", {\n      className: \"profile-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reg-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Profile Info\"), React.createElement(\"input\", {\n      className: \"large-input\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"zip-sex-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"zip-input\",\n      placeholder: \"Hometown ZIP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sex-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"div\", {\n      className: \"sex-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"button\", {\n      className: \"reg-button\",\n      onClick: () => setStep('profile'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"reg-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-close\",\n    id: \"reg-form-close\",\n    onClick: () => props.updateReg(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"reg-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Sign Up\"), form);\n}\n\nexport default RegForm;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js"],"names":["React","useState","useEffect","validator","firebase","RegForm","props","step","setStep","email","setEmail","password","setPass","allEmails","setAllEmails","fetchEmails","db","firestore","collection","get","then","snapshots","emails","forEach","snapshot","push","data","validateEmail","isEmail","validatePassword","length","isInvalidEmail","isInvalidPass","isValidContinue","form","event","target","value","preventDefault","updateReg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport validator from 'validator'\nimport firebase from 'firebase'\nimport './RegForm.css'\n\nfunction RegForm(props) {\n\n    //state\n    var [step, setStep] = useState('account')\n    var [email, setEmail] = useState('')\n    var [password, setPass] = useState('')\n    var [allEmails, setAllEmails] = useState([])\n\n    // on mounting\n    useEffect(() => {\n        fetchEmails()\n    }, [])\n\n    // fetch emails\n    const fetchEmails = async () => {\n        const db = firebase.firestore()\n        var allEmails = await db.collection('users').get()\n            .then(snapshots => {\n                var emails = []\n                snapshots.forEach(snapshot => {\n                    emails.push(snapshot.data().email)\n                })\n            })\n        setAllEmails(allEmails)\n    }\n\n\n\n    // validate functions\n    const validateEmail = (email) => {\n        if (!validator.isEmail(email)) {\n            return false\n        }\n        return true\n    }\n    const validatePassword = (password) => {\n        if (password.length < 6) {\n            return false\n        }\n        return true\n    }\n\n    // validate values\n    const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n    const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n    const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null\n\n    // form\n    var form = (\n        <div className='account-wrapper'>\n            <div className='reg-detail'>Account Info</div>\n            <input\n                className={`large-input ${isInvalidEmail}`}\n                placeholder='Email'\n                value={email}\n                onInput={event => setEmail(event.target.value)}></input>\n            <input\n                className={`large-input ${isInvalidPass}`}\n                type='password'\n                value={password}\n                placeholder='Password'\n                onInput={event => setPass(event.target.value)}></input>\n            <button\n                className={`reg-button ${isValidContinue}`}\n                onClick={(event) => { event.preventDefault(); setStep('profile') }}\n                disabled={!isValidContinue}>Continue</button>\n        </div>\n\n    )\n    if (step === 'profile') {\n        form = (\n            <div className='profile-wrapper'>\n                <div className='reg-detail'>Profile Info</div>\n                <input className='large-input' placeholder='Username'></input>\n                <div className='zip-sex-wrapper'>\n                    <input className='zip-input' placeholder='Hometown ZIP'></input>\n                    <div className='sex-button'>M</div>\n                    <div className='sex-button'>F</div>\n                </div>\n                <button className='reg-button' onClick={() => setStep('profile')}>Submit</button>\n            </div>\n        )\n    }\n    return (\n        <form className='reg-form'>\n            <i className=\"fa fa-close\" id='reg-form-close' onClick={() => props.updateReg(false)}></i>\n            <h1 className='reg-header'>Sign Up</h1>\n            {form}\n        </form>\n    )\n}\n\nexport default RegForm\n"]},"metadata":{},"sourceType":"module"}