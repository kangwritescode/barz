{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport './FollowBox.css';\n\nfunction FollowBox(props) {\n  const _useState = useState({\n    followedBy: [],\n    following: [],\n    users: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1]; // componentDidMount\n\n\n  useEffect(() => {\n    if (props.uid) {\n      fetchFollows();\n      fetchUsers();\n    }\n\n    return () => {};\n  }, [props.uid, fetchFollows, fetchUsers]);\n\n  const fetchFollows = async () => {\n    var db = firebase.firestore();\n    db.collection('follows').get().then(snap => {\n      var following = [];\n      var followedBy = [];\n      snap.forEach(doc => {\n        var follow = _objectSpread({}, doc.data());\n\n        if (follow.to === props.uid) {\n          followedBy.push(follow.from);\n        } else if (follow.from === props.uid) {\n          following.push(follow.to);\n        }\n      });\n      console.log(following, followedBy);\n      setState(_objectSpread({}, state, {\n        following: following,\n        followedBy: followedBy\n      }));\n    });\n  };\n\n  const fetchUsers = async () => {\n    var db = firebase.firestore();\n    db.collection('users').get().then(snap => {\n      var users = {};\n      snap.forEach(doc => {\n        users[doc.id] = doc.data();\n      });\n      setState(_objectSpread({}, state, {\n        users: users\n      }));\n    });\n  };\n\n  console.log(state);\n  return React.createElement(\"div\", {\n    className: \"follow-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"follow-box__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, state.followedBy, \" followers\"), React.createElement(\"div\", {\n    className: \"header__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, state.following, \" following\")), React.createElement(\"div\", {\n    className: \"follow-box_body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js"],"names":["React","useState","useEffect","firebase","connect","FollowBox","props","followedBy","following","users","state","setState","uid","fetchFollows","fetchUsers","db","firestore","collection","get","then","snap","forEach","doc","follow","data","to","push","from","console","log","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport {connect} from 'react-redux'\nimport './FollowBox.css'\n\nfunction FollowBox(props) {\n    const [state, setState] = useState({\n        followedBy: [],\n        following: [],\n        users: {}\n    })\n\n    // componentDidMount\n    useEffect(() => {\n        if (props.uid) {\n            fetchFollows()\n            fetchUsers()\n        }\n        \n        return () => {\n        };\n    }, [props.uid, fetchFollows, fetchUsers])\n\n    const fetchFollows = async () => {\n        var db = firebase.firestore()\n        db.collection('follows').get()\n            .then(snap => {\n                var following = []\n                var followedBy = []\n                snap.forEach(doc => {\n                    var follow = {\n                        ...doc.data()\n                    }\n                    if (follow.to === props.uid) {\n                        followedBy.push(follow.from)\n                    } else if (follow.from === props.uid) {\n                        following.push(follow.to)\n                    }\n                })\n                console.log(following, followedBy)\n                setState({\n                    ...state,\n                    following: following,\n                    followedBy: followedBy\n                })\n            })\n    }\n    const fetchUsers = async () => {\n        var db = firebase.firestore()\n        db.collection('users').get()\n            .then(snap => {\n                var users = {}\n                snap.forEach(doc => {\n                    users[doc.id] = doc.data()\n                })\n                setState({\n                    ...state,\n                    users: users\n                })\n            })\n    }\n\n    console.log(state)\n    \n    return (\n        <div className='follow-box'>\n            <div className='follow-box__header'>\n                <div className='header__section'>\n                    {state.followedBy} followers\n                </div>\n                <div className='header__section'>\n                    {state.following} following\n                </div>\n            </div>\n            <div className='follow-box_body'></div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       \n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox)\n"]},"metadata":{},"sourceType":"module"}