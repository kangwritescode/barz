{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Documents/GitHub/barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Documents/GitHub/barz/src/containers/Landing/AuthForm/AuthForm.js\";\n\n/*global FB*/\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport validator from 'validator';\nimport './AuthForm.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport DotSpinner from '../../../components/DotSpinner/DotSpinner';\n\nconst AuthForm = props => {\n  const db = firebase.firestore(); // ui state\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRegistering = _useState2[0],\n        setisRegistering = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notification = _useState4[0],\n        setNotification = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        sentiment = _useState6[0],\n        setSentiment = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        provider = _useState8[0],\n        setProvider = _useState8[1];\n\n  let _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  let _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        mysteryManBlob = _useState14[0],\n        setMysteryManBlob = _useState14[1]; // login\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        spinner = _useState16[0],\n        setSpinner = _useState16[1];\n\n  useEffect(() => {\n    fetchMysteryMan();\n    document.getElementById('login-container__email-input').focus();\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope('email');\n    provider.setCustomParameters({\n      'display': 'popup'\n    });\n    setProvider(provider);\n    return () => {};\n  }, []); // sign in\n\n  const signIn = async event => {\n    setSpinner(true);\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    try {\n      const uid = await authenticate(email, password);\n      var db = firebase.firestore(); // check if database user exists\n\n      db.collection('users').doc(uid).get().then(async doc => {\n        // normal login\n        if (doc.exists) {\n          props.getUserData(uid);\n        } else {\n          // create firebase user and then login \n          const photoURL = await uploadMysteryMan(uid);\n          await createFirebaseUser(email, uid, photoURL);\n          props.getUserData(uid);\n        }\n      });\n    } catch (err) {\n      setSpinner(false);\n      setSentiment(false);\n      console.log(err.message);\n\n      switch (err.code) {\n        case 'auth/invalid-email':\n          setNotification(err.message);\n          break;\n\n        case \"auth/too-many-requests\":\n          let errMsg = \"Too many unsuccessful login attempts. Please try again later.\";\n          setNotification(errMsg);\n          break;\n\n        case 'auth/user-not-found':\n          setNotification(err.message);\n          break;\n\n        case 'auth/wrong-password':\n          setNotification(err.message);\n          break;\n\n        default:\n      }\n    }\n  }; // authenticate\n\n\n  const authenticate = async (email, password) => {\n    return await firebase.auth().signInWithEmailAndPassword(email, password).then(successObj => {\n      var uid = successObj.user.uid;\n      var refreshToken = successObj.user.refreshToken;\n      let expirationDate = new Date();\n      expirationDate.setHours(expirationDate.getHours() + 100);\n      localStorage.setItem('token', refreshToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('uid', uid);\n      return successObj.user.uid;\n    }).catch(function (error) {\n      console.log(error);\n      throw error;\n    });\n  }; // uploades mysteryman and then...\n\n\n  const uploadMysteryMan = async uid => {\n    let storageRef = firebase.storage().ref();\n    let photoRef = storageRef.child(\"images/\".concat(uid, \"/userIMG.png\"));\n    return photoRef.put(mysteryManBlob).then(async successObj => {\n      // fetches and returns the download URL\n      const url = await successObj.ref.getDownloadURL();\n      return url;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const fetchMysteryMan = () => {\n    let storage = firebase.storage();\n    storage.ref('mysteryman/mysteryman.png').getDownloadURL().then(url => {\n      let xhr = new XMLHttpRequest();\n      xhr.responseType = 'blob';\n\n      xhr.onload = event => {\n        let blob = xhr.response;\n        setMysteryManBlob(blob);\n      };\n\n      xhr.open('GET', url);\n      xhr.send();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // register \n\n\n  const createAuthUser = async (userInput, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(userInput, password).then(authObj => {\n      return [authObj.user.email, authObj.user.uid];\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const createFirebaseUser = async (email, uid, photoURL) => {\n    let db = firebase.firestore();\n    const user = {\n      email: email,\n      uid: uid,\n      photoURL: photoURL,\n      username: '',\n      address: '',\n      gender: '',\n      needsInfo: true,\n      handles: {\n        facebook: '',\n        instagram: '',\n        soundcloud: '',\n        youtube: ''\n      }\n    };\n    return db.collection('users').doc(uid).set(user).then(() => {\n      return true;\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const createAccount = async (email, inputPass, event) => {\n    setSpinner(true);\n    event.preventDefault();\n\n    try {\n      let _ref = await createAuthUser(email, inputPass),\n          _ref2 = _slicedToArray(_ref, 2),\n          fireEmail = _ref2[0],\n          uid = _ref2[1];\n\n      const photoURL = await uploadMysteryMan(uid);\n      console.log(photoURL, '<----');\n      await createFirebaseUser(fireEmail, uid, photoURL);\n      setSpinner(false);\n      setNotification('Created Account Successfully!');\n      setSentiment(true);\n      setisRegistering(false);\n      document.getElementById('auth-frame__button').focus();\n    } catch (err) {\n      setSpinner(false);\n      setNotification(err.message);\n      setSentiment(false);\n    }\n  };\n\n  const isValidEmail = email => {\n    return validator.isEmail(email);\n  };\n\n  const isValidPassword = password => {\n    return password.length >= 6;\n  };\n\n  const fbLogin = async () => {\n    setSpinner(true);\n    firebase.auth().signInWithPopup(provider).then(async result => {\n      try {\n        var token = result.credential.accessToken;\n        var uid = result.user.uid;\n        var email = result.additionalUserInfo.profile.email;\n\n        const setTokens = () => {\n          // token\n          let expirationDate = new Date();\n          expirationDate.setHours(expirationDate.getHours() + 100);\n          localStorage.setItem('token', token);\n          localStorage.setItem('expirationDate', expirationDate);\n          localStorage.setItem('uid', uid);\n        };\n\n        db.collection('users').doc(uid).get().then(async doc => {\n          if (doc.exists) {\n            setSpinner(false);\n            setTokens();\n            props.getUserData(uid);\n          } else {\n            const photoURL = await uploadMysteryMan(uid);\n            await createFirebaseUser(email, uid, photoURL);\n            setTokens();\n            props.getUserData(uid);\n            setNotification('Created Account Successfully!');\n            setSentiment(true);\n          }\n        });\n      } catch (err) {\n        // Handle Errors here.\n        setNotification(err.message);\n        setSentiment(false);\n        setSpinner(false);\n      }\n    }).catch(function (error) {\n      // Handle Errors here.\n      setNotification(error.message);\n      setSentiment(false);\n      setSpinner(false);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"landing__auth-frame\",\n    style: isRegistering ? {\n      paddingBottom: '2.9em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, notification ? React.createElement(\"p\", {\n    className: \"auth-frame__notification\",\n    style: sentiment ? {\n      background: 'rgba(2, 48, 8, 0.918)'\n    } : null,\n    onAnimationEnd: () => {\n      setNotification('');\n      setSentiment(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, notification) : null, React.createElement(\"div\", {\n    className: \"auth-frame__logo\",\n    style: isRegistering ? {\n      fontSize: '3.2em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, isRegistering ? 'Sign Up' : 'BARZ', isRegistering ? null : React.createElement(\"div\", {\n    className: \"logo__beta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"BETA\")), isRegistering ? null : React.createElement(\"div\", {\n    className: \"auth-frame__sub-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, \"The best hub for your \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }), \" inner wordsmith.\"), React.createElement(\"div\", {\n    className: \"auth-frame__login-container\",\n    style: isRegistering ? {\n      marginTop: '.3em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"login-container__email-input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    autoComplete: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), isRegistering ? null : React.createElement(\"div\", {\n    className: \"login-container__forgot-pass-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"forgot-pass-container__button\",\n    onClick: () => props.toggleForgotPass(true),\n    tabIndex: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"Forgot your password?\"))), React.createElement(\"button\", {\n    id: \"auth-frame__button\",\n    style: isRegistering ? {\n      marginTop: '2.45em'\n    } : null,\n    className: \"auth-frame__login-button \".concat(email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null),\n    onClick: isRegistering ? event => createAccount(email, password, event) : signIn,\n    disabled: !isValidEmail(email) || !isValidPassword(password) || spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, isRegistering ? 'Create Account' : 'Log In', spinner ? React.createElement(DotSpinner, {\n    customStyle: {\n      position: 'absolute',\n      left: '-55px',\n      bottom: '-104px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    className: \"auth-frame__or\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"button\", {\n    className: \"auth-frame__facebook-login\",\n    onClick: fbLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fab fa-facebook-square facebook-login__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, isRegistering ? 'Sign Up' : 'Continue', \" with Facebook\")), isRegistering ? React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"Already have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, \"Log In\"))) : React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Don't have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Sign Up\"))));\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: uid => dispatch(actions.fetchUserData(uid)),\n    setUserData: data => dispatch(actions.setUserData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","map":{"version":3,"sources":["/Users/davidkang/Documents/GitHub/barz/src/containers/Landing/AuthForm/AuthForm.js"],"names":["React","useState","useEffect","firebase","validator","connect","actions","DotSpinner","AuthForm","props","db","firestore","isRegistering","setisRegistering","notification","setNotification","sentiment","setSentiment","provider","setProvider","email","setEmail","password","setPassword","mysteryManBlob","setMysteryManBlob","spinner","setSpinner","fetchMysteryMan","document","getElementById","focus","auth","FacebookAuthProvider","addScope","setCustomParameters","signIn","event","preventDefault","uid","authenticate","collection","doc","get","then","exists","getUserData","photoURL","uploadMysteryMan","createFirebaseUser","err","console","log","message","code","errMsg","signInWithEmailAndPassword","successObj","user","refreshToken","expirationDate","Date","setHours","getHours","localStorage","setItem","catch","error","storageRef","storage","ref","photoRef","child","put","url","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","blob","response","open","send","createAuthUser","userInput","createUserWithEmailAndPassword","authObj","username","address","gender","needsInfo","handles","facebook","instagram","soundcloud","youtube","set","createAccount","inputPass","fireEmail","isValidEmail","isEmail","isValidPassword","length","fbLogin","signInWithPopup","result","token","credential","accessToken","additionalUserInfo","profile","setTokens","paddingBottom","background","fontSize","marginTop","target","value","toggleForgotPass","position","left","bottom","mapStateToProps","state","mapDispatchToProps","dispatch","fetchUserData","setUserData","data"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAX,CAFwB,CAIxB;;AAJwB,oBAKkBV,QAAQ,CAAC,KAAD,CAL1B;AAAA;AAAA,QAKjBW,aALiB;AAAA,QAKFC,gBALE;;AAAA,qBAMgBZ,QAAQ,CAAC,EAAD,CANxB;AAAA;AAAA,QAMjBa,YANiB;AAAA,QAMHC,eANG;;AAAA,qBAOUd,QAAQ,CAAC,KAAD,CAPlB;AAAA;AAAA,QAOjBe,SAPiB;AAAA,QAONC,YAPM;;AAAA,qBASQhB,QAAQ,CAAC,IAAD,CAThB;AAAA;AAAA,QASjBiB,QATiB;AAAA,QASPC,WATO;;AAAA,mBAUAlB,QAAQ,CAAC,EAAD,CAVR;AAAA;AAAA,MAUnBmB,KAVmB;AAAA,MAUZC,QAVY;;AAAA,oBAWMpB,QAAQ,CAAC,EAAD,CAXd;AAAA;AAAA,MAWnBqB,QAXmB;AAAA,MAWTC,WAXS;;AAAA,sBAaoBtB,QAAQ,CAAC,IAAD,CAb5B;AAAA;AAAA,QAajBuB,cAbiB;AAAA,QAaDC,iBAbC,mBAcxB;;;AAdwB,sBAeMxB,QAAQ,CAAC,KAAD,CAfd;AAAA;AAAA,QAejByB,OAfiB;AAAA,QAeRC,UAfQ;;AAkBxBzB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,eAAe;AACfC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,8BAAxB,EAAwDC,KAAxD;AACA,QAAIb,QAAQ,GAAG,IAAIf,QAAQ,CAAC6B,IAAT,CAAcC,oBAAlB,EAAf;AACAf,IAAAA,QAAQ,CAACgB,QAAT,CAAkB,OAAlB;AACAhB,IAAAA,QAAQ,CAACiB,mBAAT,CAA6B;AACzB,iBAAW;AADc,KAA7B;AAGAhB,IAAAA,WAAW,CAACD,QAAD,CAAX;AACA,WAAO,MAAM,CACZ,CADD;AAEH,GAXQ,EAWN,EAXM,CAAT,CAlBwB,CA8BxB;;AACA,QAAMkB,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BV,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAIU,KAAJ,EAAW;AAAEA,MAAAA,KAAK,CAACC,cAAN;AAAwB;;AACrC,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,YAAY,CAACpB,KAAD,EAAQE,QAAR,CAA9B;AAEA,UAAIZ,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAT,CAHA,CAIA;;AACAD,MAAAA,EAAE,CAAC+B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,EAAgCI,GAAhC,GAAsCC,IAAtC,CAA2C,MAAMF,GAAN,IAAa;AACpD;AACA,YAAIA,GAAG,CAACG,MAAR,EAAgB;AACZpC,UAAAA,KAAK,CAACqC,WAAN,CAAkBP,GAAlB;AACH,SAFD,MAGK;AACD;AACA,gBAAMQ,QAAQ,GAAG,MAAMC,gBAAgB,CAACT,GAAD,CAAvC;AACA,gBAAMU,kBAAkB,CAAC7B,KAAD,EAAQmB,GAAR,EAAaQ,QAAb,CAAxB;AACAtC,UAAAA,KAAK,CAACqC,WAAN,CAAkBP,GAAlB;AACH;AACJ,OAXD;AAcH,KAnBD,CAoBA,OAAOW,GAAP,EAAY;AACRvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAkC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;;AACA,cAAQH,GAAG,CAACI,IAAZ;AACI,aAAK,oBAAL;AACIvC,UAAAA,eAAe,CAACmC,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ,aAAK,wBAAL;AACI,cAAIE,MAAM,GAAG,+DAAb;AACAxC,UAAAA,eAAe,CAACwC,MAAD,CAAf;AACA;;AACJ,aAAK,qBAAL;AACIxC,UAAAA,eAAe,CAACmC,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ,aAAK,qBAAL;AACItC,UAAAA,eAAe,CAACmC,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ;AAdJ;AAgBH;AACJ,GA5CD,CA/BwB,CA4ExB;;;AACA,QAAMb,YAAY,GAAG,OAAOpB,KAAP,EAAcE,QAAd,KAA2B;AAE5C,WAAO,MAAMnB,QAAQ,CAAC6B,IAAT,GAAgBwB,0BAAhB,CAA2CpC,KAA3C,EAAkDE,QAAlD,EACRsB,IADQ,CACHa,UAAU,IAAI;AAEhB,UAAIlB,GAAG,GAAGkB,UAAU,CAACC,IAAX,CAAgBnB,GAA1B;AACA,UAAIoB,YAAY,GAAGF,UAAU,CAACC,IAAX,CAAgBC,YAAnC;AACA,UAAIC,cAAc,GAAG,IAAIC,IAAJ,EAArB;AACAD,MAAAA,cAAc,CAACE,QAAf,CAAwBF,cAAc,CAACG,QAAf,KAA4B,GAApD;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,YAA9B;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCL,cAAvC;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4B1B,GAA5B;AACA,aAAOkB,UAAU,CAACC,IAAX,CAAgBnB,GAAvB;AAEH,KAfQ,EAgBR2B,KAhBQ,CAgBF,UAAUC,KAAV,EAAiB;AACpBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACA,YAAMA,KAAN;AACH,KAnBQ,CAAb;AAoBH,GAtBD,CA7EwB,CAqGxB;;;AACA,QAAMnB,gBAAgB,GAAG,MAAOT,GAAP,IAAe;AACpC,QAAI6B,UAAU,GAAGjE,QAAQ,CAACkE,OAAT,GAAmBC,GAAnB,EAAjB;AACA,QAAIC,QAAQ,GAAGH,UAAU,CAACI,KAAX,kBAA2BjC,GAA3B,kBAAf;AACA,WAAOgC,QAAQ,CAACE,GAAT,CAAajD,cAAb,EACFoB,IADE,CACG,MAAOa,UAAP,IAAsB;AACxB;AACA,YAAMiB,GAAG,GAAG,MAAMjB,UAAU,CAACa,GAAX,CAAeK,cAAf,EAAlB;AACA,aAAOD,GAAP;AACH,KALE,EAMFR,KANE,CAMIhB,GAAG,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AAA0B,KANvC,CAAP;AAOH,GAVD;;AAYA,QAAMzB,eAAe,GAAG,MAAM;AAC1B,QAAIyC,OAAO,GAAGlE,QAAQ,CAACkE,OAAT,EAAd;AACAA,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,cAAzC,GACK/B,IADL,CACU8B,GAAG,IAAI;AACT,UAAIE,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;AACAF,MAAAA,GAAG,CAACG,MAAJ,GAAa1C,KAAK,IAAI;AAClB,YAAI2C,IAAI,GAAGJ,GAAG,CAACK,QAAf;AACAxD,QAAAA,iBAAiB,CAACuD,IAAD,CAAjB;AACH,OAHD;;AAIAJ,MAAAA,GAAG,CAACM,IAAJ,CAAS,KAAT,EAAgBR,GAAhB;AACAE,MAAAA,GAAG,CAACO,IAAJ;AAEH,KAXL,EAWOjB,KAXP,CAWa,UAAUC,KAAV,EAAiB;AACtBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH,KAbL;AAcH,GAhBD,CAlHwB,CAmIxB;;;AACA,QAAMiB,cAAc,GAAG,OAAOC,SAAP,EAAkB/D,QAAlB,KAA+B;AAClD,WAAOnB,QAAQ,CAAC6B,IAAT,GAAgBsD,8BAAhB,CAA+CD,SAA/C,EAA0D/D,QAA1D,EACFsB,IADE,CACG2C,OAAO,IAAI;AACb,aAAO,CAACA,OAAO,CAAC7B,IAAR,CAAatC,KAAd,EAAqBmE,OAAO,CAAC7B,IAAR,CAAanB,GAAlC,CAAP;AACH,KAHE,EAIF2B,KAJE,CAIIhB,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KANE,CAAP;AAOH,GARD;;AASA,QAAMD,kBAAkB,GAAG,OAAO7B,KAAP,EAAcmB,GAAd,EAAmBQ,QAAnB,KAAgC;AACvD,QAAIrC,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAT;AAEA,UAAM+C,IAAI,GAAG;AACTtC,MAAAA,KAAK,EAAEA,KADE;AAETmB,MAAAA,GAAG,EAAEA,GAFI;AAGTQ,MAAAA,QAAQ,EAAEA,QAHD;AAITyC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,SAAS,EAAE,IAPF;AAQTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,UAAU,EAAE,EAHP;AAILC,QAAAA,OAAO,EAAE;AAJJ;AARA,KAAb;AAeA,WAAOtF,EAAE,CAAC+B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,EAAgC0D,GAAhC,CAAoCvC,IAApC,EACFd,IADE,CACG,MAAM;AACR,aAAO,IAAP;AACH,KAHE,EAIFsB,KAJE,CAIKhB,GAAD,IAAS;AACZ,YAAMA,GAAN;AACH,KANE,CAAP;AAOH,GAzBD;;AA2BA,QAAMgD,aAAa,GAAG,OAAO9E,KAAP,EAAc+E,SAAd,EAAyB9D,KAAzB,KAAmC;AACrDV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AAAA,iBAEuB,MAAM8C,cAAc,CAAChE,KAAD,EAAQ+E,SAAR,CAF3C;AAAA;AAAA,UAEKC,SAFL;AAAA,UAEgB7D,GAFhB;;AAGA,YAAMQ,QAAQ,GAAG,MAAMC,gBAAgB,CAACT,GAAD,CAAvC;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,OAAtB;AACA,YAAME,kBAAkB,CAACmD,SAAD,EAAY7D,GAAZ,EAAiBQ,QAAjB,CAAxB;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAZ,MAAAA,eAAe,CAAC,+BAAD,CAAf;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAgB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAA9C;AAEH,KAZD,CAaA,OAAOmB,GAAP,EAAY;AACRvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAZ,MAAAA,eAAe,CAACmC,GAAG,CAACG,OAAL,CAAf;AACApC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GArBD;;AAuBA,QAAMoF,YAAY,GAAGjF,KAAK,IAAI;AAC1B,WAAOhB,SAAS,CAACkG,OAAV,CAAkBlF,KAAlB,CAAP;AACH,GAFD;;AAGA,QAAMmF,eAAe,GAAGjF,QAAQ,IAAI;AAChC,WAAOA,QAAQ,CAACkF,MAAT,IAAmB,CAA1B;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAG,YAAY;AACxB9E,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAxB,IAAAA,QAAQ,CAAC6B,IAAT,GAAgB0E,eAAhB,CAAgCxF,QAAhC,EAA0C0B,IAA1C,CAA+C,MAAO+D,MAAP,IAAkB;AAC7D,UAAI;AACA,YAAIC,KAAK,GAAGD,MAAM,CAACE,UAAP,CAAkBC,WAA9B;AACA,YAAIvE,GAAG,GAAGoE,MAAM,CAACjD,IAAP,CAAYnB,GAAtB;AACA,YAAInB,KAAK,GAAGuF,MAAM,CAACI,kBAAP,CAA0BC,OAA1B,CAAkC5F,KAA9C;;AAEA,cAAM6F,SAAS,GAAG,MAAM;AACpB;AACA,cAAIrD,cAAc,GAAG,IAAIC,IAAJ,EAArB;AACAD,UAAAA,cAAc,CAACE,QAAf,CAAwBF,cAAc,CAACG,QAAf,KAA4B,GAApD;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B2C,KAA9B;AACA5C,UAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCL,cAAvC;AACAI,UAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4B1B,GAA5B;AACH,SAPD;;AASA7B,QAAAA,EAAE,CAAC+B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,EAAgCI,GAAhC,GAAsCC,IAAtC,CAA2C,MAAMF,GAAN,IAAa;AACpD,cAAIA,GAAG,CAACG,MAAR,EAAgB;AACZlB,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAsF,YAAAA,SAAS;AACTxG,YAAAA,KAAK,CAACqC,WAAN,CAAkBP,GAAlB;AAEH,WALD,MAKO;AACH,kBAAMQ,QAAQ,GAAG,MAAMC,gBAAgB,CAACT,GAAD,CAAvC;AACA,kBAAMU,kBAAkB,CAAC7B,KAAD,EAAQmB,GAAR,EAAaQ,QAAb,CAAxB;AACAkE,YAAAA,SAAS;AACTxG,YAAAA,KAAK,CAACqC,WAAN,CAAkBP,GAAlB;AACAxB,YAAAA,eAAe,CAAC,+BAAD,CAAf;AACAE,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,SAdD;AAiBH,OA/BD,CA+BE,OAAOiC,GAAP,EAAY;AACV;AACAnC,QAAAA,eAAe,CAACmC,GAAG,CAACG,OAAL,CAAf;AACApC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAtCD,EAsCGuC,KAtCH,CAsCS,UAAUC,KAAV,EAAiB;AACtB;AACApD,MAAAA,eAAe,CAACoD,KAAK,CAACd,OAAP,CAAf;AACApC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KA3CD;AA4CH,GA9CD;;AAgDA,SACI;AAAK,IAAA,SAAS,uBAAd;AAAuC,IAAA,KAAK,EAAEf,aAAa,GAAG;AAAEsG,MAAAA,aAAa,EAAE;AAAjB,KAAH,GAAgC,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpG,YAAY,GACT;AACI,IAAA,SAAS,4BADb;AAEI,IAAA,KAAK,EAAEE,SAAS,GAAG;AAAEmG,MAAAA,UAAU,EAAE;AAAd,KAAH,GAA6C,IAFjE;AAGI,IAAA,cAAc,EAAE,MAAM;AAAEpG,MAAAA,eAAe,CAAC,EAAD,CAAf;AAAqBE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAsB,KAHvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKH,YAJL,CADS,GAOP,IARV,EASI;AACI,IAAA,SAAS,oBADb;AAEI,IAAA,KAAK,EAAEF,aAAa,GAAG;AAAEwG,MAAAA,QAAQ,EAAE;AAAZ,KAAH,GAA2B,IAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKxG,aAAa,GAAG,SAAH,GAAe,MAHjC,EAIKA,aAAa,GAAG,IAAH,GACV;AAAK,IAAA,SAAS,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,CATJ,EAmBKA,aAAa,GAAG,IAAH,GACV;AAAK,IAAA,SAAS,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9D,sBApBR,EAuBI;AAAK,IAAA,SAAS,+BAAd;AAA+C,IAAA,KAAK,EAAEA,aAAa,GAAG;AAAEyG,MAAAA,SAAS,EAAE;AAAb,KAAH,GAA2B,IAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAC,8BADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,OAHhB;AAII,IAAA,KAAK,EAAEjG,KAJX;AAKI,IAAA,YAAY,MALhB;AAMI,IAAA,QAAQ,EAAEiB,KAAK,IAAIhB,QAAQ,CAACgB,KAAK,CAACiF,MAAN,CAAaC,KAAd,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEjG,QAHX;AAII,IAAA,QAAQ,EAAEe,KAAK,IAAId,WAAW,CAACc,KAAK,CAACiF,MAAN,CAAaC,KAAd,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAaK3G,aAAa,GAAG,IAAH,GACV;AAAK,IAAA,SAAS,0CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,iCADb;AAEI,IAAA,OAAO,EAAE,MAAMH,KAAK,CAAC+G,gBAAN,CAAuB,IAAvB,CAFnB;AAGI,IAAA,QAAQ,EAAC,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAdR,CAvBJ,EA6CI;AACI,IAAA,EAAE,EAAC,oBADP;AAEI,IAAA,KAAK,EAAE5G,aAAa,GAAG;AAAEyG,MAAAA,SAAS,EAAE;AAAb,KAAH,GAA6B,IAFrD;AAGI,IAAA,SAAS,qCAA8BjG,KAAK,CAACoF,MAAN,GAAe,CAAf,IAAoBH,YAAY,CAACjF,KAAD,CAAhC,IAA2CmF,eAAe,CAACjF,QAAD,CAA1D,IAAwE,CAACI,OAAzE,GAAmF,iCAAnF,GAAuH,IAArJ,CAHb;AAII,IAAA,OAAO,EAAEd,aAAa,GAAIyB,KAAD,IAAW6D,aAAa,CAAC9E,KAAD,EAAQE,QAAR,EAAkBe,KAAlB,CAA3B,GAAsDD,MAJhF;AAKI,IAAA,QAAQ,EAAE,CAACiE,YAAY,CAACjF,KAAD,CAAb,IAAwB,CAACmF,eAAe,CAACjF,QAAD,CAAxC,IAAsDI,OALpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKd,aAAa,GAAG,gBAAH,GAAsB,QANxC,EAOKc,OAAO,GAAG,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAE;AAAE+F,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,IAAI,EAAE,OAA9B;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4F,IAPxG,CA7CJ,EAsDI;AAAK,IAAA,SAAS,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtDJ,EAuDI;AAAQ,IAAA,SAAS,8BAAjB;AAAiD,IAAA,OAAO,EAAElB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,6CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI7F,aAAa,GAAG,SAAH,GAAe,UAAhC,mBAFJ,CAvDJ,EA2DKA,aAAa,GAAG;AAAK,IAAA,SAAS,yBAAd;AAAyC,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgH;AAAM,IAAA,SAAS,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC,CAAhH,CAAH,GACR;AAAK,IAAA,SAAS,yBAAd;AAAyC,IAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA6G;AAAM,IAAA,SAAS,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvC,CAA7G,CA5DV,CADJ;AAiEH,CAvTD;;AAyTA,MAAM+G,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjF,IAAAA,WAAW,EAAGP,GAAD,IAASwF,QAAQ,CAACzH,OAAO,CAAC0H,aAAR,CAAsBzF,GAAtB,CAAD,CAD3B;AAEH0F,IAAAA,WAAW,EAAGC,IAAD,IAAUH,QAAQ,CAACzH,OAAO,CAAC2H,WAAR,CAAoBC,IAApB,CAAD;AAF5B,GAAP;AAIH,CALD;;AAQA,eAAe7H,OAAO,CAACuH,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtH,QAA7C,CAAf","sourcesContent":["/*global FB*/\nimport React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport validator from 'validator'\nimport './AuthForm.css'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../store/actions/index'\nimport DotSpinner from '../../../components/DotSpinner/DotSpinner'\n\nconst AuthForm = (props) => {\n\n    const db = firebase.firestore()\n\n    // ui state\n    const [isRegistering, setisRegistering] = useState(false)\n    const [notification, setNotification] = useState('')\n    const [sentiment, setSentiment] = useState(false)\n\n    const [provider, setProvider] = useState(null)\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const [mysteryManBlob, setMysteryManBlob] = useState(null)\n    // login\n    const [spinner, setSpinner] = useState(false)\n\n\n    useEffect(() => {\n        fetchMysteryMan()\n        document.getElementById('login-container__email-input').focus()\n        var provider = new firebase.auth.FacebookAuthProvider();\n        provider.addScope('email')\n        provider.setCustomParameters({\n            'display': 'popup'\n        })\n        setProvider(provider)\n        return () => {\n        };\n    }, [])\n    // sign in\n    const signIn = async (event) => {\n        setSpinner(true)\n        if (event) { event.preventDefault() }\n        try {\n            const uid = await authenticate(email, password)\n\n            var db = firebase.firestore()\n            // check if database user exists\n            db.collection('users').doc(uid).get().then(async doc => {\n                // normal login\n                if (doc.exists) {\n                    props.getUserData(uid)\n                }\n                else {\n                    // create firebase user and then login \n                    const photoURL = await uploadMysteryMan(uid)\n                    await createFirebaseUser(email, uid, photoURL)\n                    props.getUserData(uid)\n                }\n            })\n\n\n        }\n        catch (err) {\n            setSpinner(false)\n            setSentiment(false)\n            console.log(err.message)\n            switch (err.code) {\n                case 'auth/invalid-email':\n                    setNotification(err.message)\n                    break;\n                case \"auth/too-many-requests\":\n                    let errMsg = \"Too many unsuccessful login attempts. Please try again later.\"\n                    setNotification(errMsg)\n                    break;\n                case 'auth/user-not-found':\n                    setNotification(err.message)\n                    break;\n                case 'auth/wrong-password':\n                    setNotification(err.message)\n                    break;\n                default:\n            }\n        }\n    }\n    // authenticate\n    const authenticate = async (email, password) => {\n\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(successObj => {\n\n                var uid = successObj.user.uid\n                var refreshToken = successObj.user.refreshToken\n                let expirationDate = new Date()\n                expirationDate.setHours(expirationDate.getHours() + 100)\n\n\n\n                localStorage.setItem('token', refreshToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('uid', uid)\n                return successObj.user.uid\n\n            })\n            .catch(function (error) {\n                console.log(error)\n                throw error\n            });\n    }\n\n    // uploades mysteryman and then...\n    const uploadMysteryMan = async (uid) => {\n        let storageRef = firebase.storage().ref();\n        let photoRef = storageRef.child(`images/${uid}/userIMG.png`);\n        return photoRef.put(mysteryManBlob)\n            .then(async (successObj) => {\n                // fetches and returns the download URL\n                const url = await successObj.ref.getDownloadURL()\n                return url\n            })\n            .catch(err => { console.log(err.message) })\n    }\n\n    const fetchMysteryMan = () => {\n        let storage = firebase.storage()\n        storage.ref('mysteryman/mysteryman.png').getDownloadURL()\n            .then(url => {\n                let xhr = new XMLHttpRequest();\n                xhr.responseType = 'blob';\n                xhr.onload = event => {\n                    let blob = xhr.response;\n                    setMysteryManBlob(blob)\n                };\n                xhr.open('GET', url);\n                xhr.send();\n\n            }).catch(function (error) {\n                console.log(error)\n            });\n    }\n    // register \n    const createAuthUser = async (userInput, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userInput, password)\n            .then(authObj => {\n                return [authObj.user.email, authObj.user.uid]\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n    const createFirebaseUser = async (email, uid, photoURL) => {\n        let db = firebase.firestore();\n\n        const user = {\n            email: email,\n            uid: uid,\n            photoURL: photoURL,\n            username: '',\n            address: '',\n            gender: '',\n            needsInfo: true,\n            handles: {\n                facebook: '',\n                instagram: '',\n                soundcloud: '',\n                youtube: ''\n            }\n        }\n        return db.collection('users').doc(uid).set(user)\n            .then(() => {\n                return true\n            })\n            .catch((err) => {\n                throw err\n            });\n    }\n\n    const createAccount = async (email, inputPass, event) => {\n        setSpinner(true)\n        event.preventDefault()\n        try {\n\n            let [fireEmail, uid] = await createAuthUser(email, inputPass)\n            const photoURL = await uploadMysteryMan(uid)\n            console.log(photoURL, '<----')\n            await createFirebaseUser(fireEmail, uid, photoURL)\n            setSpinner(false)\n            setNotification('Created Account Successfully!')\n            setSentiment(true)\n            setisRegistering(false)\n            document.getElementById('auth-frame__button').focus()\n\n        }\n        catch (err) {\n            setSpinner(false)\n            setNotification(err.message)\n            setSentiment(false)\n        }\n    }\n\n    const isValidEmail = email => {\n        return validator.isEmail(email)\n    }\n    const isValidPassword = password => {\n        return password.length >= 6\n    }\n\n    const fbLogin = async () => {\n        setSpinner(true)\n        firebase.auth().signInWithPopup(provider).then(async (result) => {\n            try {\n                var token = result.credential.accessToken;\n                var uid = result.user.uid\n                var email = result.additionalUserInfo.profile.email\n\n                const setTokens = () => {\n                    // token\n                    let expirationDate = new Date()\n                    expirationDate.setHours(expirationDate.getHours() + 100)\n                    localStorage.setItem('token', token)\n                    localStorage.setItem('expirationDate', expirationDate)\n                    localStorage.setItem('uid', uid)\n                }\n\n                db.collection('users').doc(uid).get().then(async doc => {\n                    if (doc.exists) {\n                        setSpinner(false)\n                        setTokens()\n                        props.getUserData(uid)\n\n                    } else {\n                        const photoURL = await uploadMysteryMan(uid)\n                        await createFirebaseUser(email, uid, photoURL)\n                        setTokens()\n                        props.getUserData(uid)\n                        setNotification('Created Account Successfully!')\n                        setSentiment(true)\n                    }\n                })\n\n\n            } catch (err) {\n                // Handle Errors here.\n                setNotification(err.message)\n                setSentiment(false)\n                setSpinner(false)\n            }\n        }).catch(function (error) {\n            // Handle Errors here.\n            setNotification(error.message)\n            setSentiment(false)\n            setSpinner(false)\n        });\n    }\n\n    return (\n        <div className={`landing__auth-frame`} style={isRegistering ? { paddingBottom: '2.9em' } : null}>\n            {notification ?\n                <p\n                    className={`auth-frame__notification`}\n                    style={sentiment ? { background: 'rgba(2, 48, 8, 0.918)' } : null}\n                    onAnimationEnd={() => { setNotification(''); setSentiment(false); }}>\n                    {notification}\n                </p>\n                : null}\n            <div\n                className={`auth-frame__logo`}\n                style={isRegistering ? { fontSize: '3.2em' } : null}>\n                {isRegistering ? 'Sign Up' : 'BARZ'}\n                {isRegistering ? null : (\n                    <div className={`logo__beta`}>\n                        BETA\n                    </div>\n                )}\n            </div>\n            {isRegistering ? null : (\n                <div className={`auth-frame__sub-text`}>The best hub for your <br /> inner wordsmith.</div>\n\n            )}\n            <div className={`auth-frame__login-container`} style={isRegistering ? { marginTop: '.3em' } : null}>\n                <input\n                    id='login-container__email-input'\n                    type='email'\n                    placeholder='Email'\n                    value={email}\n                    autoComplete\n                    onChange={event => setEmail(event.target.value)}></input>\n                <input\n                    placeholder='Password'\n                    type='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}></input>\n                {isRegistering ? null : (\n                    <div className={`login-container__forgot-pass-container`}>\n                        <button\n                            className={`forgot-pass-container__button`}\n                            onClick={() => props.toggleForgotPass(true)}\n                            tabIndex=\"-1\">Forgot your password?</button>\n                    </div>\n                )}\n            </div>\n            <button\n                id='auth-frame__button'\n                style={isRegistering ? { marginTop: '2.45em' } : null}\n                className={`auth-frame__login-button ${email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null}`}\n                onClick={isRegistering ? (event) => createAccount(email, password, event) : signIn}\n                disabled={!isValidEmail(email) || !isValidPassword(password) || spinner}>\n                {isRegistering ? 'Create Account' : 'Log In'}\n                {spinner ? <DotSpinner customStyle={{ position: 'absolute', left: '-55px', bottom: '-104px' }} /> : null}\n            </button>\n            <div className={`auth-frame__or`}>or</div>\n            <button className={`auth-frame__facebook-login`} onClick={fbLogin}>\n                <i class=\"fab fa-facebook-square facebook-login__icon\"></i>\n                <b>{isRegistering ? 'Sign Up' : 'Continue'} with Facebook</b>\n            </button>\n            {isRegistering ? <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(false)}>Already have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Log In</b></span></div>\n                : <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(true)}>Don't have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Sign Up</b></span></div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserData: (uid) => dispatch(actions.fetchUserData(uid)),\n        setUserData: (data) => dispatch(actions.setUserData(data))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm)\n"]},"metadata":{},"sourceType":"module"}