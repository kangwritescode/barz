{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// import validator from 'validator'\n// import firebase from 'firebase'\n// import { regions } from '../../../shared/regions'\n// import './RegForm.css'\n// import axios from 'axios'\n// import { errorCreater } from '../../../shared/utility'\n// function RegForm(props) {\n//     // State\n//     // data \n//     let [allEmails, setAllEmails] = useState([])\n//     let [allUsernames, setAllUsernames] = useState([])\n//     let [mysteryManBlob, setMysteryManBlob] = useState(null)\n//     // ui\n//     let [step, setStep] = useState('account')\n//     let [spinning, setSpinner] = useState(false)\n//     //profile\n//     let [email, setEmail] = useState('')\n//     let [password, setPass] = useState('')\n//     let [username, setUsername] = useState('')\n//     let [zipcode, setZipcode] = useState('')\n//     let [gender, pickGender] = useState('')\n//     // filter functions\n//     const filterAndSetUsername = (value) => {\n//         const regex = new RegExp(/^[A-Za-z0-9_]+$/)\n//         if (regex.test(value) || value === '') {\n//             setUsername(value.toLowerCase())\n//         } else {\n//             return\n//         }\n//     }\n//     const filterAndSetZipcode = (value) => {\n//         if (value.length <= 5) {\n//             setZipcode(value)\n//         }\n//     }\n//     // validate functions\n//     const validateEmail = (email) => {\n//         if (!validator.isEmail(email)) {\n//             return false\n//         }\n//         return true\n//     }\n//     const validatePassword = (password) => {\n//         if (password.length < 6) {\n//             return false\n//         }\n//         return true\n//     }\n//     const validateUsername = (username) => {\n//         if (username.length < 3) {\n//             return false\n//         }\n//         return true\n//     }\n//     const validateZipcode = (zipcode) => {\n//         if (zipcode.length === 5) {\n//             return true\n//         } return false\n//     }\n//     // auth functions\n//     const firstStep = async () => {\n//         setSpinner(true)\n//         try {\n//             await fetchEmailsAndUsernames()\n//             if (allEmails.includes(email)) {\n//                 throw errorCreater('The email address is already in use by another account.')\n//             } else {\n//                 setSpinner(false)\n//                 setStep('profile')\n//             }\n//         }\n//         catch (err) {\n//             setSpinner(false)\n//             notifyWithErr(err.message)\n//         }\n//     }\n//     const submit = async (event) => {\n//         event.preventDefault()\n//         setSpinner(true)\n//         try {\n//             // username check\n//             await fetchEmailsAndUsernames()\n//             if (allUsernames.includes(username)) {\n//                 throw errorCreater('That username is taken.')\n//             }\n//             if (allEmails.includes(email)) {\n//                 throw errorCreater('The email address is already in use by another account.')\n//             }\n//             // zipcode check\n//             const address = await fetchAddressFromZipcode(zipcode)\n//             console.log(address)\n//             let [emailFire, uid] = await createAuthUser(email, password)\n//             const photoURL = await uploadMysteryMan(uid)\n//             await createFirebaseUser(emailFire, uid, address, photoURL)\n//             // success!\n//             props.setErrSentiment(true)\n//             notifyWithErr('Profile Created Successfully!')\n//             setSpinner(false)\n//             setUsername('')\n//             setZipcode('')\n//             pickGender('')\n//             props.setEmail(email)\n//             props.setPassword(password)\n//             setEmail('')\n//             setPass('')\n//         }\n//         catch (err) {\n//             notifyWithErr(err.message)\n//             setSpinner(false)\n//         }\n//     }\n//     const notifyWithErr = (msg) => {\n//         props.setErrMsg(msg)\n//         props.setShowErr(true)\n//     }\n//     // validate values (account)\n//     const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n//     const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n//     const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass && !spinning ? 'valid' : null\n//     // validate values (profile)\n//     const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null\n//     const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null\n//     const maleSelected = gender === 'Male' ? 'focused-sex' : null\n//     const femaleSelected = gender === 'Female' ? 'focused-sex' : null\n//     const isValidSubmit = (\n//         username &&\n//         zipcode &&\n//         gender &&\n//         validateUsername(username) &&\n//         validateZipcode(zipcode) &&\n//         !spinning\n//     ) ? 'valid' : null\n//     // form\n//     let form = (\n//         <div className={`account-wrapper`}>\n//             <div className='reg-detail'>Account Info</div>\n//             <input\n//                 className={`large-input ${isInvalidEmail}`}\n//                 placeholder='Email'\n//                 value={email}\n//                 onChange={event => setEmail(event.target.value)}></input>\n//             <input\n//                 className={`large-input ${isInvalidPass}`}\n//                 type='password'\n//                 value={password}\n//                 placeholder='Password'\n//                 onChange={event => setPass(event.target.value)}></input>\n//             <button\n//                 className={`reg-button ${isValidContinue}`}\n//                 onClick={(event) => {\n//                     event.preventDefault();\n//                     firstStep()\n//                 }}\n//                 disabled={!isValidContinue}>Continue</button>\n//         </div>\n//     )\n//     if (step === 'profile') {\n//         form = (\n//             <div className={`profile-wrapper`}>\n//                 <i className=\"fas fa-chevron-left\" id='reg-form-back' onClick={() => setStep('account')}></i>\n//                 <div className='reg-detail'>Profile Info</div>\n//                 <input\n//                     className={`large-input ${isInvalidUsername}`}\n//                     placeholder='Username'\n//                     value={username}\n//                     maxLength={15}\n//                     onChange={event => filterAndSetUsername(event.target.value)}></input>\n//                 <div className='zip-sex-wrapper'>\n//                     <input\n//                         type='number'\n//                         className={`zip-input ${isInvalidZipcode}`}\n//                         placeholder='Hometown ZIP'\n//                         value={zipcode}\n//                         onChange={event => filterAndSetZipcode(event.target.value)}></input>\n//                     <button className={`sex-button ${maleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Male') }}>M</button>\n//                     <button className={`sex-button ${femaleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Female') }}>F</button>\n//                 </div>\n//                 <button\n//                     className={`reg-button ${isValidSubmit}`}\n//                     onClick={event => s ubmit(event, email)}\n//                     disabled={!isValidSubmit}>Submit</button>\n//             </div>\n//         )\n//     }\n//     return (\n//         <form className='reg-form'>\n//             {spinning ? <div className='reg-form-spinner'></div> : null}\n//             <h1 className='reg-header'>Sign Up</h1>\n//             {form}\n//         </form>\n//     )\n// }\n// export default RegForm","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react'\n// import validator from 'validator'\n// import firebase from 'firebase'\n// import { regions } from '../../../shared/regions'\n// import './RegForm.css'\n// import axios from 'axios'\n// import { errorCreater } from '../../../shared/utility'\n\n// function RegForm(props) {\n\n//     // State\n\n//     // data \n//     let [allEmails, setAllEmails] = useState([])\n//     let [allUsernames, setAllUsernames] = useState([])\n//     let [mysteryManBlob, setMysteryManBlob] = useState(null)\n\n//     // ui\n//     let [step, setStep] = useState('account')\n//     let [spinning, setSpinner] = useState(false)\n\n//     //profile\n//     let [email, setEmail] = useState('')\n//     let [password, setPass] = useState('')\n//     let [username, setUsername] = useState('')\n//     let [zipcode, setZipcode] = useState('')\n//     let [gender, pickGender] = useState('')\n\n\n//     // filter functions\n//     const filterAndSetUsername = (value) => {\n//         const regex = new RegExp(/^[A-Za-z0-9_]+$/)\n//         if (regex.test(value) || value === '') {\n//             setUsername(value.toLowerCase())\n//         } else {\n//             return\n//         }\n//     }\n\n//     const filterAndSetZipcode = (value) => {\n//         if (value.length <= 5) {\n//             setZipcode(value)\n//         }\n//     }\n\n//     // validate functions\n//     const validateEmail = (email) => {\n//         if (!validator.isEmail(email)) {\n//             return false\n//         }\n//         return true\n//     }\n//     const validatePassword = (password) => {\n//         if (password.length < 6) {\n//             return false\n//         }\n//         return true\n//     }\n//     const validateUsername = (username) => {\n//         if (username.length < 3) {\n//             return false\n//         }\n//         return true\n//     }\n\n//     const validateZipcode = (zipcode) => {\n//         if (zipcode.length === 5) {\n//             return true\n//         } return false\n//     }\n\n//     // auth functions\n//     const firstStep = async () => {\n//         setSpinner(true)\n//         try {\n//             await fetchEmailsAndUsernames()\n//             if (allEmails.includes(email)) {\n//                 throw errorCreater('The email address is already in use by another account.')\n//             } else {\n//                 setSpinner(false)\n//                 setStep('profile')\n//             }\n//         }\n\n//         catch (err) {\n//             setSpinner(false)\n//             notifyWithErr(err.message)\n//         }\n//     }\n\n\n\n//     const submit = async (event) => {\n//         event.preventDefault()\n//         setSpinner(true)\n\n//         try {\n//             // username check\n//             await fetchEmailsAndUsernames()\n//             if (allUsernames.includes(username)) {\n//                 throw errorCreater('That username is taken.')\n//             }\n//             if (allEmails.includes(email)) {\n//                 throw errorCreater('The email address is already in use by another account.')\n//             }\n//             // zipcode check\n//             const address = await fetchAddressFromZipcode(zipcode)\n//             console.log(address)\n//             let [emailFire, uid] = await createAuthUser(email, password)\n//             const photoURL = await uploadMysteryMan(uid)\n//             await createFirebaseUser(emailFire, uid, address, photoURL)\n\n//             // success!\n\n//             props.setErrSentiment(true)\n//             notifyWithErr('Profile Created Successfully!')\n//             setSpinner(false)\n//             setUsername('')\n//             setZipcode('')\n//             pickGender('')\n//             props.setEmail(email)\n//             props.setPassword(password)\n//             setEmail('')\n//             setPass('')\n\n\n\n//         }\n//         catch (err) {\n//             notifyWithErr(err.message)\n//             setSpinner(false)\n//         }\n//     }\n//     const notifyWithErr = (msg) => {\n//         props.setErrMsg(msg)\n//         props.setShowErr(true)\n//     }\n\n//     // validate values (account)\n//     const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n//     const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n//     const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass && !spinning ? 'valid' : null\n\n\n//     // validate values (profile)\n//     const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null\n//     const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null\n//     const maleSelected = gender === 'Male' ? 'focused-sex' : null\n//     const femaleSelected = gender === 'Female' ? 'focused-sex' : null\n//     const isValidSubmit = (\n//         username &&\n//         zipcode &&\n//         gender &&\n//         validateUsername(username) &&\n//         validateZipcode(zipcode) &&\n//         !spinning\n//     ) ? 'valid' : null\n\n\n//     // form\n//     let form = (\n//         <div className={`account-wrapper`}>\n//             <div className='reg-detail'>Account Info</div>\n//             <input\n//                 className={`large-input ${isInvalidEmail}`}\n//                 placeholder='Email'\n//                 value={email}\n//                 onChange={event => setEmail(event.target.value)}></input>\n//             <input\n//                 className={`large-input ${isInvalidPass}`}\n//                 type='password'\n//                 value={password}\n//                 placeholder='Password'\n//                 onChange={event => setPass(event.target.value)}></input>\n//             <button\n//                 className={`reg-button ${isValidContinue}`}\n//                 onClick={(event) => {\n//                     event.preventDefault();\n//                     firstStep()\n//                 }}\n//                 disabled={!isValidContinue}>Continue</button>\n//         </div>\n\n//     )\n//     if (step === 'profile') {\n//         form = (\n//             <div className={`profile-wrapper`}>\n//                 <i className=\"fas fa-chevron-left\" id='reg-form-back' onClick={() => setStep('account')}></i>\n//                 <div className='reg-detail'>Profile Info</div>\n//                 <input\n//                     className={`large-input ${isInvalidUsername}`}\n//                     placeholder='Username'\n//                     value={username}\n//                     maxLength={15}\n//                     onChange={event => filterAndSetUsername(event.target.value)}></input>\n//                 <div className='zip-sex-wrapper'>\n//                     <input\n//                         type='number'\n//                         className={`zip-input ${isInvalidZipcode}`}\n//                         placeholder='Hometown ZIP'\n//                         value={zipcode}\n//                         onChange={event => filterAndSetZipcode(event.target.value)}></input>\n//                     <button className={`sex-button ${maleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Male') }}>M</button>\n//                     <button className={`sex-button ${femaleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Female') }}>F</button>\n//                 </div>\n//                 <button\n//                     className={`reg-button ${isValidSubmit}`}\n//                     onClick={event => s ubmit(event, email)}\n//                     disabled={!isValidSubmit}>Submit</button>\n//             </div>\n//         )\n//     }\n//     return (\n//         <form className='reg-form'>\n//             {spinning ? <div className='reg-form-spinner'></div> : null}\n//             <h1 className='reg-header'>Sign Up</h1>\n//             {form}\n//         </form>\n//     )\n// }\n\n// export default RegForm\n"]},"metadata":{},"sourceType":"module"}