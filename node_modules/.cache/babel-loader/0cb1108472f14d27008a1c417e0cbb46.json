{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from './actions';\nimport vinyl from '../assets/vinyl.mov';\nimport firebase from '../Firebase';\nconst initialState = {\n  // global background\n  bgvideo: vinyl,\n  bgvideostyle: null,\n  // music related\n  playing: false,\n  musicURL: '',\n  volume: 50,\n  songPointer: 0,\n  allStations: {\n    lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n    boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n    dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n    chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n  },\n  // user related,\n  loggedIn: false,\n  needsInfo: true,\n  autoSignInOver: false,\n  uid: '',\n  email: '',\n  username: '?',\n  gender: '?',\n  address: '?',\n  photoRef: '?',\n  handles: {\n    facebook: '',\n    instagram: '',\n    soundcloud: '',\n    youtube: ''\n  },\n  // ui related\n  shouldRefetchPosts: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PLAY_MUSIC:\n      return _objectSpread({}, state, {\n        playing: true\n      });\n\n    case actionTypes.STOP_MUSIC:\n      return _objectSpread({}, state, {\n        playing: false\n      });\n\n    case actionTypes.CHANGE_MUSIC_URL:\n      return _objectSpread({}, state, {\n        musicURL: action.musicURL\n      });\n\n    case actionTypes.CHANGE_VOLUME:\n      return _objectSpread({}, state, {\n        volume: action.volume\n      });\n\n    case actionTypes.AUTHENTICATE:\n      return _objectSpread({}, state, {\n        loggedIn: true,\n        email: action.email\n      });\n\n    case actionTypes.SET_USER_DATA:\n      return _objectSpread({}, state, {\n        loggedIn: true,\n        autoSignInOver: true\n      }, action.data);\n\n    case actionTypes.LOG_OUT:\n      localStorage.removeItem('token');\n      localStorage.removeItem('expirationDate');\n      localStorage.removeItem('uid');\n      return _objectSpread({}, initialState, {\n        autoSignInOver: true\n      });\n\n    case actionTypes.SET_GLOBAL_BACKGROUND:\n      return _objectSpread({}, state, {\n        bgvideo: action.bgvideo\n      });\n\n    case actionTypes.SET_SONG_POINTER:\n      return _objectSpread({}, state, {\n        songPointer: action.value\n      });\n\n    case actionTypes.SET_SHOULD_REFETCH_POSTS:\n      return _objectSpread({}, state, {\n        shouldRefetchPosts: action.bool\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/davidkang/Desktop/barz/src/store/reducer.js"],"names":["actionTypes","vinyl","firebase","initialState","bgvideo","bgvideostyle","playing","musicURL","volume","songPointer","allStations","lofi","boombap","dilla","chillhop","loggedIn","needsInfo","autoSignInOver","uid","email","username","gender","address","photoRef","handles","facebook","instagram","soundcloud","youtube","shouldRefetchPosts","reducer","state","action","type","PLAY_MUSIC","STOP_MUSIC","CHANGE_MUSIC_URL","CHANGE_VOLUME","AUTHENTICATE","SET_USER_DATA","data","LOG_OUT","localStorage","removeItem","SET_GLOBAL_BACKGROUND","SET_SONG_POINTER","value","SET_SHOULD_REFETCH_POSTS","bool"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\nimport vinyl from '../assets/vinyl.mov'\nimport firebase from '../Firebase'\n\nconst initialState = {\n\n    // global background\n    bgvideo: vinyl,\n    bgvideostyle: null,\n\n    // music related\n    playing: false,\n    musicURL: '',\n    volume: 50,\n    songPointer: 0,\n    allStations: {\n        lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n        boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n        dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n        chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n    },\n    \n    // user related,\n    loggedIn: false,\n    needsInfo: true,\n    autoSignInOver: false,\n    \n    uid: '',\n    email: '',\n    username: '?',\n    gender: '?',\n    address: '?',\n    photoRef: '?',\n    handles: {\n        facebook: '',\n        instagram: '',\n        soundcloud: '',\n        youtube: ''\n    },\n\n    // ui related\n    shouldRefetchPosts: false\n\n}\n\nconst reducer = (state=initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.PLAY_MUSIC:\n\n            return {\n                ...state,\n                playing: true\n            }\n        case actionTypes.STOP_MUSIC:\n\n            return {\n                ...state,\n                playing: false\n            }\n        case actionTypes.CHANGE_MUSIC_URL:\n            return {\n                ...state,\n                musicURL: action.musicURL\n            }\n        case actionTypes.CHANGE_VOLUME:\n            return {\n                ...state,\n                volume: action.volume\n            }\n        case actionTypes.AUTHENTICATE:\n            return {\n                ...state,\n                loggedIn: true,\n                email: action.email\n            }\n        case actionTypes.SET_USER_DATA:\n            return {\n                ...state,\n                loggedIn: true,\n                autoSignInOver: true,\n                ...action.data\n            }\n        case actionTypes.LOG_OUT:\n            localStorage.removeItem('token')\n            localStorage.removeItem('expirationDate')\n            localStorage.removeItem('uid')\n            return {\n                ...initialState,\n            autoSignInOver: true\n            };\n            \n        case actionTypes.SET_GLOBAL_BACKGROUND:\n            return {\n                ...state,\n                bgvideo: action.bgvideo,\n            }\n        case actionTypes.SET_SONG_POINTER:\n\n            return {\n                ...state,\n                songPointer: action.value\n            }\n        case actionTypes.SET_SHOULD_REFETCH_POSTS:\n            return {\n                ...state,\n                shouldRefetchPosts: action.bool\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}