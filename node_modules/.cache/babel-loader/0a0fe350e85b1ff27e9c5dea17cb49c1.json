{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport './PostEditor.css';\nimport { connect } from 'react-redux';\nimport FireApi from '../../../FireApi/FireApi';\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost';\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter';\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment';\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner';\nimport CircularSpinner from '../../../shared/CircularSpinner/CircularSpinner';\n\nconst PostEditor = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        votes = _useState4[0],\n        setVotes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cid = _useState8[0],\n        setCid = _useState8[1];\n\n  useEffect(() => {\n    FireApi.fetchSinglePost(setPost, props.pid);\n    const commentsListener = FireApi.allSubmissionCommentsListener(setComments);\n    const votesListener = FireApi.allVotesListener(setVotes, props.pid);\n    return () => {\n      commentsListener();\n      votesListener();\n    };\n  }, [props.pid]);\n  var content = React.createElement(CircularSpinner, {\n    customStyle: {\n      zIndex: '100'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n\n  if (post) {\n    content = React.createElement(\"div\", {\n      className: \"editor-layout__content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ManyPost, Object.assign({\n      comments: comments.filter(post => post.pid === props.pid),\n      selectPost: () => null,\n      votes: votes.filter(vote => vote.pid === props.pid),\n      customStyle: {\n        paragraph: {\n          width: '17em'\n        }\n      }\n    }, post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container-edit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Commenter, {\n      toggleDeleteCommentModal: (bool, cid) => setCid(cid),\n      customStyle: {\n        body: {\n          height: '16em',\n          backgroundColor: 'rgba(255, 255, 255, 0.95)'\n        } // header: {\n        //     backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        //     width: '16em'\n        // }\n\n      },\n      selectedPost: post,\n      postSelected: post,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content-container__options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-cog options__cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"editor-layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, cid ? React.createElement(DeleteComment, {\n    cid: cid,\n    toggleDeleteCommentModal: () => setCid(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"editor-backdrop\",\n    onClick: () => props.toggleEditor(null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), content);\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js"],"names":["React","useState","useEffect","connect","FireApi","ManyPost","Commenter","DeleteComment","DotSpinner","CircularSpinner","PostEditor","props","comments","setComments","votes","setVotes","post","setPost","cid","setCid","fetchSinglePost","pid","commentsListener","allSubmissionCommentsListener","votesListener","allVotesListener","content","zIndex","filter","vote","paragraph","width","bool","body","height","backgroundColor","toggleEditor","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './PostEditor.css'\nimport { connect } from 'react-redux'\nimport FireApi from '../../../FireApi/FireApi'\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost'\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter'\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment'\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner'\nimport CircularSpinner from '../../../shared/CircularSpinner/CircularSpinner'\n\nconst PostEditor = (props) => {\n\n    const [comments, setComments] = useState([])\n    const [votes, setVotes] = useState([])\n    const [post, setPost] = useState(null)\n    const [cid, setCid] = useState(null)\n\n    useEffect(() => {\n\n        FireApi.fetchSinglePost(setPost, props.pid)\n        const commentsListener = FireApi.allSubmissionCommentsListener(setComments)\n        const votesListener = FireApi.allVotesListener(setVotes, props.pid)\n\n        return () => {\n            commentsListener()\n            votesListener()\n        };\n    }, [props.pid])\n\n    var content = <CircularSpinner customStyle={{ zIndex: '100' }} />\n    if (post) {\n        content = (\n            <div className={`editor-layout__content-container`}>\n\n                <ManyPost\n                    comments={comments.filter(post => post.pid === props.pid)}\n                    selectPost={() => null}\n                    votes={votes.filter(vote => vote.pid === props.pid)}\n                    customStyle={{ paragraph: { width: '17em' } }}\n                    {...post} />\n                <div className={`content-container-edit-container`}>\n                    <Commenter\n                        toggleDeleteCommentModal={(bool, cid) => setCid(cid)}\n                        customStyle={{\n                            body: {\n                                height: '16em',\n                                backgroundColor: 'rgba(255, 255, 255, 0.95)'\n                            },\n                            // header: {\n                            //     backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                            //     width: '16em'\n                            // }\n                        }}\n                        selectedPost={post}\n                        postSelected={post}\n                        comments={comments} />\n                    <div className={`content-container__options`}>\n                        <div><i className=\"fas fa-cog options__cog\"></i></div>\n                    </div>\n\n                </div>\n            </div>\n\n        )\n    }\n    return (\n        <div className={`editor-layout`}>\n            {cid ?\n                <DeleteComment\n                    cid={cid}\n                    toggleDeleteCommentModal={() => setCid(false)}\n                />\n                : null}\n            <div className='editor-backdrop' onClick={() => props.toggleEditor(null)} />\n            {content}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor)\n"]},"metadata":{},"sourceType":"module"}