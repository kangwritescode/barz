{"ast":null,"code":"var _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubNavBar/HubNavBar.js\";\nimport React, { Component } from 'react';\nimport './HubNavBar.css';\nimport { connect } from 'react-redux';\nimport WordNavItem from '../../Wordsmiths/WordNavBar/WordNavItem/WordNavItem';\n\nclass HubNavBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (!this.props.needsInfo) {\n        document.removeEventListener('click', this.toggleDropdown);\n      } else if (this.props.needsInfo) {\n        document.addEventListener('click', this.toggleDropdown);\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.toggleDropdown);\n  }\n\n  toggleDropdown(event) {\n    const feedDrop = document.getElementById(\"feed\"); // if (feedDrop)\n\n    event.target.classList.contains('feed') ? feedDrop.classList.toggle('show') : feedDrop.classList.remove('show');\n  }\n\n  render() {\n    var contents = React.createElement(\"div\", {\n      className: \"HubNavBarSectionContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SortContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Feed:\"), React.createElement(WordNavItem, {\n      dropItems: ['Personal', 'Following'],\n      type: \"feed\",\n      display: this.props.feed,\n      sortAndFilter: this.props.sortAndFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n\n    if (this.props.needsInfo) {\n      contents = null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"HubNavBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, contents);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    needsInfo: state.user.needsInfo\n  };\n};\n\nexport default connect(mapStateToProps, null)(HubNavBar);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubNavBar/HubNavBar.js"],"names":["React","Component","connect","WordNavItem","HubNavBar","componentDidUpdate","prevProps","prevState","props","needsInfo","document","removeEventListener","toggleDropdown","addEventListener","componentWillUnmount","event","feedDrop","getElementById","target","classList","contains","toggle","remove","render","contents","feed","sortAndFilter","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAM9BI,kBAN8B,GAMT,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC3C,UAAI,CAAC,KAAKC,KAAL,CAAWC,SAAhB,EAA2B;AACvBC,QAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsC,KAAKC,cAA3C;AACH,OAFD,MAEO,IAAI,KAAKJ,KAAL,CAAWC,SAAf,EAA0B;AAC7BC,QAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmC,KAAKD,cAAxC;AACH;AACJ,KAZ6B;AAAA;;AAG9BE,EAAAA,oBAAoB,GAAG;AACnBJ,IAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsC,KAAKC,cAA3C;AACH;;AASDA,EAAAA,cAAc,CAACG,KAAD,EAAQ;AAClB,UAAMC,QAAQ,GAAGN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAAjB,CADkB,CAElB;;AACAF,IAAAA,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,MAAhC,IAA0CJ,QAAQ,CAACG,SAAT,CAAmBE,MAAnB,CAA0B,MAA1B,CAA1C,GAA8EL,QAAQ,CAACG,SAAT,CAAmBG,MAAnB,CAA0B,MAA1B,CAA9E;AACH;;AAIDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,QAAQ,GACR;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAE,CAAC,UAAD,EAAa,WAAb,CADf;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiB,IAHxB;AAII,MAAA,aAAa,EAAE,KAAKjB,KAAL,CAAWkB,aAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;;AAYA,QAAI,KAAKlB,KAAL,CAAWC,SAAf,EAA0B;AACtBe,MAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QADL,CADJ;AAKH;;AA5C6B;;AAgDlC,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHnB,IAAAA,SAAS,EAAEmB,KAAK,CAACC,IAAN,CAAWpB;AADnB,GAAP;AAGH,CAJD;;AAOA,eAAeP,OAAO,CAACyB,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,SAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './HubNavBar.css'\nimport { connect } from 'react-redux'\nimport WordNavItem from '../../Wordsmiths/WordNavBar/WordNavItem/WordNavItem'\n\nclass HubNavBar extends Component {\n\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.toggleDropdown)\n    }\n    componentDidUpdate = (prevProps, prevState) => {\n        if (!this.props.needsInfo) {\n            document.removeEventListener('click', this.toggleDropdown)\n        } else if (this.props.needsInfo) {\n            document.addEventListener('click', this.toggleDropdown)\n        }\n    }\n\n    toggleDropdown(event) {\n        const feedDrop = document.getElementById(\"feed\");\n        // if (feedDrop)\n        event.target.classList.contains('feed') ? feedDrop.classList.toggle('show') : feedDrop.classList.remove('show');\n    }\n\n\n\n    render() {\n\n        var contents = (\n            <div className=\"HubNavBarSectionContainer\">\n                <div className=\"SortContainer\">\n                    <p id=\"sort\">Feed:</p>\n                    <WordNavItem\n                        dropItems={['Personal', 'Following']}\n                        type=\"feed\"\n                        display={this.props.feed}\n                        sortAndFilter={this.props.sortAndFilter} />\n                </div>\n            </div>\n        )\n        if (this.props.needsInfo) {\n            contents = null\n        }\n        return (\n            <div className=\"HubNavBar\">\n                {contents}\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        needsInfo: state.user.needsInfo\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(HubNavBar);"]},"metadata":{},"sourceType":"module"}