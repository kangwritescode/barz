{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/barz/src/containers/Judge/JudgeBarz/ManyView/ManyView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport './ManyView.css';\nimport ManyPost from './ManyPost/ManyPost';\nimport earl from '../../../../assets/artistSpotlight/earl-spotlight.png';\nimport ViewedPost from '../../../../components/Scribble/MyBars/ViewedBar/ViewedPost';\nimport timeDict from '../../../Wordsmiths/WordSmithsTools/timeDict';\nimport ReactPlayer from 'react-player';\nimport Turntable from '../../../../components/Scribble/Turntable/Turntable';\n\nclass ManyView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissions: [],\n      votes: {},\n      comments: []\n    };\n\n    this.componentDidMount = () => {\n      this.fetchSubmissions();\n      this.fetchVotes();\n      this.fetchSubmissionComments();\n    };\n\n    this.fetchSubmissionComments = () => {\n      const db = firebase.firestore();\n      db.collection('postComments').onSnapshot(snapshot => {\n        var comments = [];\n\n        for (var comment of snapshot.docs) {\n          var comment = _objectSpread({}, comment.data(), {\n            cid: comment.id\n          });\n\n          comments.push(comment);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          comments: comments\n        }));\n      });\n    };\n\n    this.fetchSubmissions = () => {\n      const db = firebase.firestore();\n      db.collection('submissions').onSnapshot(snapshot => {\n        var submissions = [];\n\n        for (var submission of snapshot.docs) {\n          var submission = _objectSpread({}, submission.data(), {\n            pid: submission.id\n          });\n\n          submissions.push(submission);\n        }\n\n        this.setState(_objectSpread({}, this.state, {\n          submissions: submissions\n        }));\n      });\n    };\n\n    this.fetchVotes = () => {\n      var db = firebase.firestore();\n      const votes = {};\n      db.collection('postVotes').onSnapshot(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          var vote = _objectSpread({}, doc.data());\n\n          votes[doc.id] = vote;\n        });\n        this.setState(_objectSpread({}, this.state, {\n          votes: votes\n        }));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.submissionLikes = pid => {\n      var votes = Object.values(this.state.votes);\n      var postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1);\n      console.log(postVotes);\n      return postVotes.length;\n    };\n\n    this.submissionComments = pid => {\n      var comments = [...this.state.comments];\n      var postComments = comments.filter(comment => comment.pid === pid);\n      return postComments.length;\n    };\n\n    this.sort_submissions = submissions => {\n      var submissions = [...submissions];\n\n      switch (this.props.sort) {\n        case 'Newest':\n          submissions = submissions.sort((a, b) => {\n            var first = a.createdOn.toDate();\n            var second = b.createdOn.toDate();\n            return first > second ? -1 : 1;\n          });\n          break;\n\n        case 'Oldest':\n          submissions = submissions.sort((a, b) => {\n            var first = a.createdOn.toDate();\n            var second = b.createdOn.toDate();\n            return first < second ? -1 : 1;\n          });\n          break;\n\n        case 'Likes':\n          submissions = submissions.sort((a, b) => {\n            var aVotes = this.submissionLikes(a.pid);\n            var bVotes = this.submissionLikes(b.pid);\n            return aVotes > bVotes ? -1 : 1;\n          });\n          break;\n\n        case 'Comments':\n          submissions = submissions.sort((a, b) => {\n            var aComments = this.submissionComments(a.pid);\n            var bComments = this.submissionComments(b.pid);\n            return aComments > bComments ? -1 : 1;\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return submissions;\n    };\n\n    this.filter_submissions = submissions => {\n      var submissions = [...submissions]; // Voted / Unvoted filter\n\n      if (this.props.filter !== 'All Posts') {\n        var votes = this.state.votes;\n        votes = Object.values(votes);\n        var myVotes = votes.filter(vote => vote.voterID === this.props.uid);\n        submissions = submissions.filter(submission => {\n          var thisVotes = myVotes.filter(vote => vote.pid === submission.pid);\n          var unvoted = true;\n          thisVotes.forEach(vote => {\n            if (vote.value === 1 || vote.value === -1) {\n              unvoted = false;\n            }\n          });\n\n          if (this.props.filter === 'Unvoted') {\n            return unvoted;\n          } else {\n            return !unvoted;\n          }\n        });\n      } // Coast filter\n\n\n      if (this.props.coast !== 'All Coasts') {\n        switch (this.props.coast) {\n          case 'West':\n            submissions = submissions.filter(submission => submission.address.region === 'West');\n            break;\n\n          case 'East':\n            submissions = submissions.filter(submission => submission.address.region === 'East');\n            break;\n\n          case 'South':\n            submissions = submissions.filter(submission => submission.address.region === 'South');\n            break;\n\n          case 'Midwest':\n            submissions = submissions.filter(submission => submission.address.region === 'Midwest');\n            break;\n\n          default:\n            break;\n        }\n      } // Time filter\n\n\n      submissions = submissions.filter(submission => {\n        var now = new Date();\n        var passedMilliseconds = now - submission.createdOn.toDate().getTime();\n        var passedDays = passedMilliseconds / 1000 / 60 / 60 / 24;\n        return passedDays < timeDict[this.props.time];\n      });\n      return submissions;\n    };\n  }\n\n  render() {\n    var submissions = [...this.state.submissions];\n    submissions = this.sort_submissions(submissions);\n    submissions = this.filter_submissions(submissions);\n    var manyPosts = null;\n\n    if (submissions.length > 0) {\n      var manyPosts = submissions.map((submission, index) => {\n        return React.createElement(ManyPost, Object.assign({\n          key: submission.pid,\n          index: index,\n          toggleModal: this.props.toggleModal\n        }, submission, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"many-view-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"many-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"many-view__posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, manyPosts), React.createElement(\"div\", {\n      className: \"many-view__widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tv__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"BARZ.TV\")), React.createElement(ReactPlayer, {\n      controls: true,\n      volume: .8,\n      url: 'https://www.youtube.com/watch?v=vH6lAFxnYkM',\n      playing: false,\n      width: \"100%\",\n      height: \"12em\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"turntable-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Turntable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"artist-spotlight\",\n      onClick: () => this.props.togglePro(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"artist-spotlight__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"PRO.SPOTLIGHT\")), React.createElement(\"div\", {\n      className: \"img-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"earl\",\n      src: earl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\\"It's the blackest \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), \"piece of trash they  \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \"done seen in   \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), \"a RV park...\\\"\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(ManyView);","map":{"version":3,"sources":["/Users/davidkang/Desktop/barz/src/containers/Judge/JudgeBarz/ManyView/ManyView.js"],"names":["React","Component","firebase","connect","ManyPost","earl","ViewedPost","timeDict","ReactPlayer","Turntable","ManyView","state","submissions","votes","comments","componentDidMount","fetchSubmissions","fetchVotes","fetchSubmissionComments","db","firestore","collection","onSnapshot","snapshot","comment","docs","data","cid","id","push","setState","submission","pid","querySnapshot","forEach","doc","vote","err","console","log","submissionLikes","Object","values","postVotes","filter","value","length","submissionComments","postComments","sort_submissions","props","sort","a","b","first","createdOn","toDate","second","aVotes","bVotes","aComments","bComments","filter_submissions","myVotes","voterID","uid","thisVotes","unvoted","coast","address","region","now","Date","passedMilliseconds","getTime","passedDays","time","render","manyPosts","map","index","toggleModal","togglePro","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport './ManyView.css'\nimport ManyPost from './ManyPost/ManyPost'\nimport earl from '../../../../assets/artistSpotlight/earl-spotlight.png'\nimport ViewedPost from '../../../../components/Scribble/MyBars/ViewedBar/ViewedPost'\nimport timeDict from '../../../Wordsmiths/WordSmithsTools/timeDict'\nimport ReactPlayer from 'react-player'\nimport Turntable from '../../../../components/Scribble/Turntable/Turntable'\n\nclass ManyView extends Component {\n\n    state = {\n        submissions: [],\n        votes: {},\n        comments: [],\n\n\n    }\n\n    componentDidMount = () => {\n        this.fetchSubmissions()\n        this.fetchVotes()\n        this.fetchSubmissionComments()\n    }\n\n\n    fetchSubmissionComments = () => {\n        const db = firebase.firestore()\n        db.collection('postComments').onSnapshot((snapshot) => {\n            var comments = []\n            for (var comment of snapshot.docs) {\n                var comment = {\n                    ...comment.data(),\n                    cid: comment.id\n                }\n                comments.push(comment)\n            }\n            this.setState({\n                ...this.state,\n                comments: comments\n            })\n\n        })\n    }\n\n    fetchSubmissions = () => {\n        const db = firebase.firestore()\n        db.collection('submissions').onSnapshot((snapshot) => {\n            var submissions = []\n            for (var submission of snapshot.docs) {\n                var submission = {\n                    ...submission.data(),\n                    pid: submission.id\n                }\n                submissions.push(submission)\n            }\n            this.setState({\n                ...this.state,\n                submissions: submissions\n            })\n\n        })\n    }\n\n    fetchVotes = () => {\n        var db = firebase.firestore()\n        const votes = {}\n        db.collection('postVotes').onSnapshot(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n                var vote = { ...doc.data() }\n                votes[doc.id] = vote\n            })\n            this.setState({\n                ...this.state,\n                votes: votes\n            })\n        }, err => {\n            console.log(err)\n        })\n    }\n\n\n\n    submissionLikes = (pid) => {\n        var votes = Object.values(this.state.votes)\n        var postVotes = votes.filter(vote => vote.pid === pid && vote.value === 1)\n        console.log(postVotes)\n        return postVotes.length\n    }\n\n    submissionComments = (pid) => {\n        var comments = [...this.state.comments]\n        var postComments = comments.filter(comment => comment.pid === pid)\n        return postComments.length\n    }\n\n    sort_submissions = (submissions) => {\n        var submissions = [...submissions]\n        switch (this.props.sort) {\n            case 'Newest':\n                submissions = submissions.sort((a, b) => {\n                    var first = a.createdOn.toDate()\n                    var second = b.createdOn.toDate()\n                    return first > second ? -1 : 1\n                })\n                break;\n            case 'Oldest':\n                submissions = submissions.sort((a, b) => {\n                    var first = a.createdOn.toDate()\n                    var second = b.createdOn.toDate()\n                    return first < second ? -1 : 1\n                })\n                break;\n            case 'Likes':\n                submissions = submissions.sort((a, b) => {\n                    var aVotes = this.submissionLikes(a.pid)\n                    var bVotes = this.submissionLikes(b.pid)\n                    return aVotes > bVotes ? -1 : 1\n                })\n                break;\n            case 'Comments':\n                submissions = submissions.sort((a, b) => {\n                    var aComments = this.submissionComments(a.pid)\n                    var bComments = this.submissionComments(b.pid)\n                    return aComments > bComments ? -1 : 1\n                })\n                break;\n            default:\n                break;\n        }\n        return submissions\n    }\n\n    filter_submissions = (submissions) => {\n        var submissions = [...submissions]\n\n        // Voted / Unvoted filter\n        if (this.props.filter !== 'All Posts') {\n            var votes = this.state.votes\n            votes = Object.values(votes)\n            var myVotes = votes.filter(vote => vote.voterID === this.props.uid)\n            submissions = submissions\n                .filter(submission => {\n                    var thisVotes = myVotes.filter(vote => vote.pid === submission.pid)\n                    var unvoted = true\n                    thisVotes.forEach(vote => {\n                        if (vote.value === 1 || vote.value === -1) {\n                            unvoted = false\n                        }\n                    })\n                    if (this.props.filter === 'Unvoted') {\n                        return unvoted\n                    } else {\n                        return !unvoted\n                    }\n                })\n        }\n        // Coast filter\n        if (this.props.coast !== 'All Coasts') {\n            switch (this.props.coast) {\n                case 'West':\n                    submissions = submissions.filter(submission => submission.address.region === 'West')\n                    break;\n                case 'East':\n                    submissions = submissions.filter(submission => submission.address.region === 'East')\n                    break;\n                case 'South':\n                    submissions = submissions.filter(submission => submission.address.region === 'South')\n                    break;\n                case 'Midwest':\n                    submissions = submissions.filter(submission => submission.address.region === 'Midwest')\n                    break;\n                default:\n                    break;\n            }\n        }\n        // Time filter\n        submissions = submissions.filter(submission => {\n            var now = new Date()\n            var passedMilliseconds = now - submission.createdOn.toDate().getTime()\n            var passedDays = (passedMilliseconds / 1000 / 60 / 60 / 24)\n            return passedDays < timeDict[this.props.time]\n        })\n        return submissions\n    }\n\n\n\n    render() {\n\n        var submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n        var manyPosts = null\n        if (submissions.length > 0) {\n            var manyPosts = submissions.map((submission, index) => {\n\n                return (\n                    <ManyPost\n                        key={submission.pid}\n                        index={index}\n                        toggleModal={this.props.toggleModal}\n                        {...submission} />\n                )\n            })\n        }\n\n\n        return (\n            <div className='many-view-layout'>\n                <div className='many-view'>\n                    <div className='many-view__posts'>\n                        {manyPosts}\n                    </div>\n                    <div className='many-view__widgets'>\n                        <div className='tv'>\n                            <div className='tv__header'>\n                                <div>BARZ.TV</div>\n                            </div>\n                            <ReactPlayer\n                                controls\n                                volume={.8}\n                                url={'https://www.youtube.com/watch?v=vH6lAFxnYkM'}\n                                playing={false}\n                                width=\"100%\"\n                                height=\"12em\" />\n                        </div>\n                        <div className='turntable-wrapper'>\n                            <Turntable />\n                        </div>\n                        <div className='artist-spotlight' onClick={() => this.props.togglePro(true)}>\n                            <div className='artist-spotlight__header'>\n                                <div>PRO.SPOTLIGHT</div>\n                            </div>\n                            <div className='img-wrapper'>\n                                <img alt='earl' src={earl}></img>\n                            </div>\n                            <div className='text'>\n                                \"It's the blackest <br />\n                                piece of trash they  <br />\n                                done seen in   <br />\n                                a RV park...\"\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(ManyView)\n"]},"metadata":{},"sourceType":"module"}