{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js\";\nimport React, { useState } from 'react';\nimport './Landing.css';\nimport splashVid from '../../assets/splash-vid.m4v';\nimport LandingNav from './LandingNav/LandingNav';\nimport RegForm from './RegForm/RegForm';\nexport default function Landing() {\n  // ui state\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReg = _useState2[0],\n      updateReg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showErr = _useState4[0],\n      setShowErr = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMsg = _useState6[0],\n      setErrMsg = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errSentiment = _useState8[0],\n      setErrSentiment = _useState8[1]; // login\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1]; // header-text \n\n\n  var blurOne = isReg ? 'blurOne' : null;\n  var blurTwo = isReg ? 'blurTwo' : null;\n  var blurThree = isReg ? 'blurThree' : null; // register form\n\n  var registerBody = isReg ? 'expanded' : null;\n  var regText = isReg ? 'register-text-hidden' : null;\n  var regForm = null;\n\n  if (isReg) {\n    regForm = React.createElement(RegForm, {\n      updateReg: updateReg,\n      setErrMsg: setErrMsg,\n      setShowErr: setShowErr,\n      setErrSentiment: setErrSentiment,\n      setEmail: setEmail,\n      setPassword: setPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"splash-video-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    className: \"splash-video\",\n    src: splashVid,\n    autoPlay: true,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(LandingNav, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"header-word \".concat(blurOne),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Scribble. \"), React.createElement(\"span\", {\n    className: \"header-word \".concat(blurTwo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Judge. \"), React.createElement(\"span\", {\n    className: \"header-word \".concat(blurThree),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Compete. \")), React.createElement(\"div\", {\n    className: \"register \".concat(registerBody),\n    onClick: () => !isReg ? updateReg(!isReg) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, showErr && isReg ? React.createElement(\"div\", {\n    className: \"error-msg \".concat(errSentiment ? 'positive-msg' : null),\n    onAnimationEnd: () => {\n      setShowErr(false);\n      setErrSentiment(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, errMsg) : null, React.createElement(\"span\", {\n    className: regText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sign Up\"), regForm)), React.createElement(\"div\", {\n    className: \"scribble-tut\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js"],"names":["React","useState","splashVid","LandingNav","RegForm","Landing","isReg","updateReg","showErr","setShowErr","errMsg","setErrMsg","errSentiment","setErrSentiment","email","setEmail","password","setPassword","blurOne","blurTwo","blurThree","registerBody","regText","regForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './Landing.css'\nimport splashVid from '../../assets/splash-vid.m4v'\nimport LandingNav from './LandingNav/LandingNav'\nimport RegForm from './RegForm/RegForm'\n\nexport default function Landing() {\n\n    // ui state\n    var [isReg, updateReg] = useState(true)\n    var [showErr, setShowErr] = useState(false)\n    var [errMsg, setErrMsg] = useState('')\n    var [errSentiment, setErrSentiment] = useState(false)\n\n    // login\n    var [email, setEmail] = useState('')\n    var [password, setPassword] = useState('')\n\n    // header-text \n    var blurOne = isReg ? 'blurOne' : null\n    var blurTwo = isReg ? 'blurTwo' : null\n    var blurThree = isReg ? 'blurThree' : null\n\n    // register form\n    var registerBody = isReg ? 'expanded' : null\n    var regText = isReg ? 'register-text-hidden' : null\n\n    var regForm = null;\n    if (isReg) {\n        regForm = (\n        <RegForm \n            updateReg={updateReg} \n            setErrMsg={setErrMsg}\n            setShowErr={setShowErr}\n            setErrSentiment={setErrSentiment}\n            setEmail={setEmail}\n            setPassword={setPassword}/>\n        )\n    }\n\n    return (\n\n        <div className='landing'>\n            <div className='splash-video-overlay'></div>\n            <video className=\"splash-video\" src={splashVid} autoPlay={true} loop={true} playsInline={true} muted />\n            <LandingNav \n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}/>\n            <div className='content'>\n                <div className='header-wrapper'>\n                    <div className={`header-text`}>\n                        <span className={`header-word ${blurOne}`}>Scribble. </span>\n                        <span className={`header-word ${blurTwo}`}>Judge. </span>\n                        <span className={`header-word ${blurThree}`}>Compete. </span>\n                    </div>\n                    <div className={`register ${registerBody}`} onClick={() => !isReg ? updateReg(!isReg) : null}>\n                        {showErr && isReg ? <div className={`error-msg ${errSentiment ? 'positive-msg' : null}`} onAnimationEnd={() => {setShowErr(false); setErrSentiment(false);}}>{errMsg}</div> : null}\n                        <span className={regText}>Sign Up</span>\n                        {regForm}\n                    </div>\n                </div>\n                <div className='scribble-tut'></div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}