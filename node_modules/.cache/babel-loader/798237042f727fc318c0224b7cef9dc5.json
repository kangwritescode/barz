{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/Scribble.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport * as actionTypes from '../../store/actions';\nimport './Scribble.css';\nimport vinyl from '../../assets/vinyl.mov';\nimport vinyIMG from '../../assets/vinylIMG.png';\nimport Post from './Post/Post';\nimport MyBars from './MyBars/MyBars';\nimport Toolkit from './Toolkit/Toolkit';\nimport Turntable from './Turntable/Turntable';\nimport nafla from '../../assets/nafla-blows.m4v';\n\nconst Scribble = () => {\n  const _useState = useState('Post'),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewFocus = _useState2[0],\n        setViewFocus = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showPostEditor = _useState4[0],\n        togglePostEditor = _useState4[1];\n\n  const toggleView = () => {\n    return viewFocus === 'Post' ? setViewFocus('MyBars') : setViewFocus('Post');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Scribble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"backup-img\",\n    src: vinyIMG,\n    alt: \"alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    src: vinyl,\n    autoPlay: true,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"scribbleOverlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row-one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(MyBars, {\n    focused: viewFocus,\n    toggle: toggleView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Post, {\n    focused: viewFocus,\n    toggle: toggleView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"row-two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Toolkit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"scribble-turntable-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Turntable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))));\n};\n\nlet mapStatetoProps = state => {\n  return {\n    musicURL: state.musicURL,\n    volume: state.volume,\n    playing: state.playing,\n    allStations: _objectSpread({}, state.allStations)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    playMusic: () => dispatch({\n      type: actionTypes.PLAY_MUSIC\n    }),\n    stopMusic: () => dispatch({\n      type: actionTypes.STOP_MUSIC\n    }),\n    changeURL: newURL => dispatch({\n      type: actionTypes.CHANGE_MUSIC_URL,\n      musicURL: newURL\n    }),\n    changeVol: volume => dispatch({\n      type: actionTypes.CHANGE_VOLUME,\n      volume: volume\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/Scribble.js"],"names":["React","Component","useState","connect","actionTypes","vinyl","vinyIMG","Post","MyBars","Toolkit","Turntable","nafla","Scribble","viewFocus","setViewFocus","showPostEditor","togglePostEditor","toggleView","mapStatetoProps","state","musicURL","volume","playing","allStations","mapDispatchToProps","dispatch","playMusic","type","PLAY_MUSIC","stopMusic","STOP_MUSIC","changeURL","newURL","CHANGE_MUSIC_URL","changeVol","CHANGE_VOLUME"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport * as actionTypes from '../../store/actions'\nimport './Scribble.css'\nimport vinyl from '../../assets/vinyl.mov'\nimport vinyIMG from '../../assets/vinylIMG.png'\nimport Post from './Post/Post'\nimport MyBars from './MyBars/MyBars'\nimport Toolkit from './Toolkit/Toolkit'\nimport Turntable from './Turntable/Turntable'\nimport nafla from '../../assets/nafla-blows.m4v'\n\n\nconst Scribble = () => {\n\n    const [viewFocus, setViewFocus] = useState('Post')\n    const [showPostEditor, togglePostEditor] = useState(false)\n\n    const toggleView = () => {\n        return viewFocus === 'Post' ? setViewFocus('MyBars') : setViewFocus('Post')\n    }\n\n    return (\n        <div className=\"Scribble\">\n            <img id='backup-img' src={vinyIMG} alt='alt'></img>\n            <video src={vinyl} autoPlay={true} loop={true} playsInline={true} muted />\n            <div id=\"scribbleOverlay\" />\n            <div className=\"row-one\">\n                <MyBars focused={viewFocus} toggle={toggleView} />\n                <Post focused={viewFocus} toggle={toggleView} />\n                <div></div>\n            </div>\n            <div className=\"row-two\">\n                <Toolkit />\n                <div className='scribble-turntable-wrapper'>\n                    <Turntable />\n                </div>\n            </div>\n        </div>\n    )\n}\nlet mapStatetoProps = state => {\n    return {\n        musicURL: state.musicURL,\n        volume: state.volume,\n        playing: state.playing,\n        allStations: {\n            ...state.allStations\n        }\n    }\n}\nlet mapDispatchToProps = dispatch => {\n    return {\n        playMusic: () => dispatch({ type: actionTypes.PLAY_MUSIC }),\n        stopMusic: () => dispatch({ type: actionTypes.STOP_MUSIC }),\n        changeURL: (newURL) => dispatch({ type: actionTypes.CHANGE_MUSIC_URL, musicURL: newURL }),\n        changeVol: (volume) => dispatch({ type: actionTypes.CHANGE_VOLUME, volume: volume })\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);"]},"metadata":{},"sourceType":"module"}