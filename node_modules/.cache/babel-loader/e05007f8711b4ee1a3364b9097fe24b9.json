{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js\";\nimport firebase from 'firebase';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport splashVid from '../../assets/videos/splash-vid.m4v';\nimport { fetchUserData } from '../../store/actions/auth';\nimport ForgotPassword from './ForgotPassword/ForgotPassword';\nimport './Landing.css';\nimport LandingNav from './LandingNav/LandingNav';\nimport RegForm from './RegForm/RegForm';\n\nconst Landing = props => {\n  // ui state\n  let _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReg = _useState2[0],\n      updateReg = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showErr = _useState4[0],\n      setShowErr = _useState4[1];\n\n  let _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMsg = _useState6[0],\n      setErrMsg = _useState6[1];\n\n  let _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errSentiment = _useState8[0],\n      setErrSentiment = _useState8[1];\n\n  let _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showForgotPass = _useState10[0],\n      toggleForgotPass = _useState10[1]; // login\n\n\n  let _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  let _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1]; // sign in\n\n\n  const signIn = async event => {\n    event.preventDefault();\n\n    try {\n      const uid = await authenticate(email, password);\n      props.getUserData(uid);\n    } catch (err) {\n      switch (err.code) {\n        case 'auth/invalid-email':\n          console.log(err.message);\n          break;\n\n        case \"auth/too-many-requests\":\n          let errMsg = \"Too many unsuccessful login attempts. Please try again later.\";\n          console.log(errMsg);\n          break;\n\n        case 'auth/user-not-found':\n          console.log(err.message);\n          break;\n\n        case 'auth/wrong-password':\n          console.log(err.message);\n          break;\n\n        default:\n          console.log(err, 'default!');\n      }\n    }\n  }; // authenticate\n\n\n  const authenticate = async (email, password) => {\n    return await firebase.auth().signInWithEmailAndPassword(email, password).then(successObj => {\n      // now's date\n      let expirationDate = new Date(); // now's date + 1 hour\n\n      expirationDate.setHours(expirationDate.getHours() + 100);\n      localStorage.setItem('token', successObj.user.refreshToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('uid', successObj.user.uid);\n      return successObj.user.uid;\n    }).catch(function (error) {\n      console.log(error);\n      throw error;\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, showForgotPass ? React.createElement(ForgotPassword, {\n    toggleForgotPass: toggleForgotPass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"splash-video-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    className: \"splash-video\",\n    src: splashVid,\n    autoPlay: false,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"landing__auth-frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-frame__logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"BARZ\"), React.createElement(\"div\", {\n    className: \"auth-frame__sub-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"sign-in__email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    autoComplete: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: uid => dispatch(fetchUserData(uid))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js"],"names":["firebase","React","useState","connect","splashVid","fetchUserData","ForgotPassword","LandingNav","RegForm","Landing","props","isReg","updateReg","showErr","setShowErr","errMsg","setErrMsg","errSentiment","setErrSentiment","showForgotPass","toggleForgotPass","email","setEmail","password","setPassword","signIn","event","preventDefault","uid","authenticate","getUserData","err","code","console","log","message","auth","signInWithEmailAndPassword","then","successObj","expirationDate","Date","setHours","getHours","localStorage","setItem","user","refreshToken","catch","error","target","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport splashVid from '../../assets/videos/splash-vid.m4v'\nimport { fetchUserData } from '../../store/actions/auth'\nimport ForgotPassword from './ForgotPassword/ForgotPassword'\nimport './Landing.css'\nimport LandingNav from './LandingNav/LandingNav'\nimport RegForm from './RegForm/RegForm'\n\nconst Landing = (props) => {\n\n    // ui state\n    let [isReg, updateReg] = useState(false)\n    let [showErr, setShowErr] = useState(false)\n    let [errMsg, setErrMsg] = useState('')\n    let [errSentiment, setErrSentiment] = useState(false)\n\n    let [showForgotPass, toggleForgotPass] = useState(false)\n\n    // login\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n\n\n    // sign in\n    const signIn = async (event) => {\n\n        event.preventDefault()\n        try {\n            const uid = await authenticate(email, password)\n            props.getUserData(uid)\n        }\n        catch (err) {\n            switch (err.code) {\n                case 'auth/invalid-email':\n                    console.log(err.message)\n                    break;\n                case \"auth/too-many-requests\":\n                    let errMsg = \"Too many unsuccessful login attempts. Please try again later.\"\n                    console.log(errMsg)\n                    break;\n                case 'auth/user-not-found':\n                    console.log(err.message)\n                    break;\n                case 'auth/wrong-password':\n                    console.log(err.message)\n                    break;\n                default:\n                    console.log(err, 'default!')\n            }\n        }\n    }\n    // authenticate\n    const authenticate = async (email, password) => {\n\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(successObj => {\n                // now's date\n                let expirationDate = new Date()\n                // now's date + 1 hour\n                expirationDate.setHours(expirationDate.getHours() + 100)\n                localStorage.setItem('token', successObj.user.refreshToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('uid', successObj.user.uid)\n                return successObj.user.uid\n\n            })\n            .catch(function (error) {\n                console.log(error)\n                throw error\n            });\n    }\n\n\n\n    return (\n\n        <div className='landing'>\n            {showForgotPass ? <ForgotPassword toggleForgotPass={toggleForgotPass} /> : null}\n            <div className='splash-video-overlay'></div>\n            <video className=\"splash-video\" src={splashVid} autoPlay={false} loop={true} playsInline={true} muted />\n            <div className={`landing__auth-frame`}>\n                <div className={`auth-frame__logo`}>BARZ</div>\n                <div className={`auth-frame__sub-text`}></div>\n                <input\n                    id={`sign-in__email`}\n                    type='email'\n                    placeholder='Email'\n                    value={email}\n                    autoComplete\n                    onChange={event => setEmail(event.target.value)}></input>\n                <input\n                    placeholder='Password'\n                    type='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}></input>\n\n            </div>\n        </div>\n    )\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserData: (uid) => dispatch(fetchUserData(uid))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Landing)\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}