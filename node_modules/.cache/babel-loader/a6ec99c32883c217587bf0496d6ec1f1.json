{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport './FollowBox.css';\nimport FollowItem from './FollowItem/FollowItem';\n\nfunction FollowBox(props) {\n  const followBoxClasses = ['follow-box', 'follow-box__header', 'follow-box_body', \"header__section\"]; // follows\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        followedByCount = _useState2[0],\n        setFollowedByCount = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        followingCount = _useState4[0],\n        setFollowingCount = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        followedUIDs = _useState6[0],\n        setFollowedBy = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        followingUIDs = _useState8[0],\n        setFollowing = _useState8[1]; // users\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        followedUsers = _useState10[0],\n        setFollowedUsers = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        followingUsers = _useState12[0],\n        setFollowingUsers = _useState12[1]; //ui\n\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        focusOn = _useState14[0],\n        setFocusOn = _useState14[1]; // componentDidMount\n\n\n  useEffect(() => {\n    document.addEventListener('click', toggleFocus);\n    return () => {\n      document.removeEventListener('click', toggleFocus);\n    };\n  }, []); // attach listeners for users, following, followers\n\n  useEffect(() => {\n    var db = firebase.firestore();\n\n    const fetchFollowers = async () => {\n      return db.collection('follows').where('to', '==', props.uid).onSnapshot(snapshot => {\n        setFollowedByCount(snapshot.size);\n        var arr = [];\n        snapshot.forEach(doc => {\n          arr.push(doc.data().from);\n        });\n        setFollowedBy(arr);\n      });\n    };\n\n    const fetchFollowing = async () => {\n      return db.collection('follows').where('from', '==', props.uid).onSnapshot(snapshot => {\n        setFollowingCount(snapshot.size);\n        var arr = [];\n        snapshot.forEach(doc => {\n          arr.push(doc.data().to);\n        });\n        setFollowing(arr);\n      });\n    };\n\n    if (props.uid) {\n      var followersPromise = fetchFollowers();\n      var followingPromise = fetchFollowing();\n      return () => {\n        followersPromise.then(listener => listener());\n        followingPromise.then(listener => listener());\n      };\n    }\n  }, [props.uid]); // const [followedUIDs, setFollowedBy] = useState([])\n  // const [followingUIDs, setFollowing] = useState([])\n  // // users\n  // const [users, setUsers] = useState({})\n  // const [followedUsers, setFollowedUsers] = useState([])\n  // const [followingUsers, setFollowingUsers] = useState([])\n  // fetch followerUsers and followingUsers\n\n  useEffect(() => {\n    if (focusOn) {\n      var db = firebase.firestore();\n      db.collection('users').get().then(snapshot => {\n        const followedUsers = [];\n        const followingUsers = [];\n        snapshot.forEach(doc => {\n          var user = _objectSpread({}, doc.data());\n\n          if (followedUIDs.includes(user.uid)) {\n            followedUsers.push(user);\n          } else if (followingUIDs.includes(user.uid)) {\n            followingUsers.push(user);\n          }\n        });\n        setFollowedUsers(followedUsers);\n        setFollowingUsers(followingUsers);\n      });\n    }\n\n    return () => {};\n  }, [focusOn, followedUIDs, followingUIDs]);\n\n  const toggleFocus = event => {\n    var clickedOnFollowBox = false;\n    followBoxClasses.forEach(className => {\n      if (event.target.classList.contains(className)) {\n        clickedOnFollowBox = true;\n      }\n    });\n\n    if (clickedOnFollowBox) {\n      return;\n    } else {\n      setFocusOn('');\n    }\n  }; // ui\n\n\n  const expandedBody = focusOn ? 'follow-box__expanded' : 'follow-box__compressed';\n  const followersFocused = focusOn === 'followers' ? 'focused' : null;\n  const followingFocused = focusOn === 'following' ? 'focused' : null; // focus bar style\n\n  var focusedBarStyle = null;\n\n  if (focusOn === 'following') {\n    focusedBarStyle = 'under-following';\n  } else if (focusOn === 'followers') {\n    focusedBarStyle = 'under-followers';\n  }\n\n  var users;\n\n  if (focusOn === 'following') {\n    users = followingUsers.map(user => {\n      return React.createElement(FollowItem, Object.assign({}, user, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    });\n  } else if (focusOn === 'followers') {\n    users = followedUsers.map(user => {\n      return React.createElement(FollowItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"follow-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"follow-box__header \".concat(focusOn ? 'follow-box_header-filled' : 'follow-box_header-unfilled'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__section \".concat(followersFocused),\n    onClick: () => setFocusOn(focusOn === 'followers' ? '' : 'followers'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, followedByCount, \" \", 'follower' + (followedByCount !== 1 ? 's' : ''), React.createElement(\"div\", {\n    className: \"focused-bar \".concat(focusedBarStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header__section \".concat(followingFocused),\n    onClick: () => setFocusOn(focusOn === 'following' ? '' : 'following'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, followingCount, \" following\")), React.createElement(\"div\", {\n    className: \"follow-box_body \".concat(expandedBody),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, users));\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js"],"names":["React","useState","useEffect","firebase","connect","FollowItem","FollowBox","props","followBoxClasses","followedByCount","setFollowedByCount","followingCount","setFollowingCount","followedUIDs","setFollowedBy","followingUIDs","setFollowing","followedUsers","setFollowedUsers","followingUsers","setFollowingUsers","focusOn","setFocusOn","document","addEventListener","toggleFocus","removeEventListener","db","firestore","fetchFollowers","collection","where","uid","onSnapshot","snapshot","size","arr","forEach","doc","push","data","from","fetchFollowing","to","followersPromise","followingPromise","then","listener","get","user","includes","event","clickedOnFollowBox","className","target","classList","contains","expandedBody","followersFocused","followingFocused","focusedBarStyle","users","map","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport './FollowBox.css'\nimport FollowItem from './FollowItem/FollowItem'\n\nfunction FollowBox(props) {\n\n    const followBoxClasses = [\n        'follow-box',\n        'follow-box__header',\n        'follow-box_body',\n        \"header__section\"\n    ]\n\n    // follows\n    const [followedByCount, setFollowedByCount] = useState(0)\n    const [followingCount, setFollowingCount] = useState(0)\n    const [followedUIDs, setFollowedBy] = useState([])\n    const [followingUIDs, setFollowing] = useState([])\n    // users\n    const [followedUsers, setFollowedUsers] = useState([])\n    const [followingUsers, setFollowingUsers] = useState([])\n    //ui\n    const [focusOn, setFocusOn] = useState('')\n\n\n    // componentDidMount\n    useEffect(() => {\n        document.addEventListener('click', toggleFocus)\n        return () => {\n            document.removeEventListener('click', toggleFocus)\n        };\n    }, [])\n\n    // attach listeners for users, following, followers\n    useEffect(() => {\n        var db = firebase.firestore()\n        const fetchFollowers = async () => {\n            return db.collection('follows').where('to', '==', props.uid)\n                .onSnapshot(snapshot => {\n                    setFollowedByCount(snapshot.size)\n                    var arr = []\n                    snapshot.forEach(doc => {\n                        arr.push(doc.data().from)\n                    })\n                    setFollowedBy(arr)\n                })\n        }\n        const fetchFollowing = async () => {\n            return db.collection('follows').where('from', '==', props.uid)\n                .onSnapshot(snapshot => {\n                    setFollowingCount(snapshot.size)\n                    var arr = []\n                    snapshot.forEach(doc => {\n                        arr.push(doc.data().to)\n                    })\n                    setFollowing(arr)\n                })\n        }\n\n        if (props.uid) {\n            var followersPromise = fetchFollowers()\n            var followingPromise = fetchFollowing()\n            return () => {\n                followersPromise.then(listener => listener())\n                followingPromise.then(listener => listener())\n            }\n        }\n    }, [props.uid])\n\n    // const [followedUIDs, setFollowedBy] = useState([])\n    // const [followingUIDs, setFollowing] = useState([])\n    // // users\n    // const [users, setUsers] = useState({})\n    // const [followedUsers, setFollowedUsers] = useState([])\n    // const [followingUsers, setFollowingUsers] = useState([])\n\n    // fetch followerUsers and followingUsers\n    useEffect(() => {\n        if (focusOn) {\n            var db = firebase.firestore()\n            db.collection('users').get()\n                .then(snapshot => {\n                    const followedUsers = []\n                    const followingUsers = []\n                    snapshot.forEach(doc => {\n                        var user = {\n                            ...doc.data()\n                        }\n                        if (followedUIDs.includes(user.uid)) {\n                            followedUsers.push(user)\n                        } else if (followingUIDs.includes(user.uid)) {\n                            followingUsers.push(user)\n                        }\n                    })\n                    setFollowedUsers(followedUsers)\n                    setFollowingUsers(followingUsers)\n                })\n        }\n        return () => {\n        };\n    }, [focusOn, followedUIDs, followingUIDs])\n\n    const toggleFocus = (event) => {\n        var clickedOnFollowBox = false;\n        followBoxClasses.forEach(className => {\n            if (event.target.classList.contains(className)) {\n                clickedOnFollowBox = true\n            }\n        });\n        if (clickedOnFollowBox) {\n            return\n        } else {\n            setFocusOn('')\n        }\n\n    }\n\n    // ui\n    const expandedBody = focusOn ? 'follow-box__expanded' : 'follow-box__compressed'\n    const followersFocused = focusOn === 'followers' ? 'focused' : null\n    const followingFocused = focusOn === 'following' ? 'focused' : null\n\n    // focus bar style\n    var focusedBarStyle = null;\n    if (focusOn === 'following') {\n        focusedBarStyle = 'under-following'\n    } else if (focusOn === 'followers') {\n        focusedBarStyle = 'under-followers'\n    }\n\n    var users;\n    if (focusOn === 'following') {\n        users = followingUsers.map(user => {\n            return <FollowItem {...user}/>\n        })\n    } else if (focusOn === 'followers') {\n        users = followedUsers.map(user => {\n            return <FollowItem />\n        })\n    }\n\n    return (\n        <div className='follow-box'>\n            <div className={`follow-box__header ${focusOn ? 'follow-box_header-filled' : 'follow-box_header-unfilled'}`}>\n                <div className={`header__section ${followersFocused}`} onClick={() => setFocusOn(focusOn === 'followers' ? '' : 'followers')}>\n                    {followedByCount} {'follower' + (followedByCount !== 1 ? 's' : '')}\n                    <div className={`focused-bar ${focusedBarStyle}`}></div>\n                </div>\n                <div className={`header__section ${followingFocused}`} onClick={() => setFocusOn(focusOn === 'following' ? '' : 'following')}>\n                    {followingCount} following\n                </div>\n            </div>\n            <div className={`follow-box_body ${expandedBody}`}>\n                {users}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox)\n"]},"metadata":{},"sourceType":"module"}