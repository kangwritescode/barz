{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Documents/GitHub/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Documents/GitHub/barz/src/containers/Judge/SingleView/SingleView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './SingleView.css';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport shuffle from 'shuffle-array';\nimport * as actionTypes from '../../../store/actions/actionsTypes';\nimport FourBars from './FourBars/FourBars';\n\nclass SingleView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissions: [{\n        content: {\n          lineOne: '',\n          lineTwo: '',\n          lineThree: '',\n          lineFour: ''\n        }\n      }],\n      votes: {},\n      vote: {\n        value: 0\n      },\n      pointer: 0,\n      showBars: false,\n      showErrMsg: false,\n      errMsg: 'this is the default errMsg',\n      popInLeft: 'pop-in-left',\n      popInRight: 'pop-in-right',\n      vote: null,\n      sort: \"Newest\",\n      filter: \"All Posts\",\n      view: \"Explore\",\n      // ManyPost\n      showPost: false,\n      pid: ''\n    };\n\n    this.componentDidMount = async () => {\n      this.fetchSubmissions();\n      this.fetchVotes();\n      this.setState(_objectSpread({}, this.state, {\n        showBars: true\n      }));\n      document.addEventListener('keydown', this.keyController);\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('keydown', this.keyController);\n    };\n\n    this.keyController = event => {\n      switch (event.key) {\n        case 'ArrowLeft':\n          return this.incDec(-1);\n\n        case 'ArrowRight':\n          return this.incDec(1);\n\n        case 'ArrowUp':\n          return this.vote(1);\n\n        case 'ArrowDown':\n          return this.vote(-1);\n\n        default:\n          break;\n      }\n    };\n\n    this.fetchSubmissions = async () => {\n      let db = firebase.firestore();\n      let submissions = [];\n      return db.collection('submissions').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let post = _objectSpread({}, doc.data(), {\n            pid: doc.id\n          });\n\n          submissions.push(post);\n        });\n        console.log('yeeeehaw');\n        this.setState(_objectSpread({}, this.state, {\n          submissions: submissions\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fetchVotes = async () => {\n      let db = firebase.firestore();\n      const votes = {};\n      db.collection('postVotes').onSnapshot(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let vote = _objectSpread({}, doc.data());\n\n          votes[doc.id] = vote;\n        });\n        this.setState(_objectSpread({}, this.state, {\n          votes: votes\n        }));\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.findVote = () => {\n      let submissions = [...this.state.submissions];\n      submissions = this.sort_submissions(submissions);\n      submissions = this.filter_submissions(submissions);\n      let currSub = submissions[this.state.pointer];\n\n      if (currSub) {\n        let votes = this.state.votes;\n\n        for (let key in votes) {\n          let vote = votes[key];\n\n          if (vote.pid === currSub.pid && vote.voterID === this.props.uid) {\n            return _objectSpread({}, vote, {\n              vid: key\n            });\n          }\n        }\n      } else {\n        return null;\n      }\n    };\n\n    this.sort_submissions = submissions => {\n      submissions = [...submissions];\n\n      switch (this.props.sort) {\n        case 'Newest':\n          submissions = submissions.sort((a, b) => {\n            let first = a.createdOn.toDate();\n            let second = b.createdOn.toDate();\n            return first > second ? -1 : 1;\n          });\n          return submissions;\n\n        case 'Oldest':\n          submissions = submissions.sort((a, b) => {\n            let first = a.createdOn.toDate();\n            let second = b.createdOn.toDate();\n            return first < second ? -1 : 1;\n          });\n          return submissions;\n\n        default:\n          return submissions;\n      }\n    };\n\n    this.filter_submissions = submissions => {\n      if (this.props.filter === 'All Posts') {\n        return submissions;\n      }\n\n      console.log('before submissions', submissions);\n      submissions = [...submissions];\n      let votes = this.state.votes;\n      votes = Object.values(votes);\n      let myVotes = votes.filter(vote => vote.voterID === this.props.uid);\n      submissions = submissions.filter(submission => {\n        let thisVotes = myVotes.filter(vote => vote.pid === submission.pid);\n        let unvoted = true;\n        thisVotes.forEach(vote => {\n          if (vote.value === 1 || vote.value === -1) {\n            unvoted = false;\n          }\n        });\n\n        if (this.props.filter === 'Unvoted') {\n          return unvoted;\n        } else {\n          return !unvoted;\n        }\n      });\n      console.log('after submissions', submissions);\n      return submissions;\n    };\n\n    this.incDec = async num => {\n      let newPointer;\n      let submissions = [...this.state.submissions];\n      submissions = this.sort_submissions(submissions);\n      submissions = this.filter_submissions(submissions); // edge cases for pointer\n\n      if (this.state.pointer + num === submissions.length) {\n        newPointer = 0;\n      } else if (this.state.pointer + num === -1) {\n        newPointer = submissions.length - 1;\n      } else {\n        newPointer = this.state.pointer + num;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        popInLeft: 'pop-out-left',\n        popInRight: 'pop-out-right'\n      }), () => {\n        setTimeout(() => {\n          this.setState(_objectSpread({}, this.state, {\n            pointer: newPointer,\n            popInLeft: 'pop-in-left',\n            popInRight: 'pop-in-right'\n          }));\n        }, 600);\n      });\n    };\n\n    this.vote = async vote => {\n      if (this.checkLoggedIn()) {\n        let db = firebase.firestore();\n        let myVote = this.findVote();\n        let value = myVote && myVote.value === vote ? 0 : vote;\n        let submissions = [...this.state.submissions];\n        submissions = this.sort_submissions(submissions);\n        submissions = this.filter_submissions(submissions);\n        const submission = submissions[this.state.pointer];\n        console.log(submission, 'vote submission');\n\n        if (myVote) {\n          let updatedVote = _objectSpread({}, myVote, {\n            value: value,\n            date: new Date()\n          });\n\n          db.collection('postVotes').doc(myVote.vid).set(updatedVote).then(() => console.log('vote updated successfully')).catch(err => console.log('could not update vote', err));\n        } else {\n          vote = {\n            value: value,\n            date: new Date(),\n            pid: submission.pid,\n            receiverID: submission.uid,\n            voterID: this.props.uid,\n            postDate: submission.createdOn,\n            address: submission.address\n          };\n          db.collection('postVotes').add(vote).then(() => {\n            this.setState(_objectSpread({}, this.state, {\n              vote: vote\n            }));\n          }).catch(err => {\n            console.log('could not add vote', err);\n          });\n        }\n      }\n    };\n\n    this.checkLoggedIn = () => {\n      if (!this.props.uid) {\n        this.setState(_objectSpread({}, this.state, {\n          showErrMsg: true,\n          errMsg: 'Login to Judge!'\n        }));\n        return false;\n      }\n\n      return true;\n    };\n\n    this.infoSet = () => {\n      if (this.props.needsInfo) {\n        this.setState(_objectSpread({}, this.state, {\n          showErrMsg: true,\n          errMsg: 'Set Info to Judge!'\n        }));\n        return false;\n      }\n\n      return true;\n    };\n\n    this.resetErrState = () => {\n      this.setState(_objectSpread({}, this.state, {\n        showErrMsg: false\n      }));\n    };\n  }\n\n  render() {\n    let content;\n    let submissions = [...this.state.submissions];\n    submissions = this.sort_submissions(submissions);\n    submissions = this.filter_submissions(submissions);\n\n    if (submissions.length === 0 || !submissions[this.state.pointer]) {\n      if (this.props.filter === \"Unvoted\") {\n        content = React.createElement(\"div\", {\n          className: \"filter-null-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, \"You've voted on all posts!\");\n      } else if (this.props.filter === \"Voted\") {\n        content = React.createElement(\"div\", {\n          className: \"filter-null-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \"You haven't voted on any posts!\");\n      } else {\n        content = React.createElement(\"div\", {\n          className: \"filter-null-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"Sorry. Having some issues fetching posts.\");\n      }\n    } else {\n      let vote = this.findVote();\n      const upvoteStyle = vote && vote.value === 1 ? 'lit-up' : null;\n      const downvoteStyle = vote && vote.value === -1 ? 'lit-trash' : null;\n      content = React.createElement(FourBars, {\n        showErrMsg: this.state.showErrMsg,\n        onAnimationEnd: this.resetErrState,\n        errMsg: this.state.errMsg,\n        popInLeft: this.state.popInLeft,\n        popInRight: this.state.popInRight,\n        submission: submissions[this.state.pointer],\n        incDec: this.incDec,\n        vote: this.vote,\n        downvoteStyle: downvoteStyle,\n        upvoteStyle: upvoteStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"judge-content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, this.state.showBars ? content : React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.user.uid,\n    needsInfo: state.user.needsInfo\n  };\n};\n\nexport default connect(mapStateToProps, null)(SingleView);","map":{"version":3,"sources":["/Users/davidkang/Documents/GitHub/barz/src/containers/Judge/SingleView/SingleView.js"],"names":["React","Component","firebase","connect","shuffle","actionTypes","FourBars","SingleView","state","submissions","content","lineOne","lineTwo","lineThree","lineFour","votes","vote","value","pointer","showBars","showErrMsg","errMsg","popInLeft","popInRight","sort","filter","view","showPost","pid","componentDidMount","fetchSubmissions","fetchVotes","setState","document","addEventListener","keyController","componentWillUnmount","removeEventListener","event","key","incDec","db","firestore","collection","get","then","querySnapshot","forEach","doc","post","data","id","push","console","log","catch","err","onSnapshot","findVote","sort_submissions","filter_submissions","currSub","voterID","props","uid","vid","a","b","first","createdOn","toDate","second","Object","values","myVotes","submission","thisVotes","unvoted","num","newPointer","length","setTimeout","checkLoggedIn","myVote","updatedVote","date","Date","set","receiverID","postDate","address","add","infoSet","needsInfo","resetErrState","render","upvoteStyle","downvoteStyle","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './SingleView.css'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport shuffle from 'shuffle-array'\nimport * as actionTypes from '../../../store/actions/actionsTypes'\nimport FourBars from './FourBars/FourBars'\n\n\nclass SingleView extends Component {\n\n\n    state = {\n\n        submissions: [{\n            content: {\n                lineOne: '',\n                lineTwo: '',\n                lineThree: '',\n                lineFour: '',\n            },\n        }],\n        votes: {\n        },\n        vote: {\n            value: 0\n        },\n\n        pointer: 0,\n        showBars: false,\n        showErrMsg: false,\n        errMsg: 'this is the default errMsg',\n\n        popInLeft: 'pop-in-left',\n        popInRight: 'pop-in-right',\n        vote: null,\n\n        sort: \"Newest\",\n        filter: \"All Posts\",\n        view: \"Explore\",\n\n\n        // ManyPost\n        showPost: false,\n        pid: ''\n\n    }\n\n\n\n    componentDidMount = async () => {\n\n        this.fetchSubmissions()\n        this.fetchVotes()\n\n        this.setState({\n            ...this.state,\n            showBars: true\n        })\n        document.addEventListener('keydown', this.keyController)\n    }\n    componentWillUnmount = () => {\n        document.removeEventListener('keydown', this.keyController)\n    }\n    keyController = event => {\n\n        switch (event.key) {\n            case 'ArrowLeft': return this.incDec(-1);\n            case 'ArrowRight': return this.incDec(1);\n            case 'ArrowUp': return this.vote(1);\n            case 'ArrowDown': return this.vote(-1);\n            default: break;\n        }\n    }\n\n\n    fetchSubmissions = async () => {\n        let db = firebase.firestore()\n        let submissions = []\n        return db.collection('submissions').get().then(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n                let post = {\n                    ...doc.data(),\n                    pid: doc.id\n                }\n                submissions.push(post)\n            })\n            console.log('yeeeehaw')\n            this.setState({\n                ...this.state,\n                submissions: submissions\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n    fetchVotes = async () => {\n        let db = firebase.firestore()\n        const votes = {}\n        db.collection('postVotes').onSnapshot(querySnapshot => {\n            querySnapshot.forEach((doc) => {\n                let vote = { ...doc.data() }\n                votes[doc.id] = vote\n            })\n            this.setState({\n                ...this.state,\n                votes: votes\n            })\n        }, err => {\n            console.log(err)\n        })\n    }\n    // fetch function\n    findVote = () => {\n        let submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n        let currSub = submissions[this.state.pointer]\n        if (currSub) {\n            let votes = this.state.votes\n            for (let key in votes) {\n                let vote = votes[key]\n                if (vote.pid === currSub.pid && vote.voterID === this.props.uid) {\n                    return {\n                        ...vote,\n                        vid: key\n                    }\n                }\n            }\n        } else {\n            return null\n        }\n        \n    }\n\n    sort_submissions = (submissions) => {\n        submissions = [...submissions]\n        switch (this.props.sort) {\n            case 'Newest':\n                submissions = submissions.sort((a, b) => {\n                    let first = a.createdOn.toDate()\n                    let second = b.createdOn.toDate()\n                    return first > second ? -1 : 1\n                })\n                return submissions\n            case 'Oldest':\n                submissions = submissions.sort((a, b) => {\n                    let first = a.createdOn.toDate()\n                    let second = b.createdOn.toDate()\n                    return first < second ? -1 : 1\n                })\n                return submissions\n            default:\n                return submissions\n        }\n    }\n    filter_submissions = (submissions) => {\n        if (this.props.filter === 'All Posts') {\n            return submissions\n        }\n        console.log('before submissions', submissions)\n        submissions = [...submissions]\n        let votes = this.state.votes\n        votes = Object.values(votes)\n        let myVotes = votes.filter(vote => vote.voterID === this.props.uid)\n\n        submissions = submissions\n            .filter(submission => {\n                let thisVotes = myVotes.filter(vote => vote.pid === submission.pid)\n                let unvoted = true\n                thisVotes.forEach(vote => {\n                    if (vote.value === 1 || vote.value === -1) {\n                        unvoted = false\n                    }\n                })\n                if (this.props.filter === 'Unvoted') {\n                    return unvoted\n                } else {\n                    return !unvoted\n                }\n            })\n        console.log('after submissions', submissions)\n        return submissions\n    }\n\n    // increments single view post \n    incDec = async (num) => {\n\n        let newPointer;\n        let submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n\n        // edge cases for pointer\n        if (this.state.pointer + num === submissions.length) {\n            newPointer = 0\n        } else if (this.state.pointer + num === -1) {\n            newPointer = submissions.length - 1\n        } else {\n            newPointer = this.state.pointer + num\n        }\n\n        this.setState({\n            ...this.state,\n            popInLeft: 'pop-out-left',\n            popInRight: 'pop-out-right'\n        }, () => {\n            setTimeout(() => {\n                this.setState({\n                    ...this.state,\n                    pointer: newPointer,\n                    popInLeft: 'pop-in-left',\n                    popInRight: 'pop-in-right',\n                })\n            }, 600)\n        })\n    }\n\n    // vote and check functions\n    vote = async (vote) => {\n\n        if (this.checkLoggedIn()) {\n            let db = firebase.firestore()\n            let myVote = this.findVote()\n            let value = myVote && myVote.value === vote ? 0 : vote\n\n            let submissions = [...this.state.submissions]\n            submissions = this.sort_submissions(submissions)\n            submissions = this.filter_submissions(submissions)\n\n            const submission = submissions[this.state.pointer]\n            console.log(submission, 'vote submission')\n            if (myVote) {\n                let updatedVote = {\n                    ...myVote,\n                    value: value,\n                    date: new Date()\n                }\n                db.collection('postVotes').doc(myVote.vid).set(updatedVote)\n                    .then(() => console.log('vote updated successfully'))\n                    .catch(err => console.log('could not update vote', err))\n            }\n            else {\n                vote = {\n                    value: value,\n                    date: new Date(),\n                    pid: submission.pid,\n                    receiverID: submission.uid,\n                    voterID: this.props.uid,\n                    postDate: submission.createdOn,\n                    address: submission.address\n                }\n                db.collection('postVotes').add(vote)\n                    .then(() => {\n                        this.setState({\n                            ...this.state,\n                            vote: vote\n                        })\n                    })\n                    .catch(err => { console.log('could not add vote', err) })\n\n            }\n        }\n    }\n    checkLoggedIn = () => {\n        if (!this.props.uid) {\n            this.setState({\n                ...this.state,\n                showErrMsg: true,\n                errMsg: 'Login to Judge!'\n            })\n            return false\n        }\n        return true\n    }\n    infoSet = () => {\n        if (this.props.needsInfo) {\n            this.setState({\n                ...this.state,\n                showErrMsg: true,\n                errMsg: 'Set Info to Judge!'\n            })\n            return false\n        }\n        return true\n    }\n    resetErrState = () => {\n        this.setState({\n            ...this.state,\n            showErrMsg: false\n        })\n    }\n\n\n\n\n\n    render() {\n\n\n        let content;\n        let submissions = [...this.state.submissions]\n        submissions = this.sort_submissions(submissions)\n        submissions = this.filter_submissions(submissions)\n\n        if (submissions.length === 0 || !submissions[this.state.pointer]) {\n            if (this.props.filter === \"Unvoted\") {\n                content = (<div className=\"filter-null-msg\">You've voted on all posts!</div>)\n            } else if (this.props.filter === \"Voted\") {\n                content = (<div className=\"filter-null-msg\">You haven't voted on any posts!</div>)\n            } else {\n                content = (<div className=\"filter-null-msg\">Sorry. Having some issues fetching posts.</div>)\n            }\n        }\n        else {\n\n\n            let vote = this.findVote()\n            const upvoteStyle = vote && vote.value === 1 ? 'lit-up' : null\n            const downvoteStyle = vote && vote.value === -1 ? 'lit-trash' : null\n\n\n            content = (\n                <FourBars\n                    showErrMsg={this.state.showErrMsg}\n                    onAnimationEnd={this.resetErrState}\n                    errMsg={this.state.errMsg}\n                    popInLeft={this.state.popInLeft}\n                    popInRight={this.state.popInRight}\n                    submission={submissions[this.state.pointer]}\n                    incDec={this.incDec}\n                    vote={this.vote}\n                    downvoteStyle={downvoteStyle}\n                    upvoteStyle={upvoteStyle}\n                />\n            )\n\n        }\n\n        return (\n            <div className='judge-content-container'>\n                {this.state.showBars ? content : <div className=\"loader\">Loading...</div>}\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.user.uid,\n        needsInfo: state.user.needsInfo,}\n}\n\n\nexport default connect(mapStateToProps, null)(SingleView)\n"]},"metadata":{},"sourceType":"module"}