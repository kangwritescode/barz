{"ast":null,"code":"var _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Scribble/MyBars/ViewedBar/PostComments/PostComments.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport './PostComments.css';\nimport PostComment from './PostComment/PostComment';\nimport { GenID } from '../../../../../shared/utility';\n\nfunction PostComments(props) {\n  var comments = props.comments.filter(comment => comment.pid === props.viewedPost.pid);\n  comments = comments.sort((a, b) => {\n    if (a.date < b.date) {\n      return -1;\n    }\n\n    return 1;\n  });\n  var display = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filler-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), comments.map((comment, index) => {\n    return React.createElement(PostComment, {\n      key: GenID(),\n      viewedPost: props.viewedPost,\n      index: index,\n      noOfComments: props.comments.length,\n      data: comment,\n      toggleDeleteCommentModal: props.toggleDeleteCommentModal // toggleLoader={toggleLoader}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  })); // var loadingStyle = loading ? 'loading' : 'done-loading'\n\n  return React.createElement(\"div\", {\n    className: \"post-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, display);\n}\n\nexport default PostComments;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Scribble/MyBars/ViewedBar/PostComments/PostComments.js"],"names":["React","useEffect","useState","connect","firebase","PostComment","GenID","PostComments","props","comments","filter","comment","pid","viewedPost","sort","a","b","date","display","map","index","length","toggleDeleteCommentModal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,KAAT,QAAsB,+BAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBJ,KAAK,CAACK,UAAN,CAAiBD,GAAlE,CAAf;AACAH,EAAAA,QAAQ,GAAGA,QAAQ,CAACK,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/B,QAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,aAAO,CAAC,CAAR;AACH;;AAAC,WAAO,CAAP;AACL,GAJU,CAAX;AAMA,MAAIC,OAAO,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACX;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,EAEVT,QAAQ,CAACU,GAAT,CAAa,CAACR,OAAD,EAAUS,KAAV,KAAoB;AAC9B,WACI,oBAAC,WAAD;AACI,MAAA,GAAG,EAAEd,KAAK,EADd;AAEI,MAAA,UAAU,EAAEE,KAAK,CAACK,UAFtB;AAGI,MAAA,KAAK,EAAEO,KAHX;AAII,MAAA,YAAY,EAAEZ,KAAK,CAACC,QAAN,CAAeY,MAJjC;AAKI,MAAA,IAAI,EAAEV,OALV;AAMI,MAAA,wBAAwB,EAAEH,KAAK,CAACc,wBANpC,CAOI;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH,GAZA,CAFU,CAAf,CATyB,CA0BzB;;AACA,SACI;AAAK,IAAA,SAAS,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OADL,CADJ;AAKH;;AAED,eAAeX,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport './PostComments.css'\nimport PostComment from './PostComment/PostComment'\nimport { GenID } from '../../../../../shared/utility'\n\nfunction PostComments(props) {\n\n    var comments = props.comments.filter(comment => comment.pid === props.viewedPost.pid)\n    comments = comments.sort((a, b) => {\n        if (a.date < b.date) {\n            return -1\n        } return 1\n    })\n\n    var display = (<div>\n        <div className='filler-block'></div>\n        {comments.map((comment, index) => {\n            return (\n                <PostComment\n                    key={GenID()}\n                    viewedPost={props.viewedPost}\n                    index={index}\n                    noOfComments={props.comments.length}\n                    data={comment}\n                    toggleDeleteCommentModal={props.toggleDeleteCommentModal}\n                    // toggleLoader={toggleLoader}\n                />\n            )\n        })}\n    </div>)\n\n    // var loadingStyle = loading ? 'loading' : 'done-loading'\n    return (\n        <div className={`post-comments`}>\n            {display}\n        </div>\n    )\n}\n\nexport default PostComments\n"]},"metadata":{},"sourceType":"module"}