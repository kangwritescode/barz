{"ast":null,"code":"const myPlaceFinder = (votes, myUID) => {\n  console.log(votes, 'sdfsfsdf');\n  const dict = {};\n  votes.forEach(vote => {\n    if (vote.receiverID in dict) {\n      dict[vote.receiverID] = dict[vote.receiverID] + vote.value;\n    } else {\n      dict[vote.receiverID] = vote.value;\n    }\n  });\n  var arr = [];\n\n  for (let key in dict) {\n    var obj = {\n      uid: key,\n      score: dict[key]\n    };\n    arr.push(obj);\n  }\n\n  arr = arr.sort((a, b) => {\n    if (a.score > b.score) {\n      return -1;\n    }\n\n    return 1;\n  });\n  var myPosition;\n  var myScore;\n  [].forEach((item, index) => {\n    if (item.uid === myUID) {\n      myPosition = index + 1;\n      myScore = item.score;\n    }\n  }); // if you've received no votes\n\n  if (!myPosition) {\n    return arr.length + 1;\n  }\n\n  return {\n    myPos: myPosition,\n    myScore: myScore\n  };\n};\n\nexport default {\n  myPlaceFinder: myPlaceFinder\n};","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubTools/HubTools.js"],"names":["myPlaceFinder","votes","myUID","console","log","dict","forEach","vote","receiverID","value","arr","key","obj","uid","score","push","sort","a","b","myPosition","myScore","item","index","length","myPos"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,UAAnB;AACA,QAAMI,IAAI,GAAG,EAAb;AACAJ,EAAAA,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAI;AAClB,QAAIA,IAAI,CAACC,UAAL,IAAmBH,IAAvB,EAA6B;AACzBA,MAAAA,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBH,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBD,IAAI,CAACE,KAArD;AACH,KAFD,MAEO;AACHJ,MAAAA,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBD,IAAI,CAACE,KAA7B;AACH;AACJ,GAND;AAOA,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,GAAT,IAAgBN,IAAhB,EAAsB;AAClB,QAAIO,GAAG,GAAG;AAAEC,MAAAA,GAAG,EAAEF,GAAP;AAAYG,MAAAA,KAAK,EAAET,IAAI,CAACM,GAAD;AAAvB,KAAV;AACAD,IAAAA,GAAG,CAACK,IAAJ,CAASH,GAAT;AACH;;AACDF,EAAAA,GAAG,GAAGA,GAAG,CAACM,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAhB,EAAuB;AACnB,aAAO,CAAC,CAAR;AACH;;AAAC,WAAO,CAAP;AACL,GAJK,CAAN;AAKA,MAAIK,UAAJ;AACA,MAAIC,OAAJ;AAEA,KAAGd,OAAH,CAAW,CAACe,IAAD,EAAOC,KAAP,KAAiB;AACxB,QAAID,IAAI,CAACR,GAAL,KAAaX,KAAjB,EAAwB;AACpBiB,MAAAA,UAAU,GAAGG,KAAK,GAAG,CAArB;AACAF,MAAAA,OAAO,GAAGC,IAAI,CAACP,KAAf;AACH;AACJ,GALD,EAvBoC,CA6BpC;;AACA,MAAI,CAACK,UAAL,EAAiB;AACb,WAAOT,GAAG,CAACa,MAAJ,GAAa,CAApB;AACH;;AACD,SAAO;AACHC,IAAAA,KAAK,EAAEL,UADJ;AAEHC,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CArCD;;AAuCA,eAAe;AACXpB,EAAAA,aAAa,EAAEA;AADJ,CAAf","sourcesContent":["const myPlaceFinder = (votes, myUID) => {\n    console.log(votes, 'sdfsfsdf')\n    const dict = {}\n    votes.forEach(vote => {\n        if (vote.receiverID in dict) {\n            dict[vote.receiverID] = dict[vote.receiverID] + vote.value\n        } else {\n            dict[vote.receiverID] = vote.value\n        }\n    })\n    var arr = []\n    for (let key in dict) {\n        var obj = { uid: key, score: dict[key] }\n        arr.push(obj)\n    }\n    arr = arr.sort((a, b) => {\n        if (a.score > b.score) {\n            return -1\n        } return 1\n    })\n    var myPosition\n    var myScore\n\n    [].forEach((item, index) => {\n        if (item.uid === myUID) {\n            myPosition = index + 1\n            myScore = item.score\n        }\n    })\n    // if you've received no votes\n    if (!myPosition) {\n        return arr.length + 1\n    }\n    return {\n        myPos: myPosition,\n        myScore: myScore\n    }\n}\n\nexport default {\n    myPlaceFinder: myPlaceFinder\n}\n\n"]},"metadata":{},"sourceType":"module"}