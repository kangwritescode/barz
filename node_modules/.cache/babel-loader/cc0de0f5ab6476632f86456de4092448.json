{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport FireApi from '../../../FireApi/FireApi';\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost';\n\nconst PostEditor = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        postComments = _useState2[0],\n        setPostComments = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postVotes = _useState4[0],\n        setPostVotes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  useEffect(() => {\n    FireApi.fetchSinglePost(setPost, props.pid);\n    const commentsListener = FireApi.submissionCommentsForPostListener(setPostComments, props.pid);\n    const votesListener = FireApi.submissionCommentsForPostListener(setPostVotes, props.pid);\n    return () => {\n      commentsListener();\n      votesListener();\n    };\n  }, [props.pid]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ManyPost, Object.assign({\n    comments: postComments,\n    selectPost: () => null,\n    votes: postVotes\n  }, post, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js"],"names":["React","useState","useEffect","firebase","connect","FireApi","ManyPost","PostEditor","props","postComments","setPostComments","postVotes","setPostVotes","post","setPost","fetchSinglePost","pid","commentsListener","submissionCommentsForPostListener","votesListener","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,gEAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,oBAEcP,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEnBQ,YAFmB;AAAA,QAELC,eAFK;;AAAA,qBAGQT,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAGnBU,SAHmB;AAAA,QAGRC,YAHQ;;AAAA,qBAIFX,QAAQ,CAAC,IAAD,CAJN;AAAA;AAAA,QAInBY,IAJmB;AAAA,QAIbC,OAJa;;AAM1BZ,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,OAAO,CAACU,eAAR,CAAwBD,OAAxB,EAAiCN,KAAK,CAACQ,GAAvC;AACA,UAAMC,gBAAgB,GAAGZ,OAAO,CAACa,iCAAR,CAA0CR,eAA1C,EAA2DF,KAAK,CAACQ,GAAjE,CAAzB;AACA,UAAMG,aAAa,GAAGd,OAAO,CAACa,iCAAR,CAA0CN,YAA1C,EAAwDJ,KAAK,CAACQ,GAA9D,CAAtB;AAEA,WAAO,MAAM;AACTC,MAAAA,gBAAgB;AAChBE,MAAAA,aAAa;AAChB,KAHD;AAIH,GAVQ,EAUN,CAACX,KAAK,CAACQ,GAAP,CAVM,CAAT;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAEP,YADd;AAEI,IAAA,UAAU,EAAE,MAAM,IAFtB;AAGI,IAAA,KAAK,EAAEE;AAHX,KAIQE,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AASH,CA3BD;;AA6BA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAGH,CAJD;;AAOA,eAAenB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,UAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport FireApi from '../../../FireApi/FireApi'\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost'\n\nconst PostEditor = (props) => {\n\n    const [postComments, setPostComments] = useState([])\n    const [postVotes, setPostVotes] = useState([])\n    const [post, setPost] = useState(null)\n\n    useEffect(() => {\n\n        FireApi.fetchSinglePost(setPost, props.pid)\n        const commentsListener = FireApi.submissionCommentsForPostListener(setPostComments, props.pid)\n        const votesListener = FireApi.submissionCommentsForPostListener(setPostVotes, props.pid)\n\n        return () => {\n            commentsListener()\n            votesListener()\n        };\n    }, [props.pid])\n\n    return (\n        <div>\n            <ManyPost\n                comments={postComments}\n                selectPost={() => null}\n                votes={postVotes}\n                {...post}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor)\n"]},"metadata":{},"sourceType":"module"}