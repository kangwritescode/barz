{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport './PostLikes.css';\n\nclass PostLikes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      votes: 0,\n      noOfVoters: 0,\n      myVote: 0,\n      votesListener: null\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (prevProps.viewedPost !== this.props.viewedPost) {\n        if (this.state.votesListener) {\n          this.state.votesListener();\n        }\n\n        this.fetchInfo();\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      if (this.state.votesListener) {\n        this.state.votesListener();\n      }\n    };\n\n    this.fetchInfo = () => {\n      const db = firebase.firestore();\n      var votesListener = db.collection('postVotes').where('pid', '==', this.props.viewedPost.pid).onSnapshot(snapshot => {\n        var votes = 0;\n        const voters = new Set();\n        var myVote = 0; // for every vote of this post\n\n        snapshot.docs.forEach(like => {\n          var vote = like.data();\n\n          if (vote.value === 1 || vote.value === -1) {\n            myVote = this.props.uid === vote.voterID ? Math.max(vote.value, 0) : 0;\n            votes += Math.max(vote.value, 0);\n            voters.add(vote.voterID);\n          }\n        });\n        votes = votes < 0 ? 0 : votes;\n        var noOfVoters = voters.size;\n        console.log(myVote);\n        this.setState(_objectSpread({}, this.state, {\n          myVote: myVote,\n          votes: votes,\n          noOfVoters: noOfVoters\n        }));\n      });\n      this.setState(_objectSpread({}, this.state, {\n        votesListener: votesListener\n      }));\n    };\n  }\n\n  render() {\n    var buttonStyle = this.state.myVote === 1 ? 'lit-up' : null;\n    return React.createElement(\"div\", {\n      className: \"likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.votes, \" total pt\", this.state.votes === 1 ? null : 's', \".\"), React.createElement(\"div\", {\n      className: \"fans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.noOfVoters, \" \", this.state.noOfVoters === 1 ? 'like' : 'likes'));\n  }\n\n}\n\nPostLikes.defaultProps = {\n  pid: ''\n};\n\nconst mapStatetoProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStatetoProps, null)(PostLikes);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js"],"names":["React","Component","connect","firebase","PostLikes","state","votes","noOfVoters","myVote","votesListener","componentDidUpdate","prevProps","prevState","viewedPost","props","fetchInfo","componentWillUnmount","db","firestore","collection","where","pid","onSnapshot","snapshot","voters","Set","docs","forEach","like","vote","data","value","uid","voterID","Math","max","add","size","console","log","setState","render","buttonStyle","defaultProps","mapStatetoProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAGA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAI9BI,KAJ8B,GAItB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,aAAa,EAAE;AAJX,KAJsB;;AAAA,SAW9BC,kBAX8B,GAWT,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC3C,UAAID,SAAS,CAACE,UAAV,KAAyB,KAAKC,KAAL,CAAWD,UAAxC,EAAoD;AAChD,YAAI,KAAKR,KAAL,CAAWI,aAAf,EAA8B;AAC1B,eAAKJ,KAAL,CAAWI,aAAX;AACH;;AACD,aAAKM,SAAL;AACH;AACJ,KAlB6B;;AAAA,SAmB9BC,oBAnB8B,GAmBP,MAAM;AACzB,UAAI,KAAKX,KAAL,CAAWI,aAAf,EAA8B;AAC1B,aAAKJ,KAAL,CAAWI,aAAX;AACH;AACJ,KAvB6B;;AAAA,SAwB9BM,SAxB8B,GAwBlB,MAAM;AACd,YAAME,EAAE,GAAGd,QAAQ,CAACe,SAAT,EAAX;AACA,UAAIT,aAAa,GAAGQ,EAAE,CAACE,UAAH,CAAc,WAAd,EAA2BC,KAA3B,CAAiC,KAAjC,EAAwC,IAAxC,EAA8C,KAAKN,KAAL,CAAWD,UAAX,CAAsBQ,GAApE,EAAyEC,UAAzE,CAAoFC,QAAQ,IAAI;AAChH,YAAIjB,KAAK,GAAG,CAAZ;AACA,cAAMkB,MAAM,GAAG,IAAIC,GAAJ,EAAf;AACA,YAAIjB,MAAM,GAAG,CAAb,CAHgH,CAIhH;;AACAe,QAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,IAAI,IAAI;AAC1B,cAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,EAAX;;AACA,cAAID,IAAI,CAACE,KAAL,KAAe,CAAf,IAAoBF,IAAI,CAACE,KAAL,KAAe,CAAC,CAAxC,EAA2C;AACvCvB,YAAAA,MAAM,GAAG,KAAKM,KAAL,CAAWkB,GAAX,KAAmBH,IAAI,CAACI,OAAxB,GAAkCC,IAAI,CAACC,GAAL,CAASN,IAAI,CAACE,KAAd,EAAqB,CAArB,CAAlC,GAA4D,CAArE;AACAzB,YAAAA,KAAK,IAAI4B,IAAI,CAACC,GAAL,CAASN,IAAI,CAACE,KAAd,EAAqB,CAArB,CAAT;AACAP,YAAAA,MAAM,CAACY,GAAP,CAAWP,IAAI,CAACI,OAAhB;AACH;AAEJ,SARD;AASA3B,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAxB;AACA,YAAIC,UAAU,GAAGiB,MAAM,CAACa,IAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAZ;AACA,aAAKgC,QAAL,mBACO,KAAKnC,KADZ;AAEIG,UAAAA,MAAM,EAAEA,MAFZ;AAGIF,UAAAA,KAAK,EAAEA,KAHX;AAIIC,UAAAA,UAAU,EAAEA;AAJhB;AAMH,OAvBmB,CAApB;AAwBA,WAAKiC,QAAL,mBACO,KAAKnC,KADZ;AAEII,QAAAA,aAAa,EAAEA;AAFnB;AAIH,KAtD6B;AAAA;;AAwD9BgC,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAW,GAAG,KAAKrC,KAAL,CAAWG,MAAX,KAAsB,CAAtB,GAA0B,QAA1B,GAAqC,IAAvD;AACA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWC,KADhB,eACgC,KAAKD,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,IAAzB,GAAgC,GADhE,MADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,UADhB,OAC6B,KAAKF,KAAL,CAAWE,UAAX,KAA0B,CAA1B,GAA8B,MAA9B,GAAuC,OADpE,CAJJ,CADJ;AAWH;;AArE6B;;AAA5BH,S,CACKuC,Y,GAAe;AAClBtB,EAAAA,GAAG,EAAE;AADa,C;;AAuE1B,MAAMuB,eAAe,GAAGvC,KAAK,IAAI;AAC7B,SAAO;AACH2B,IAAAA,GAAG,EAAE3B,KAAK,CAAC2B;AADR,GAAP;AAGH,CAJD;;AAMA,eAAe9B,OAAO,CAAC0C,eAAD,EAAkB,IAAlB,CAAP,CAA+BxC,SAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\nimport './PostLikes.css'\n\nclass PostLikes extends Component {\n    static defaultProps = {\n        pid: ''\n    }\n    state = {\n        votes: 0,\n        noOfVoters: 0,\n        myVote: 0,\n        votesListener: null\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevProps.viewedPost !== this.props.viewedPost) {\n            if (this.state.votesListener) {\n                this.state.votesListener()\n            }\n            this.fetchInfo()\n        }\n    }\n    componentWillUnmount = () => {\n        if (this.state.votesListener) {\n            this.state.votesListener()\n        }\n    }\n    fetchInfo = () => {\n        const db = firebase.firestore()\n        var votesListener = db.collection('postVotes').where('pid', '==', this.props.viewedPost.pid).onSnapshot(snapshot => {\n            var votes = 0\n            const voters = new Set()\n            var myVote = 0\n            // for every vote of this post\n            snapshot.docs.forEach(like => {\n                var vote = like.data()\n                if (vote.value === 1 || vote.value === -1) {\n                    myVote = this.props.uid === vote.voterID ? Math.max(vote.value, 0) : 0\n                    votes += Math.max(vote.value, 0)\n                    voters.add(vote.voterID)\n                }\n\n            })\n            votes = votes < 0 ? 0 : votes\n            var noOfVoters = voters.size\n            console.log(myVote)\n            this.setState({\n                ...this.state,\n                myVote: myVote,\n                votes: votes,\n                noOfVoters: noOfVoters\n            })\n        })\n        this.setState({\n            ...this.state,\n            votesListener: votesListener\n        })\n    }\n\n    render() {\n        var buttonStyle = this.state.myVote === 1 ? 'lit-up' : null;\n        return (\n            <div className='likes'>\n                <div className='total-score'>\n                    {this.state.votes} total pt{this.state.votes === 1 ? null : 's'}.\n                </div>\n                <div className='fans'>\n                    {this.state.noOfVoters} {this.state.noOfVoters === 1 ? 'like' : 'likes'}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStatetoProps, null)(PostLikes)\n"]},"metadata":{},"sourceType":"module"}