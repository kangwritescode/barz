{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/barz/src/components/Scribble/MyBars/ViewedBar/PostComments/PostComment/PostComment.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './PostComment.css';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\nfunction PostComment(props) {\n  var _useState = useState('https://firebasestorage.googleapis.com/v0/b/barz-86ae0.appspot.com/o/mysteryman%2Fmysteryman.png?alt=media&token=7b1e5a7c-ede3-46ff-a036-70636e528cd2'),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoURL = _useState2[0],\n      updatePhotoURL = _useState2[1];\n\n  var data = props.data; // fetch photo on mounting\n\n  useEffect(() => {\n    document.addEventListener('click', closeDropdowns);\n    fetchPhoto();\n    return () => {\n      document.removeEventListener('click', closeDropdowns);\n    };\n  }, []);\n\n  const fetchPhoto = () => {\n    var storage = firebase.storage();\n    storage.ref(data.photoRef).getDownloadURL().then(url => {\n      updatePhotoURL(url);\n\n      if (props.index + 1 === props.noOfComments) {\n        // props.toggleLoader(false)\n        console.log('toggleLoader false');\n      }\n    }).catch(function (error) {\n      console.log(\"error in Profile.js: \", error);\n    });\n  };\n\n  const closeDropdowns = event => {\n    const classList = event.target.classList;\n\n    if (classList && !classList.contains('posted-comment__dots') && !classList.contains('posted-comment__dot')) {\n      const dropdowns = document.getElementsByClassName('delete-comment-drop-menu');\n\n      for (let dropdown of dropdowns) {\n        dropdown.classList.remove('delete-comment-drop-menu-show');\n      }\n    }\n  };\n\n  const toggleDeleteDropdown = (event, cid) => {\n    const dropdown = document.getElementById(cid);\n    console.log(dropdown);\n\n    if (dropdown.classList.contains('delete-comment-drop-menu-show')) {\n      dropdown.classList.remove('delete-comment-drop-menu-show');\n    } else {\n      const allDropdowns = document.getElementsByClassName('delete-comment-drop-menu-show');\n\n      for (let dropdown of allDropdowns) {\n        dropdown.classList.remove('delete-comment-drop-menu-show');\n      }\n\n      dropdown.classList.add('delete-comment-drop-menu-show');\n    }\n  };\n\n  const generateDatePassed = () => {\n    var datePassed = new Date().getTime() - props.data.date.toDate().getTime();\n    var minutesPassed = Math.trunc(datePassed / 1000 / 60);\n\n    if (minutesPassed < 60) {\n      return Math.max(minutesPassed, 1) + 'm';\n    }\n\n    var hoursPassed = Math.trunc(minutesPassed / 60);\n\n    if (hoursPassed < 24) {\n      return hoursPassed + 'h';\n    }\n\n    var daysPassed = Math.trunc(hoursPassed / 24);\n\n    if (daysPassed < 7) {\n      return daysPassed + 'd';\n    }\n\n    return Math.trunc(daysPassed / 7) + 'w';\n  }; // editable if current user's comment or current user's post\n\n\n  const editable = props.uid === data.uid || props.viewedPost.uid === props.uid;\n  var deleteOption = null;\n\n  if (editable) {\n    deleteOption = React.createElement(\"div\", {\n      className: \"posted-comment__dots-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posted-comment__dots\",\n      onClick: event => toggleDeleteDropdown(event, data.cid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"delete-comment-drop-menu\",\n      id: data.cid,\n      onMouseLeave: event => {\n        closeDropdowns(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"delete-comment-drop-menu-item\",\n      id: \"delete-post\",\n      onClick: () => props.toggleModal(true, data.cid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(\"div\", {\n      className: \"posted-comment__dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"posted-comment__dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"posted-comment__dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"posted-comment\",\n    onMouseLeave: event => {\n      closeDropdowns(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"posted-comment__img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"alt\",\n    src: photoURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"posted-comment__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, data.username), \" \", data.comment, \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posted-comment__content__date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, generateDatePassed())), deleteOption);\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(PostComment);","map":{"version":3,"sources":["/Users/davidkang/Desktop/barz/src/components/Scribble/MyBars/ViewedBar/PostComments/PostComment/PostComment.js"],"names":["React","useEffect","useState","connect","firebase","PostComment","props","photoURL","updatePhotoURL","data","document","addEventListener","closeDropdowns","fetchPhoto","removeEventListener","storage","ref","photoRef","getDownloadURL","then","url","index","noOfComments","console","log","catch","error","event","classList","target","contains","dropdowns","getElementsByClassName","dropdown","remove","toggleDeleteDropdown","cid","getElementById","allDropdowns","add","generateDatePassed","datePassed","Date","getTime","date","toDate","minutesPassed","Math","trunc","max","hoursPassed","daysPassed","editable","uid","viewedPost","deleteOption","toggleModal","username","comment","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport './PostComment.css'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\nfunction PostComment(props) {\n\n    var [photoURL, updatePhotoURL] = useState('https://firebasestorage.googleapis.com/v0/b/barz-86ae0.appspot.com/o/mysteryman%2Fmysteryman.png?alt=media&token=7b1e5a7c-ede3-46ff-a036-70636e528cd2')\n    var data = props.data\n\n    // fetch photo on mounting\n    useEffect(() => {\n        document.addEventListener('click', closeDropdowns)\n        fetchPhoto()\n        return () => {\n            document.removeEventListener('click', closeDropdowns)\n\n        }\n    }, [])\n\n    const fetchPhoto = () => {\n        var storage = firebase.storage()\n        storage.ref(data.photoRef).getDownloadURL()\n            .then(url => {\n                updatePhotoURL(url)\n                if (props.index + 1 === props.noOfComments) {\n                    // props.toggleLoader(false)\n                    console.log('toggleLoader false')\n                }\n            }).catch(function (error) {\n                console.log(\"error in Profile.js: \", error)\n            });\n    }\n\n    const closeDropdowns = (event) => {\n        const classList = event.target.classList\n        if (classList\n            && !classList.contains('posted-comment__dots')\n            && !classList.contains('posted-comment__dot')) {\n            const dropdowns = document.getElementsByClassName('delete-comment-drop-menu')\n            for (let dropdown of dropdowns) {\n                dropdown.classList.remove('delete-comment-drop-menu-show')\n            }\n        }\n    }\n\n    const toggleDeleteDropdown = (event, cid) => {\n        const dropdown = document.getElementById(cid)\n        console.log(dropdown)\n        if (dropdown.classList.contains('delete-comment-drop-menu-show')) {\n            dropdown.classList.remove('delete-comment-drop-menu-show')\n        } else {\n            const allDropdowns = document.getElementsByClassName('delete-comment-drop-menu-show')\n            for (let dropdown of allDropdowns) {\n                dropdown.classList.remove('delete-comment-drop-menu-show')\n            }\n            dropdown.classList.add('delete-comment-drop-menu-show')\n        }\n    }\n\n    const generateDatePassed = () => {\n        var datePassed = new Date().getTime() - props.data.date.toDate().getTime()\n        var minutesPassed = Math.trunc(datePassed / 1000 / 60)\n        if (minutesPassed < 60) {\n            return Math.max(minutesPassed, 1) + 'm'\n        }\n        var hoursPassed = Math.trunc(minutesPassed / 60)\n        if (hoursPassed < 24) {\n            return hoursPassed + 'h'\n        }\n        var daysPassed = Math.trunc(hoursPassed / 24)\n        if (daysPassed < 7) {\n            return daysPassed + 'd'\n        }\n        return Math.trunc((daysPassed / 7)) + 'w'\n    }\n    // editable if current user's comment or current user's post\n    const editable = (props.uid === data.uid) || (props.viewedPost.uid === props.uid)\n    var deleteOption = null;\n    if (editable) {\n        deleteOption = (\n            <div className={`posted-comment__dots-container`}>\n                <div\n                    className='posted-comment__dots' onClick={(event) => toggleDeleteDropdown(event, data.cid)}>\n                    <div\n                        className={`delete-comment-drop-menu`}\n                        id={data.cid}\n                        onMouseLeave={(event) => { closeDropdowns(event) }}>\n                        <div className=\"delete-comment-drop-menu-item\" id=\"delete-post\" onClick={() => props.toggleModal(true, data.cid)}>\n                            Delete\n                        </div>\n                    </div>\n                    <div className='posted-comment__dot'></div>\n                    <div className='posted-comment__dot'></div>\n                    <div className='posted-comment__dot'></div>\n                </div>\n                {/* <i className=\"fas fa-minus\"></i> */}\n            </div>\n        )\n    }\n\n    return (\n        <div\n            className='posted-comment'\n            onMouseLeave={(event) => { closeDropdowns(event) }}>\n            <div className='posted-comment__img-container'>\n                <img alt='alt' src={photoURL}></img>\n            </div>\n            <div className='posted-comment__content'>\n                <b>{data.username}</b> {data.comment} <br />\n                <div className='posted-comment__content__date'>{generateDatePassed()}</div>\n            </div>\n            {deleteOption}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(PostComment)"]},"metadata":{},"sourceType":"module"}