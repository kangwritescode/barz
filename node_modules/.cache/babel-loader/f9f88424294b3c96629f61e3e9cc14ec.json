{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Documents/GitHub/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Documents/GitHub/barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Documents/GitHub/barz/src/containers/Scribble/Scribble.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport vinyl from '../../assets/videos/vinyl.mov';\nimport vinyIMG from '../../assets/images/vinylIMG.png';\nimport * as actions from '../../store/actions/index';\nimport MyBars from './MyBars/MyBars';\nimport Post from './Post/Post';\nimport './Scribble.css';\nimport Toolkit from './Toolkit/Toolkit';\nimport Turntable from './Turntable/Turntable';\nimport PostEditor from '../Scribble/PostEditor/PostEditor';\nimport { isTSExpressionWithTypeArguments } from '@babel/types';\n\nconst Scribble = props => {\n  const _useState = useState(props.scribbleUI.focus),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewFocus = _useState2[0],\n        setViewFocus = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        keyPressed = _useState4[0],\n        setKeyPressed = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        editedPost = _useState6[0],\n        setEditedPost = _useState6[1];\n\n  const toggleView = () => {\n    return viewFocus === 'Post' ? props.setScribbleUI({\n      focus: 'MyBars'\n    }) : props.setScribbleUI({\n      focus: 'Post'\n    });\n  };\n\n  const editPost = pid => {\n    setEditedPost(pid);\n  };\n\n  useEffect(() => {\n    const assignRedirect = event => {\n      switch (event.key) {\n        case '1':\n          return setKeyPressed(1);\n\n        case '3':\n          return setKeyPressed(3);\n\n        case '4':\n          return setKeyPressed(4);\n\n        default:\n          break;\n      }\n    }; // document.addEventListener('keydown', assignRedirect)\n\n\n    return () => {// document.removeEventListener('keydown', afssignRedirect)\n    };\n  }, []);\n  useEffect(() => {\n    setViewFocus(props.scribbleUI.focus);\n    return () => {};\n  }, [props.scribbleUI]);\n  var content = React.createElement(\"div\", {\n    className: \"Scribble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"backup-img\",\n    src: vinyIMG,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    src: vinyl,\n    autoPlay: true,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"scribbleOverlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), editedPost ? React.createElement(PostEditor, {\n    pid: editedPost,\n    toggleEditor: setEditedPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"row-one\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(MyBars, {\n    focused: viewFocus,\n    toggle: toggleView,\n    editPost: editPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Post, {\n    focused: viewFocus,\n    toggle: toggleView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"row-two\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Toolkit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"scribble-turntable-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Turntable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })))); // switch (keyPressed) {\n  //     case 1: return content = <Redirect to='/hub'></Redirect>\n  //     case 3: return content = <Redirect to='/judge'></Redirect>\n  //     case 4: return content = <Redirect to='/wordsmiths'></Redirect>\n  //     default: break;\n  // }\n\n  return content;\n};\n\nlet mapStatetoProps = state => {\n  return {\n    musicURL: state.music.musicURL,\n    volume: state.music.volume,\n    playing: state.music.playing,\n    scribbleUI: state.ui.scribble,\n    allStations: _objectSpread({}, state.music.allStations)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    playMusic: () => dispatch(actions.playMusic()),\n    stopMusic: () => dispatch(actions.stopMusic()),\n    changeURL: newURL => dispatch(actions.changeURL(newURL)),\n    changeVol: volume => dispatch(actions.changeVol(volume)),\n    setScribbleUI: newState => dispatch(actions.setScribbleUI(newState))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);","map":{"version":3,"sources":["/Users/davidkang/Documents/GitHub/barz/src/containers/Scribble/Scribble.js"],"names":["React","useState","useEffect","connect","vinyl","vinyIMG","actions","MyBars","Post","Toolkit","Turntable","PostEditor","isTSExpressionWithTypeArguments","Scribble","props","scribbleUI","focus","viewFocus","setViewFocus","keyPressed","setKeyPressed","editedPost","setEditedPost","toggleView","setScribbleUI","editPost","pid","assignRedirect","event","key","content","mapStatetoProps","state","musicURL","music","volume","playing","ui","scribble","allStations","mapDispatchToProps","dispatch","playMusic","stopMusic","changeURL","newURL","changeVol","newState"],"mappings":"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","sourcesContent":["import 'firebase/firestore'\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport vinyl from '../../assets/videos/vinyl.mov'\nimport vinyIMG from '../../assets/images/vinylIMG.png'\nimport * as actions from '../../store/actions/index'\nimport MyBars from './MyBars/MyBars'\nimport Post from './Post/Post'\nimport './Scribble.css'\nimport Toolkit from './Toolkit/Toolkit'\nimport Turntable from './Turntable/Turntable'\nimport PostEditor from '../Scribble/PostEditor/PostEditor'\nimport { isTSExpressionWithTypeArguments } from '@babel/types'\n\n\n\n\nconst Scribble = (props) => {\n\n    const [viewFocus, setViewFocus] = useState(props.scribbleUI.focus)\n    const [keyPressed, setKeyPressed] = useState(null)\n    const [editedPost, setEditedPost] = useState(null)\n    const toggleView = () => {\n        return viewFocus === 'Post' ? props.setScribbleUI({focus: 'MyBars'}) : props.setScribbleUI({focus: 'Post'})\n    }\n    const editPost = (pid) => {\n        setEditedPost(pid)\n    }\n    useEffect(() => {\n        const assignRedirect = (event) => {\n            switch (event.key) {\n                case '1': return setKeyPressed(1)\n                case '3': return setKeyPressed(3)\n                case '4': return setKeyPressed(4)\n                default: break;\n            }\n        }\n        // document.addEventListener('keydown', assignRedirect)\n        return () => {\n            // document.removeEventListener('keydown', afssignRedirect)\n        };\n    }, [])\n    useEffect(() => {\n        setViewFocus(props.scribbleUI.focus)\n        return () => {\n        };\n    }, [props.scribbleUI])\n\n\n    var content = (\n        <div className=\"Scribble\">\n            <img id='backup-img' src={vinyIMG} alt=''></img>\n            <video src={vinyl} autoPlay={true} loop={true} playsInline={true} muted />\n            <div id=\"scribbleOverlay\" />\n            {editedPost ? <PostEditor pid={editedPost} toggleEditor={setEditedPost}/> : null}\n            <div className=\"row-one\">\n                <MyBars focused={viewFocus} toggle={toggleView} editPost={editPost}/>\n                <Post focused={viewFocus} toggle={toggleView} />\n                <div></div>\n            </div>\n            <div className=\"row-two\">\n                <Toolkit />\n                <div className='scribble-turntable-wrapper'>\n                    <Turntable />\n                </div>\n            </div>\n        </div>\n    )\n    // switch (keyPressed) {\n    //     case 1: return content = <Redirect to='/hub'></Redirect>\n    //     case 3: return content = <Redirect to='/judge'></Redirect>\n    //     case 4: return content = <Redirect to='/wordsmiths'></Redirect>\n    //     default: break;\n\n    // }\n    return content\n}\n\nlet mapStatetoProps = state => {\n    return {\n        musicURL: state.music.musicURL,\n        volume: state.music.volume,\n        playing: state.music.playing,\n        scribbleUI: state.ui.scribble,\n        allStations: {\n            ...state.music.allStations\n        },\n\n    }\n}\nlet mapDispatchToProps = dispatch => {\n    return {\n        playMusic: () => dispatch(actions.playMusic()),\n        stopMusic: () => dispatch(actions.stopMusic()),\n        changeURL: (newURL) => dispatch(actions.changeURL(newURL)),\n        changeVol: (volume) => dispatch(actions.changeVol(volume)),\n        setScribbleUI: (newState) => dispatch(actions.setScribbleUI(newState))\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);"]},"metadata":{},"sourceType":"module"}