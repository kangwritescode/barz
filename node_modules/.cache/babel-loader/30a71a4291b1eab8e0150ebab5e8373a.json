{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/InfoGetter/InfoGetter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport './InfoGetter.css';\nimport 'firebase/firestore';\nimport * as actions from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { errorCreater } from '../../../shared/utility';\nimport axios from 'axios';\nimport { regions } from '../../../shared/regions';\n\nconst InfoGetter = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        zipCode = _useState4[0],\n        setZipCode = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        gender = _useState6[0],\n        setGender = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        allUsernames = _useState8[0],\n        setAllUsernames = _useState8[1];\n\n  useEffect(() => {\n    fetchAllUsernames();\n    return () => {};\n  }, []);\n\n  const filterAndSetUsername = value => {\n    const regex = new RegExp(/^[A-Za-z0-9_]+$/);\n\n    if (regex.test(value) || value === '') {\n      setUsername(value.toLowerCase());\n    } else {\n      return;\n    }\n  };\n\n  const filterAndSetZipcode = value => {\n    if (value.length <= 5) {\n      setZipCode(value);\n    }\n  };\n\n  const fetchAddressFromZipcode = async zipcode => {\n    return axios.get('https://www.zipcodeapi.com/rest/js-zF10dQxfazt7cMgYnzZphQk7jEzBwBYPb781ubkqZokAXEvUzbinxdGT5rzVrkmB/info.json/' + zipcode + '/degrees').then(res => {\n      return res.data;\n    }).catch(err => {\n      throw errorCreater(\"Sorry, we're having trouble processing that ZIP Code.\");\n    });\n  };\n\n  const fetchAllUsernames = async () => {\n    const db = firebase.firestore();\n    db.collection('users').get().then(snapshots => {\n      let usernames = [];\n      snapshots.forEach(snapshot => {\n        usernames.push(snapshot.data().username);\n      });\n      setAllUsernames(usernames);\n    });\n  };\n\n  const submit = async () => {\n    try {\n      if (allUsernames.includes(username)) {\n        throw errorCreater('Sorry, that username is taken');\n      }\n\n      console.log(zipCode);\n      let address = {\n        city: 'Oakland',\n        state: 'CA',\n        region: 'WEST' // await fetchAddressFromZipcode(zipCode)\n\n      };\n      var newInfo = {\n        username: username,\n        address: _objectSpread({}, address, {\n          region: regions[address[\"state\"]]\n        }),\n        gender: gender === 'M' ? 'Male' : 'Female'\n      };\n      props.postUserData(props.myUID, newInfo, null);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  var submitValid = username.length > 2 && zipCode.length === 5 && !!gender;\n  console.log(submitValid);\n  return React.createElement(\"div\", {\n    className: \"info-getter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Complete Your Profile\"), React.createElement(\"input\", {\n    className: \"info-getter__username\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: event => filterAndSetUsername(event.target.value),\n    spellCheck: false,\n    maxLength: 14,\n    autoCorrect: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"info-getter__hor-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"hor-container__input\",\n    placeholder: \"Hometown Zipcode\",\n    type: \"number\",\n    value: zipCode,\n    onChange: event => filterAndSetZipcode(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"hor-container__gender-button \".concat(gender === 'M' ? 'valid' : null),\n    onClick: () => setGender('M'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"M\"), React.createElement(\"button\", {\n    className: \"hor-container__gender-button \".concat(gender === 'F' ? 'valid' : null),\n    onClick: () => setGender('F'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"F\")), React.createElement(\"button\", {\n    className: \"info-getter__submit \".concat(submitValid ? 'valid-submit' : ''),\n    disabled: username < 3 || zipCode.length < 5 || !gender,\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    myUID: state.user.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postUserData: data => dispatch(actions.postUserData(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoGetter);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/InfoGetter/InfoGetter.js"],"names":["React","useState","useEffect","firebase","actions","connect","errorCreater","axios","regions","InfoGetter","props","username","setUsername","zipCode","setZipCode","gender","setGender","allUsernames","setAllUsernames","fetchAllUsernames","filterAndSetUsername","value","regex","RegExp","test","toLowerCase","filterAndSetZipcode","length","fetchAddressFromZipcode","zipcode","get","then","res","data","catch","err","db","firestore","collection","snapshots","usernames","forEach","snapshot","push","submit","includes","console","log","address","city","state","region","newInfo","postUserData","myUID","message","submitValid","event","target","mapStateToProps","user","uid","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport './InfoGetter.css'\nimport 'firebase/firestore'\nimport * as actions from '../../../store/actions/index'\nimport { connect } from 'react-redux'\nimport { errorCreater } from '../../../shared/utility'\nimport axios from 'axios'\nimport {regions} from '../../../shared/regions'\n\nconst InfoGetter = (props) => {\n\n    const [username, setUsername] = useState('')\n    const [zipCode, setZipCode] = useState('')\n    const [gender, setGender] = useState('')\n    const [allUsernames, setAllUsernames] = useState([])\n\n    useEffect(() => {\n        fetchAllUsernames()\n        return () => {\n\n        };\n    }, [])\n    const filterAndSetUsername = (value) => {\n        const regex = new RegExp(/^[A-Za-z0-9_]+$/)\n        if (regex.test(value) || value === '') {\n            setUsername(value.toLowerCase())\n        } else {\n            return\n        }\n    }\n    const filterAndSetZipcode = (value) => {\n        if (value.length <= 5) {\n            setZipCode(value)\n        }\n    }\n    const fetchAddressFromZipcode = async (zipcode) => {\n        return axios.get('https://www.zipcodeapi.com/rest/js-zF10dQxfazt7cMgYnzZphQk7jEzBwBYPb781ubkqZokAXEvUzbinxdGT5rzVrkmB/info.json/' + zipcode + '/degrees')\n            .then(res => { return res.data })\n            .catch(err => {\n                throw errorCreater(\"Sorry, we're having trouble processing that ZIP Code.\")\n            })\n    }\n    const fetchAllUsernames = async () => {\n        const db = firebase.firestore()\n        db.collection('users').get()\n            .then(snapshots => {\n                let usernames = []\n                snapshots.forEach(snapshot => {\n                    usernames.push(snapshot.data().username)\n                })\n                setAllUsernames(usernames)\n\n            })\n    }\n    const submit = async () => {\n        try {\n            if (allUsernames.includes(username)) {\n                throw errorCreater('Sorry, that username is taken')\n            }\n            console.log(zipCode)\n            let address = {\n                city: 'Oakland',\n                state: 'CA',\n                region: 'WEST'\n            }\n            // await fetchAddressFromZipcode(zipCode)\n            var newInfo = {\n                username: username,\n                address: {\n                    ...address,\n                    region: regions[address[\"state\"]]\n                },\n                gender: gender === 'M' ? 'Male': 'Female'\n            }\n            props.postUserData(props.myUID, newInfo, null)\n        }\n        catch (err) {\n            console.log(err.message)\n        }\n        \n    }\n    var submitValid = (username.length > 2) && (zipCode.length === 5) && (!!gender)\n    console.log(submitValid)\n    return (\n        <div className={`info-getter`}>\n            <h1>Complete Your Profile</h1>\n            <input\n                className='info-getter__username'\n                placeholder='Username'\n                value={username}\n                onChange={event => filterAndSetUsername(event.target.value)}\n                spellCheck={false}\n                maxLength={14}\n                autoCorrect='off'></input>\n            <div className={`info-getter__hor-container`}>\n                <input\n                    className='hor-container__input'\n                    placeholder='Hometown Zipcode'\n                    type='number'\n                    value={zipCode}\n                    onChange={event => filterAndSetZipcode(event.target.value)}></input>\n                <button\n                    className={`hor-container__gender-button ${gender === 'M' ? 'valid' : null}`}\n                    onClick={() => setGender('M')}>M</button>\n                <button\n                    className={`hor-container__gender-button ${gender === 'F' ? 'valid' : null}`}\n                    onClick={() => setGender('F')}>F</button>\n            </div>\n            <button\n                className={`info-getter__submit ${submitValid ? 'valid-submit' : ''}`}\n                disabled={username < 3 || zipCode.length < 5 || !gender}\n                onClick={submit}>\n                Submit\n                    </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        myUID: state.user.uid\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        postUserData: (data) => dispatch(actions.postUserData(data))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoGetter)\n"]},"metadata":{},"sourceType":"module"}