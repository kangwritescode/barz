{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Authenticate/Register/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './Register.css';\nimport firebase from '../../../Firebase';\nimport validator from 'validator';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner';\n\nrequire(\"firebase/firestore\");\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: '',\n      password: '',\n      badField: '',\n      mysteryManBlob: null,\n      processing: false\n    };\n\n    this.toggleProcessing = bool => {\n      this.setState(_objectSpread({}, this.state, {\n        processing: bool\n      }));\n    };\n\n    this.fetchMysteryMan = () => {\n      var storage = firebase.storage();\n      storage.ref('mysteryman/mysteryman.png').getDownloadURL().then(url => {\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n\n        xhr.onload = event => {\n          var blob = xhr.response;\n          this.setState(_objectSpread({}, this.state, {\n            mysteryManBlob: blob\n          }));\n        };\n\n        xhr.open('GET', url);\n        xhr.send();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.createUser = async (userInput, password) => {\n      return firebase.auth().createUserWithEmailAndPassword(userInput, password).then(authObj => {\n        return [authObj.user.email, authObj.user.uid];\n      }).catch(err => {\n        throw err;\n      });\n    };\n\n    this.createFirebaseUser = async (email, uid, photoRef) => {\n      var db = firebase.firestore();\n      return db.collection('users').doc(uid).set({\n        email: email,\n        uid: uid,\n        needsInfo: true,\n        photoRef: photoRef\n      }).then(() => {}).catch(err => {\n        console.error(\"Error adding document: \", err);\n        throw err;\n      });\n    };\n\n    this.formIsValid = () => {\n      if (!this.state.userInput || this.state.password.length < 6) {\n        return false;\n      }\n\n      if (!validator.isEmail(this.state.userInput)) {\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMysteryMan();\n  }\n\n  userInputHandler(event) {\n    this.setState(_objectSpread({}, this.state, {\n      userInput: event.target.value\n    }));\n  }\n\n  passInputHandler(event) {\n    this.setState(_objectSpread({}, this.state, {\n      password: event.target.value\n    }));\n  }\n\n  async signUpHandler(event) {\n    event.preventDefault();\n    this.toggleProcessing(true);\n\n    try {\n      const _ref = await this.createUser(this.state.userInput, this.state.password),\n            _ref2 = _slicedToArray(_ref, 2),\n            email = _ref2[0],\n            uid = _ref2[1];\n\n      let photoRef = await this.uploadMysteryMan(uid);\n      await this.createFirebaseUser(email, uid, photoRef.location.path);\n      this.props.loginErrMsgHandler(\"Account successfully created!\", true);\n      this.toggleProcessing(false);\n      this.props.toggleProcess('login');\n    } catch (err) {\n      this.props.loginErrMsgHandler(err.message, false);\n\n      switch (err.code) {\n        case 'auth/invalid-email':\n          this.setState(_objectSpread({}, this.state, {\n            loading: false,\n            badField: 'email',\n            processing: false\n          }));\n          break;\n\n        case 'auth/email-already-in-use':\n          this.setState(_objectSpread({}, this.state, {\n            loading: false,\n            badField: 'email',\n            processing: false\n          }));\n          break;\n\n        case 'auth/weak-password':\n          this.setState(_objectSpread({}, this.state, {\n            loading: false,\n            badField: 'password',\n            processing: false\n          }));\n          break;\n\n        default:\n          this.toggleProcessing(false);\n          break;\n      }\n    }\n  }\n\n  uploadMysteryMan(uid) {\n    return new Promise((resolve, reject) => {\n      var storageRef = firebase.storage().ref();\n      var photoRef = storageRef.child(\"images/\".concat(uid, \"/userIMG.png\"));\n      photoRef.put(this.state.mysteryManBlob).then(snapshot => {\n        resolve(photoRef);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }\n\n  render() {\n    var formIsValid = this.formIsValid();\n    return React.createElement(\"form\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.processing ? React.createElement(\"div\", {\n      id: \"reg-dot-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }) : null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"input\", {\n      id: this.state.badField === \"email\" ? \"Username-bad\" : \"Username\",\n      type: \"email\",\n      placeholder: 'email',\n      value: this.state.userInput,\n      autoCorrect: \"off\",\n      spellCheck: \"false\",\n      autoComplete: \"off\",\n      onChange: event => this.userInputHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: this.state.badField === \"password\" ? \"Password-bad\" : \"Password\",\n      type: \"password\",\n      placeholder: 'password',\n      autoCorrect: \"off\",\n      spellCheck: \"false\",\n      value: this.state.encryptInput,\n      onChange: event => this.passInputHandler(event),\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: formIsValid && !this.state.processing ? 'reg-valid' : 'reg-invalid',\n      onClick: event => this.signUpHandler(event),\n      disabled: !formIsValid || this.state.processing ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"div\", {\n      className: \"BottomButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"GoBack\",\n      onClick: event => this.props.toggleProcess('signup', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Go Back\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Authenticate/Register/Register.js"],"names":["React","Component","firebase","validator","Spinner","DotSpinner","require","Register","state","userInput","password","badField","mysteryManBlob","processing","toggleProcessing","bool","setState","fetchMysteryMan","storage","ref","getDownloadURL","then","url","xhr","XMLHttpRequest","responseType","onload","event","blob","response","open","send","catch","error","console","log","createUser","auth","createUserWithEmailAndPassword","authObj","user","email","uid","err","createFirebaseUser","photoRef","db","firestore","collection","doc","set","needsInfo","formIsValid","length","isEmail","componentDidMount","userInputHandler","target","value","passInputHandler","signUpHandler","preventDefault","uploadMysteryMan","location","path","props","loginErrMsgHandler","toggleProcess","message","code","loading","Promise","resolve","reject","storageRef","child","put","snapshot","render","encryptInput"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Register.css'\nimport firebase from '../../../Firebase'\nimport validator from 'validator'\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport DotSpinner from '../../../shared/DotSpinner/DotSpinner';\nrequire(\"firebase/firestore\");\n\nclass Register extends Component {\n\n\n    state = {\n        userInput: '',\n        password: '',\n        badField: '',\n        mysteryManBlob: null,\n        processing: false\n    }\n\n    componentDidMount() {\n        this.fetchMysteryMan()\n    }\n    toggleProcessing = (bool) => {\n        this.setState({\n            ...this.state,\n            processing: bool\n        })\n    }\n\n    fetchMysteryMan = () => {\n        var storage = firebase.storage()\n        storage.ref('mysteryman/mysteryman.png').getDownloadURL()\n            .then(url => {\n\n\n                var xhr = new XMLHttpRequest();\n                xhr.responseType = 'blob';\n                xhr.onload = event => {\n                    var blob = xhr.response;\n                    this.setState({\n                        ...this.state,\n                        mysteryManBlob: blob\n                    })\n                };\n                xhr.open('GET', url);\n                xhr.send();\n\n\n            }).catch(function (error) {\n                console.log(error)\n            });\n    }\n\n\n\n\n    userInputHandler(event) {\n        this.setState({\n            ...this.state,\n            userInput: event.target.value\n        })\n    }\n    passInputHandler(event) {\n        this.setState({\n            ...this.state,\n            password: event.target.value\n        })\n    }\n\n\n\n\n    async signUpHandler(event) {\n        event.preventDefault()\n        this.toggleProcessing(true)\n        try {\n            const [email, uid] = await this.createUser(this.state.userInput, this.state.password)\n            let photoRef = await this.uploadMysteryMan(uid)\n            await this.createFirebaseUser(email, uid, photoRef.location.path)\n            this.props.loginErrMsgHandler(\"Account successfully created!\", true)\n            this.toggleProcessing(false)\n            this.props.toggleProcess('login')\n\n        }\n        catch (err) {\n            this.props.loginErrMsgHandler(err.message, false)\n            \n            switch (err.code) {\n                case 'auth/invalid-email':\n                    this.setState({\n                        ...this.state,\n                        loading: false,\n                        badField: 'email',\n                        processing: false\n                    })\n                    break;\n                case 'auth/email-already-in-use':\n                    this.setState({\n                        ...this.state,\n                        loading: false,\n                        badField: 'email',\n                        processing: false\n\n                    })\n                    break;\n                case 'auth/weak-password':\n                    this.setState({\n                        ...this.state,\n                        loading: false,\n                        badField: 'password',\n                        processing: false\n\n                    })\n                    break;\n                default:\n                    this.toggleProcessing(false)\n                    break;\n                \n                \n\n\n            }\n        }\n    }\n\n\n\n    createUser = async (userInput, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userInput, password)\n            .then(authObj => {\n                return [authObj.user.email, authObj.user.uid]\n            })\n            .catch(err => {\n                throw err\n            })\n\n    }\n\n\n    createFirebaseUser = async (email, uid, photoRef) => {\n        var db = firebase.firestore();\n        return db.collection('users').doc(uid).set({\n            email: email,\n            uid: uid,\n            needsInfo: true,\n            photoRef: photoRef\n        })\n            .then(() => {\n\n            })\n            .catch((err) => {\n\n                console.error(\"Error adding document: \", err);\n                throw err\n            });\n    }\n\n\n    uploadMysteryMan(uid) {\n        return new Promise((resolve, reject) => {\n            var storageRef = firebase.storage().ref();\n            var photoRef = storageRef.child(`images/${uid}/userIMG.png`);\n            photoRef.put(this.state.mysteryManBlob)\n                .then(snapshot => { resolve(photoRef) })\n                .catch(err => { console.log(err) })\n\n        })\n\n\n    }\n\n    formIsValid = () => {\n        if (!this.state.userInput || this.state.password.length < 6) { return false }\n        if (!validator.isEmail(this.state.userInput)) { return false }\n        return true\n    }\n\n\n    render() {\n\n        var formIsValid = this.formIsValid()\n\n\n        return (\n                <form className=\"register-container\">\n                   {this.state.processing ?  <div id='reg-dot-spinner'/> : null}\n                    <h1>Sign Up</h1>\n                    <input\n                        id={this.state.badField === \"email\" ? \"Username-bad\" : \"Username\"}\n                        type=\"email\"\n                        placeholder={'email'}\n                        value={this.state.userInput}\n                        autoCorrect=\"off\"\n                        spellCheck='false'\n                        autoComplete=\"off\"\n                        onChange={(event) => this.userInputHandler(event)}></input>\n                    <input\n                        id={this.state.badField === \"password\" ? \"Password-bad\" : \"Password\"}\n                        type=\"password\"\n                        placeholder={'password'}\n                        autoCorrect=\"off\"\n                        spellCheck='false'\n                        value={this.state.encryptInput}\n                        onChange={event => this.passInputHandler(event)}\n                        autoComplete=\"off\"></input>\n                    <button className={formIsValid && !this.state.processing ? 'reg-valid' : 'reg-invalid'} onClick={event => this.signUpHandler(event)} disabled={(!formIsValid || this.state.processing) ? true : false}>Create Account</button>\n                    <div className=\"BottomButtons\">\n                        <button id=\"GoBack\" onClick={event => this.props.toggleProcess('signup', event)}>Go Back</button>\n                    </div>\n                </form>\n        )\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}