{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport FireApi from '../../../FireApi/FireApi';\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost';\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter';\n\nconst PostEditor = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        votes = _useState4[0],\n        setVotes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  useEffect(() => {\n    FireApi.fetchSinglePost(setPost, props.pid);\n    const commentsListener = FireApi.allSubmissionCommentsListener(setComments, props.pid);\n    const votesListener = FireApi.allVotesListener(setVotes, props.pid);\n    return () => {\n      commentsListener();\n      votesListener();\n    };\n  }, [props.pid]);\n  var content = null;\n\n  if (post) {\n    content = React.createElement(\"div\", {\n      className: \"back-drop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ManyPost, Object.assign({\n      comments: postComments.filter(post => post.pid === props.pid),\n      selectPost: () => null,\n      votes: postVotes.filter(vote => vote.pid === props.pid)\n    }, post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"back-drop__comments-edit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Commenter, {\n      toggleDeleteCommentModal: () => null,\n      customStyle: null,\n      selectedPost: post,\n      postSelected: post,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n  return content;\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js"],"names":["React","useState","useEffect","firebase","connect","FireApi","ManyPost","Commenter","PostEditor","props","comments","setComments","votes","setVotes","post","setPost","fetchSinglePost","pid","commentsListener","allSubmissionCommentsListener","votesListener","allVotesListener","content","postComments","filter","postVotes","vote","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,gEAArB;AACA,OAAOC,SAAP,MAAsB,kEAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,oBAEMR,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEnBS,QAFmB;AAAA,QAETC,WAFS;;AAAA,qBAGAV,QAAQ,CAAC,EAAD,CAHR;AAAA;AAAA,QAGnBW,KAHmB;AAAA,QAGZC,QAHY;;AAAA,qBAIFZ,QAAQ,CAAC,IAAD,CAJN;AAAA;AAAA,QAInBa,IAJmB;AAAA,QAIbC,OAJa;;AAM1Bb,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,OAAO,CAACW,eAAR,CAAwBD,OAAxB,EAAiCN,KAAK,CAACQ,GAAvC;AACA,UAAMC,gBAAgB,GAAGb,OAAO,CAACc,6BAAR,CAAsCR,WAAtC,EAAmDF,KAAK,CAACQ,GAAzD,CAAzB;AACA,UAAMG,aAAa,GAAGf,OAAO,CAACgB,gBAAR,CAAyBR,QAAzB,EAAmCJ,KAAK,CAACQ,GAAzC,CAAtB;AAEA,WAAO,MAAM;AACTC,MAAAA,gBAAgB;AAChBE,MAAAA,aAAa;AAChB,KAHD;AAIH,GAVQ,EAUN,CAACX,KAAK,CAACQ,GAAP,CAVM,CAAT;AAYA,MAAIK,OAAO,GAAG,IAAd;;AACA,MAAIR,IAAJ,EAAU;AACNQ,IAAAA,OAAO,GACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAEC,YAAY,CAACC,MAAb,CAAoBV,IAAI,IAAIA,IAAI,CAACG,GAAL,KAAaR,KAAK,CAACQ,GAA/C,CADd;AAEI,MAAA,UAAU,EAAE,MAAM,IAFtB;AAGI,MAAA,KAAK,EAAEQ,SAAS,CAACD,MAAV,CAAiBE,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaR,KAAK,CAACQ,GAA5C;AAHX,OAIQH,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAMI;AAAK,MAAA,SAAS,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,wBAAwB,EAAE,MAAM,IADpC;AAEI,MAAA,WAAW,EAAE,IAFjB;AAGI,MAAA,YAAY,EAAEA,IAHlB;AAII,MAAA,YAAY,EAAEA,IAJlB;AAKI,MAAA,QAAQ,EAAEJ,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADJ;AAiBH;;AACD,SAAOY,OAAP;AACH,CAvCD;;AAyCA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAGH,CAJD;;AAOA,eAAe1B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,UAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport { connect } from 'react-redux'\nimport FireApi from '../../../FireApi/FireApi'\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost'\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter'\n\nconst PostEditor = (props) => {\n\n    const [comments, setComments] = useState([])\n    const [votes, setVotes] = useState([])\n    const [post, setPost] = useState(null)\n\n    useEffect(() => {\n\n        FireApi.fetchSinglePost(setPost, props.pid)\n        const commentsListener = FireApi.allSubmissionCommentsListener(setComments, props.pid)\n        const votesListener = FireApi.allVotesListener(setVotes, props.pid)\n\n        return () => {\n            commentsListener()\n            votesListener()\n        };\n    }, [props.pid])\n\n    var content = null\n    if (post) {\n        content = (\n            <div className='back-drop'>\n                <ManyPost\n                    comments={postComments.filter(post => post.pid === props.pid)}\n                    selectPost={() => null}\n                    votes={postVotes.filter(vote => vote.pid === props.pid)}\n                    {...post} />\n                <div className={`back-drop__comments-edit-container`}>\n                    <Commenter\n                        toggleDeleteCommentModal={() => null}\n                        customStyle={null}\n                        selectedPost={post}\n                        postSelected={post}\n                        comments={comments} />\n                </div>\n            </div>\n        )\n    }\n    return content\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor)\n"]},"metadata":{},"sourceType":"module"}