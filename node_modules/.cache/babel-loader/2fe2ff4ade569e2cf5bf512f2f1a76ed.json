{"ast":null,"code":"import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  // music related\n  playing: false,\n  musicURL: '',\n  volume: 50,\n  songPointer: 0,\n  allStations: {\n    lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n    boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n    dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n    chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n  }\n};\n\nconst toggleMusic = (state, action, bool) => {\n  return updateObject(state, {\n    playing: bool\n  });\n};\n\nconst changeMusicUrl = (state, action) => {\n  return updateObject(state, {\n    musicURL: action.musicURL\n  });\n};\n\nconst changeMusicVolume = (state, action) => {\n  return updateObject(state, {\n    volume: action.volume\n  });\n};\n\nconst setSongPointer = (state, action) => {\n  return updateObject(state, {\n    songPointer: action.value\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // music related\n    case actionTypes.PLAY_MUSIC:\n      return toggleMusic(state, action, true);\n\n    case actionTypes.STOP_MUSIC:\n      return toggleMusic(state, action, false);\n\n    case actionTypes.CHANGE_MUSIC_URL:\n      return changeMusicUrl(state, action);\n\n    case actionTypes.CHANGE_VOLUME:\n      return changeMusicVolume(state, action);\n\n    case actionTypes.SET_SONG_POINTER:\n      return setSongPointer(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/store/reducers/music.js"],"names":["actionTypes","updateObject","initialState","playing","musicURL","volume","songPointer","allStations","lofi","boombap","dilla","chillhop","toggleMusic","state","action","bool","changeMusicUrl","changeMusicVolume","setSongPointer","value","reducer","type","PLAY_MUSIC","STOP_MUSIC","CHANGE_MUSIC_URL","CHANGE_VOLUME","SET_SONG_POINTER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,MAAM,EAAE,EAJS;AAKjBC,EAAAA,WAAW,EAAE,CALI;AAMjBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,IAAI,EAAE,6CADG;AAETC,IAAAA,OAAO,EAAE,6CAFA;AAGTC,IAAAA,KAAK,EAAE,6CAHE;AAITC,IAAAA,QAAQ,EAAE;AAJD;AANI,CAArB;;AAcA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,IAAhB,KAAyB;AACzC,SAAOd,YAAY,CAACY,KAAD,EAAQ;AACvBV,IAAAA,OAAO,EAAEY;AADc,GAAR,CAAnB;AAGH,CAJD;;AAKA,MAAMC,cAAc,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOb,YAAY,CAACY,KAAD,EAAQ;AACvBT,IAAAA,QAAQ,EAAEU,MAAM,CAACV;AADM,GAAR,CAAnB;AAGH,CAJD;;AAKA,MAAMa,iBAAiB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOb,YAAY,CAACY,KAAD,EAAQ;AACvBR,IAAAA,MAAM,EAAES,MAAM,CAACT;AADQ,GAAR,CAAnB;AAGH,CAJD;;AAKA,MAAMa,cAAc,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOb,YAAY,CAACY,KAAD,EAAQ;AACvBP,IAAAA,WAAW,EAAEQ,MAAM,CAACK;AADG,GAAR,CAAnB;AAGH,CAJD;;AAMA,MAAMC,OAAO,GAAG,CAACP,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACO,IAAf;AACI;AACA,SAAKrB,WAAW,CAACsB,UAAjB;AAA6B,aAAOV,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB,IAAhB,CAAlB;;AAC7B,SAAKd,WAAW,CAACuB,UAAjB;AAA6B,aAAOX,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB,KAAhB,CAAlB;;AAC7B,SAAKd,WAAW,CAACwB,gBAAjB;AAAmC,aAAOR,cAAc,CAACH,KAAD,EAAQC,MAAR,CAArB;;AACnC,SAAKd,WAAW,CAACyB,aAAjB;AAAgC,aAAOR,iBAAiB,CAACJ,KAAD,EAAQC,MAAR,CAAxB;;AAChC,SAAKd,WAAW,CAAC0B,gBAAjB;AAAmC,aAAOR,cAAc,CAACL,KAAD,EAAQC,MAAR,CAArB;;AACnC;AACI,aAAOD,KAAP;AARR;AAUH,CAZD;;AAcA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    // music related\n    playing: false,\n    musicURL: '',\n    volume: 50,\n    songPointer: 0,\n    allStations: {\n        lofi: 'https://www.youtube.com/watch?v=hHW1oY26kxQ',\n        boombap: 'https://www.youtube.com/watch?v=BOXG4MLj1kU',\n        dilla: 'https://www.youtube.com/watch?v=XKB5h2tJQHQ',\n        chillhop: 'https://www.youtube.com/watch?v=DKSzY7Dg-rA'\n    }\n}\n\nconst toggleMusic = (state, action, bool) => {\n    return updateObject(state, {\n        playing: bool\n    })\n}\nconst changeMusicUrl = (state, action) => {\n    return updateObject(state, {\n        musicURL: action.musicURL\n    })\n}\nconst changeMusicVolume = (state, action) => {\n    return updateObject(state, {\n        volume: action.volume\n    })\n}\nconst setSongPointer = (state, action) => {\n    return updateObject(state, {\n        songPointer: action.value\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        // music related\n        case actionTypes.PLAY_MUSIC: return toggleMusic(state, action, true)\n        case actionTypes.STOP_MUSIC: return toggleMusic(state, action, false)\n        case actionTypes.CHANGE_MUSIC_URL: return changeMusicUrl(state, action)\n        case actionTypes.CHANGE_VOLUME: return changeMusicVolume(state, action)\n        case actionTypes.SET_SONG_POINTER: return setSongPointer(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}