{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport './ManyPost.css';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst ManyPost = props => {\n  // comment\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        commentsCount = _useState2[0],\n        setCommentsCount = _useState2[1]; // vote\n\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        myVote = _useState4[0],\n        setMyVote = _useState4[1];\n\n  useEffect(() => {\n    if (props.pid && props.votes && props.uid) {\n      var db = firebase.firestore();\n      const commentsCountListener = db.collection('postComments').where('pid', '==', props.pid).onSnapshot(snap => {\n        setCommentsCount(snap.size);\n      });\n      var myVote = props.votes.filter(vote => vote.voterID === props.uid);\n      setMyVote(myVote);\n      return () => {\n        commentsCountListener();\n      };\n    }\n  }, [props.pid, props.uid, props.votes]);\n\n  const vote = newValue => {\n    const db = firebase.firestore();\n\n    if (!myVote) {\n      var newVote = {\n        value: newValue,\n        date: new Date(),\n        pid: props.pid,\n        receiverID: props.uid,\n        voterID: props.myUID,\n        postDate: props.createdOn,\n        address: props.address\n      };\n      db.collection('postVotes').add(newVote).then(() => console.log('vote added successfully')).catch(err => console.log(err));\n    } else if (myVote) {\n      var updatedVote = _objectSpread({}, myVote, {\n        value: newValue === myVote.value ? 0 : newValue,\n        date: new Date()\n      });\n\n      console.log(myVote);\n      db.collection('postVotes').doc(myVote.vid).set(updatedVote).then(() => console.log('updated vote successfully!')).catch(err => console.log(err));\n    }\n  }; // RENDER ---->\n  // date\n\n\n  var verboseDate = props.createdOn.toDate().toDateString();\n  const date = verboseDate.slice(4, verboseDate.length); // content\n\n  var content = props.content.lineOne + ' / ' + props.content.lineTwo + ' / ' + props.content.lineThree + ' / ' + props.content.lineFour; // votes\n\n  var score = props.votes.filter(vote => {\n    return props.pid === vote.pid && vote.value === 1;\n  }); // dict {coast: color}\n\n  const colorDict = {\n    'West': 'yellow',\n    'East': 'greeen',\n    'South': 'blue',\n    'Midwest': 'purple'\n  };\n  const coastColor = colorDict[props.address.region];\n  return React.createElement(\"div\", {\n    className: \"many-post scrollTo\".concat(props.pid),\n    id: \"scrollTo\".concat(props.pid),\n    onClick: () => props.selectPost(props.pid),\n    style: props.customStyle ? props.customStyle.body : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"many-post-details\",\n    id: props.pid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"many-post-pic\",\n    src: props.photoURL,\n    alt: \"pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"many-post-name-date-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: props.customStyle ? props.customStyle.username : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.username), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, date))), React.createElement(\"div\", {\n    className: \"many-post-region\",\n    id: coastColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.address.region.toLowerCase()), React.createElement(\"div\", {\n    className: \"many-post-misc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-comment\",\n    id: \"manyComment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), commentsCount, React.createElement(\"i\", {\n    className: \"fas fa-fire\",\n    id: \"manyFlame\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), score.length)), React.createElement(\"div\", {\n    className: \"many-post-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: props.customStyle ? props.customStyle.paragraph : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\\"\".concat(content, \"\\\"\"))), React.createElement(\"div\", {\n    className: \"vote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"vote-button dislike-button\",\n    onClick: () => vote(-1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-trash\",\n    style: myVote.length === 1 && myVote[0].value === -1 ? {\n      color: 'darkRed'\n    } : null,\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"vote-button like-button\",\n    onClick: () => vote(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-fire\",\n    style: myVote.length === 1 && myVote[0].value === 1 ? {\n      color: 'orange'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    myUID: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(ManyPost);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost.js"],"names":["React","Component","useState","useEffect","connect","firebase","ManyPost","props","commentsCount","setCommentsCount","myVote","setMyVote","pid","votes","uid","db","firestore","commentsCountListener","collection","where","onSnapshot","snap","size","filter","vote","voterID","newValue","newVote","value","date","Date","receiverID","myUID","postDate","createdOn","address","add","then","console","log","catch","err","updatedVote","doc","vid","set","verboseDate","toDate","toDateString","slice","length","content","lineOne","lineTwo","lineThree","lineFour","score","colorDict","coastColor","region","selectPost","customStyle","body","photoURL","username","toLowerCase","paragraph","color","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport './ManyPost.css'\nimport {connect} from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\n\nconst ManyPost = (props) => {\n\n    // comment\n    const [commentsCount, setCommentsCount] = useState(0)\n    // vote\n    const [myVote, setMyVote] = useState(0)\n\n\n    useEffect(() => {\n        if (props.pid && props.votes && props.uid) {\n            var db = firebase.firestore()\n            const commentsCountListener = db.collection('postComments').where('pid', '==', props.pid).onSnapshot(snap => {\n                setCommentsCount(snap.size)\n            })\n\n            var myVote = props.votes.filter(vote => vote.voterID === props.uid)\n            setMyVote(myVote)\n            return () => {\n                commentsCountListener()\n            };\n        }\n\n        \n    }, [props.pid, props.uid, props.votes]);\n\n\n    const vote = (newValue) => {\n        const db = firebase.firestore()\n        if (!myVote) {\n            var newVote = {\n                value: newValue,\n                date: new Date(),\n                pid: props.pid,\n                receiverID: props.uid,\n                voterID: props.myUID,\n                postDate: props.createdOn,\n                address: props.address\n            }\n            db.collection('postVotes').add(newVote)\n                .then(() => console.log('vote added successfully'))\n                .catch(err => console.log(err))\n        } else if (myVote) {\n            var updatedVote = {\n                ...myVote,\n                value: newValue === myVote.value ? 0 : newValue,\n                date: new Date()\n            }\n            console.log(myVote)\n            db.collection('postVotes').doc(myVote.vid).set(updatedVote)\n                .then(() => console.log('updated vote successfully!'))\n                .catch(err => console.log(err))\n        }\n    }\n\n    // RENDER ---->\n\n\n    // date\n    var verboseDate = props.createdOn.toDate().toDateString()\n    const date = verboseDate.slice(4, verboseDate.length)\n\n    // content\n    var content = props.content.lineOne + ' / ' + props.content.lineTwo + ' / ' + props.content.lineThree + ' / ' + props.content.lineFour\n\n    // votes\n    var score = props.votes.filter(vote => {\n        return props.pid === vote.pid && vote.value === 1\n    })\n\n    // dict {coast: color}\n    const colorDict = {\n        'West': 'yellow',\n        'East': 'greeen',\n        'South': 'blue',\n        'Midwest': 'purple',\n    }\n    const coastColor = colorDict[props.address.region]\n\n\n    return (\n\n        <div\n            className={`many-post scrollTo${props.pid}`}\n            id={`scrollTo${props.pid}`}\n            onClick={() => props.selectPost(props.pid)}\n            style={props.customStyle ? props.customStyle.body : null}>\n            <header>\n                <div className='many-post-details' id={props.pid}>\n                    <img className='many-post-pic' src={props.photoURL} alt='pic'></img>\n                    <div className='many-post-name-date-container'>\n                        <h6 style={props.customStyle ? props.customStyle.username : null}>{props.username}</h6>\n                        <p>{date}</p>\n                    </div>\n                </div>\n                <div className='many-post-region' id={coastColor}>\n                    {props.address.region.toLowerCase()}\n                </div>\n                <div className='many-post-misc'>\n                    <i class=\"fas fa-comment\" id='manyComment' ></i>\n                    {commentsCount}\n                    <i className=\"fas fa-fire\" id='manyFlame' aria-hidden=\"true\"></i>\n                    {score.length}\n                </div>\n            </header>\n            <div className='many-post-body'>\n                <p style={props.customStyle ? props.customStyle.paragraph : null}>{`\"${content}\"`}</p>\n            </div>\n\n            <div className='vote-box'>\n                <button className='vote-button dislike-button' onClick={() => vote(-1)}>\n                    <i className=\"fa fa-trash\" style={myVote.length === 1 && myVote[0].value === -1 ? {color: 'darkRed'}: null} aria-hidden=\"true\"></i>\n                </button>\n                <button className='vote-button like-button' onClick={() => vote(1)}>\n                    <i className=\"fas fa-fire\" style={myVote.length === 1 && myVote[0].value === 1 ? {color: 'orange'}: null}></i>\n                </button>\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        myUID: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(ManyPost)\n"]},"metadata":{},"sourceType":"module"}