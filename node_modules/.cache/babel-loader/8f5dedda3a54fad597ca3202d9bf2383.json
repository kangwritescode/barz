{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/AuthForm/AuthForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport validator from 'validator';\nimport './AuthForm.css';\nimport { connect } from 'react-redux';\n\nconst AuthForm = props => {\n  // ui state\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRegistering = _useState2[0],\n        setisRegistering = _useState2[1];\n\n  let _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  let _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1]; // login\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        spinner = _useState8[0],\n        setSpinner = _useState8[1]; // sign in\n\n\n  const signIn = async event => {\n    setSpinner(true);\n    event.preventDefault();\n\n    try {\n      const uid = await authenticate(email, password);\n      setSpinner(false);\n      props.getUserData(uid);\n    } catch (err) {\n      switch (err.code) {\n        case 'auth/invalid-email':\n          console.log(err.message);\n          setSpinner(false);\n          break;\n\n        case \"auth/too-many-requests\":\n          let errMsg = \"Too many unsuccessful login attempts. Please try again later.\";\n          console.log(errMsg);\n          setSpinner(false);\n          break;\n\n        case 'auth/user-not-found':\n          console.log(err.message);\n          setSpinner(false);\n          break;\n\n        case 'auth/wrong-password':\n          console.log(err.message);\n          setSpinner(false);\n          break;\n\n        default:\n          setSpinner(false);\n          console.log(err, 'default!');\n      }\n    }\n  }; // authenticate\n\n\n  const authenticate = async (email, password) => {\n    return await firebase.auth().signInWithEmailAndPassword(email, password).then(successObj => {\n      // now's date\n      let expirationDate = new Date(); // now's date + 1 hour\n\n      expirationDate.setHours(expirationDate.getHours() + 100);\n      localStorage.setItem('token', successObj.user.refreshToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('uid', successObj.user.uid);\n      return successObj.user.uid;\n    }).catch(function (error) {\n      console.log(error);\n      throw error;\n    });\n  };\n\n  const isValidEmail = email => {\n    return validator.isEmail(email);\n  };\n\n  const isValidPassword = password => {\n    return password.length >= 6;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"landing__auth-frame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-frame__logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"BARZ\"), React.createElement(\"div\", {\n    className: \"auth-frame__sub-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"The best hub for your \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \" inner wordsmith.\"), React.createElement(\"div\", {\n    className: \"auth-frame__login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    autoComplete: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), isRegistering ? null : React.createElement(\"div\", {\n    className: \"login-container__forgot-pass-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"forgot-pass-container__button\",\n    onClick: () => props.toggleForgotPass(true),\n    tabIndex: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Forgot your password?\"))), React.createElement(\"button\", {\n    style: isRegistering ? {\n      marginTop: '1em'\n    } : null,\n    className: \"auth-frame__login-button \".concat(email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null),\n    onClick: signIn,\n    disabled: !isValidEmail(email) || !isValidPassword(password) || spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, isRegistering ? 'Create Account' : 'Log In'), React.createElement(\"div\", {\n    className: \"auth-frame__or\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"button\", {\n    className: \"auth-frame__facebook-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fab fa-facebook-square facebook-login__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, isRegistering ? 'Sign Up' : 'Continue', \" with Facebook\")), isRegistering ? React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Already have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Log In\"))) : React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Don't have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Sign Up\"))));\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/AuthForm/AuthForm.js"],"names":["React","useState","useEffect","firebase","validator","connect","AuthForm","props","isRegistering","setisRegistering","email","setEmail","password","setPassword","spinner","setSpinner","signIn","event","preventDefault","uid","authenticate","getUserData","err","code","console","log","message","errMsg","auth","signInWithEmailAndPassword","then","successObj","expirationDate","Date","setHours","getHours","localStorage","setItem","user","refreshToken","catch","error","isValidEmail","isEmail","isValidPassword","length","target","value","toggleForgotPass","marginTop","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport validator from 'validator'\nimport './AuthForm.css'\nimport { connect } from 'react-redux'\n\nconst AuthForm = (props) => {\n\n    // ui state\n    const [isRegistering, setisRegistering] = useState(false)\n\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n    // login\n    const [spinner, setSpinner] = useState(false)\n\n    // sign in\n    const signIn = async (event) => {\n        setSpinner(true)\n        event.preventDefault()\n        try {\n            const uid = await authenticate(email, password)\n            setSpinner(false)\n            props.getUserData(uid)\n        }\n        catch (err) {\n            switch (err.code) {\n                case 'auth/invalid-email':\n                    console.log(err.message)\n                    setSpinner(false)\n                    break;\n                case \"auth/too-many-requests\":\n                    let errMsg = \"Too many unsuccessful login attempts. Please try again later.\"\n                    console.log(errMsg)\n                    setSpinner(false)\n                    break;\n                case 'auth/user-not-found':\n                    console.log(err.message)\n                    setSpinner(false)\n                    break;\n                case 'auth/wrong-password':\n                    console.log(err.message)\n                    setSpinner(false)\n                    break;\n                default:\n                    setSpinner(false)\n                    console.log(err, 'default!')\n            }\n        }\n    }\n    // authenticate\n    const authenticate = async (email, password) => {\n\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(successObj => {\n                // now's date\n                let expirationDate = new Date()\n                // now's date + 1 hour\n                expirationDate.setHours(expirationDate.getHours() + 100)\n                localStorage.setItem('token', successObj.user.refreshToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('uid', successObj.user.uid)\n                return successObj.user.uid\n\n            })\n            .catch(function (error) {\n                console.log(error)\n                throw error\n            });\n    }\n\n    const isValidEmail = email => {\n        return validator.isEmail(email)\n    }\n    const isValidPassword = password => {\n        return password.length >= 6\n    }\n    return (\n        <div className={`landing__auth-frame`}>\n            <div className={`auth-frame__logo`}>BARZ</div>\n            <div className={`auth-frame__sub-text`}>The best hub for your <br /> inner wordsmith.</div>\n            <div className={`auth-frame__login-container`}>\n                <input\n                    type='email'\n                    placeholder='Email'\n                    value={email}\n                    autoComplete\n                    onChange={event => setEmail(event.target.value)}></input>\n                <input\n                    placeholder='Password'\n                    type='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}></input>\n                {isRegistering ? null : (\n                    <div className={`login-container__forgot-pass-container`}>\n                        <button\n                            className={`forgot-pass-container__button`}\n                            onClick={() => props.toggleForgotPass(true)}\n                            tabIndex=\"-1\">Forgot your password?</button>\n                    </div>\n                )}\n            </div>\n            <button\n            style={isRegistering ? {marginTop: '1em'} : null}\n                className={`auth-frame__login-button ${email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null}`}\n                onClick={signIn}\n                disabled={!isValidEmail(email) || !isValidPassword(password) || spinner}>\n                {isRegistering ? 'Create Account' : 'Log In'}\n            </button>\n            <div className={`auth-frame__or`}>or</div>\n            <button className={`auth-frame__facebook-login`}>\n                <i class=\"fab fa-facebook-square facebook-login__icon\"></i>\n                <b>{isRegistering ? 'Sign Up' : 'Continue'} with Facebook</b>\n            </button>\n            {isRegistering ? <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(false)}>Already have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Log In</b></span></div>\n                : <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(true)}>Don't have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Sign Up</b></span></div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm)\n"]},"metadata":{},"sourceType":"module"}