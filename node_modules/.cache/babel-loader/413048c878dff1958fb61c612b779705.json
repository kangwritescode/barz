{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/MyBars.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport firebase from '../../../Firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport './MyBars.css';\nimport ViewedPost from './ViewedBar/ViewedPost';\nimport GenID from '../../../shared/GenID';\n\nconst MyBars = () => {\n  const monthString = {\n    '1': 'January',\n    '2': 'February',\n    '3': 'March',\n    '4': 'April',\n    '5': 'May',\n    '6': 'June',\n    '7': 'July',\n    '8': 'August',\n    '9': 'September',\n    '10': 'October',\n    '11': 'November',\n    '12': 'December'\n  };\n  state = {\n    posts: [],\n    showPost: false,\n    viewedPost: null\n  };\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.focused === 'Post' && this.props.focused === 'MyBars') {\n      await this.fetchVotes(this.props.uid);\n      this.fetchPosts(this.props.uid);\n    } else if (prevState.showPost === true && this.state.showPost === false) {\n      await this.fetchVotes(this.props.uid);\n      this.fetchPosts(this.props.uid);\n    }\n  };\n\n  fetchPosts = async uid => {\n    var db = firebase.firestore();\n    await db.collection('submissions').where(\"uid\", \"==\", uid).orderBy('createdOn', 'desc').get().then(querySnapshot => {\n      var posts = [];\n      querySnapshot.forEach(doc => {\n        var post = _objectSpread({}, doc.data(), {\n          pid: doc.id\n        });\n\n        posts.push(post);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        posts: posts\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  fetchVotes = async uid => {\n    var db = firebase.firestore();\n    await db.collection('postVotes').where('receiverID', '==', uid).get().then(querySnapshot => {\n      var votes = {};\n      querySnapshot.forEach(doc => {\n        var vote = doc.data();\n        votes[vote.pid] = votes[vote.pid] ? Math.max(votes[vote.pid] + vote.value < 0) : Math.max(vote.value, 0);\n      });\n      console.log(votes);\n      this.setState(_objectSpread({}, this.state, {\n        votes: votes\n      }));\n    });\n  };\n\n  getOrdinal = i => {\n    var j = i % 10;\n    var k = i % 100;\n\n    if (j == 1 && k != 11) {\n      return \"st\";\n    }\n\n    if (j == 2 && k != 12) {\n      return \"nd\";\n    }\n\n    if (j == 3 && k != 13) {\n      return \"rd\";\n    } else {\n      return \"th\";\n    }\n  };\n\n  insertDateHeaders = inputArr => {\n    // create a copy\n    var arr = [...inputArr];\n    var currYear = 0;\n    var currMonth = 0;\n    var i = 0;\n\n    while (i < arr.length) {\n      var postYear = arr[i].createdOn.toDate().getUTCFullYear();\n      var postMonth = arr[i].createdOn.toDate().getUTCMonth() + 1; // if a new year is introduced, update\n\n      if (postYear !== currYear) {\n        currYear = postYear;\n      } // if a new month is introduced, or the same month but different year\n\n\n      if (postMonth !== currMonth || postMonth == currMonth && currYear != postYear) {\n        arr.splice(i, 0, [postMonth, currYear]);\n        currMonth = postMonth;\n        i += 1;\n      } else {\n        i += 1;\n      }\n    } // return copy with inserted variables\n\n\n    return arr;\n  };\n\n  toggleModal = (modal, value) => {\n    this.setState(_objectSpread({}, this.state, {\n      [modal]: value\n    }));\n  };\n\n  viewPost = async pid => {\n    this.setState(_objectSpread({}, this.state, {\n      showPost: true,\n      viewedPost: pid\n    }));\n  }; // UI\n\n\n  let focused = this.props.focused === \"MyBars\";\n  let myBarsId = focused ? 'mybars-expanded' : 'mybars-compressed';\n  let widgetHeader = focused ? 'my-bars-header-compressed' : 'my-bars-header-expanded';\n  let postsContainerId = focused ? 'posts-container-opaque' : 'posts-container-transparent'; // insert the date headers into the array\n\n  var posts = [...this.state.posts];\n\n  if (this.state.posts) {\n    posts = this.insertDateHeaders(this.state.posts);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"my-bars\",\n    id: myBarsId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"my-bars-widget-header\",\n    id: widgetHeader,\n    onClick: !focused ? this.props.toggle : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Manage\"), React.createElement(\"div\", {\n    className: \"posts-container\",\n    id: postsContainerId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, posts.map(post => {\n    if (typeof post === 'array' || post instanceof Array) {\n      return React.createElement(\"div\", {\n        id: \"month-header\",\n        key: GenID(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, MyBars.monthString[post[0]], \" \", post[1]);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"a-post\",\n      onClick: () => this.viewPost(post.pid),\n      key: GenID(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"likes-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-fire\",\n      id: \"my-bars-flame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), this.state.votes[post.pid] > 0 ? this.state.votes[post.pid] : 0), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, post.content.lineOne + \"...\"));\n  })), this.state.showPost ? React.createElement(ViewedPost, {\n    toggleViewedPost: this.toggleModal,\n    pid: this.state.viewedPost,\n    toggleModal: this.toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }) : null);\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(MyBars);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/MyBars.js"],"names":["React","Component","firebase","connect","ViewedPost","GenID","MyBars","monthString","state","posts","showPost","viewedPost","componentDidUpdate","prevProps","prevState","focused","props","fetchVotes","uid","fetchPosts","db","firestore","collection","where","orderBy","get","then","querySnapshot","forEach","doc","post","data","pid","id","push","setState","catch","err","console","log","votes","vote","Math","max","value","getOrdinal","i","j","k","insertDateHeaders","inputArr","arr","currYear","currMonth","length","postYear","createdOn","toDate","getUTCFullYear","postMonth","getUTCMonth","splice","toggleModal","modal","viewPost","myBarsId","widgetHeader","postsContainerId","toggle","map","Array","content","lineOne","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from '../../../Firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport './MyBars.css'\nimport ViewedPost from './ViewedBar/ViewedPost'\nimport GenID from '../../../shared/GenID'\n\n\nconst MyBars = () => {\n\n   const monthString = {\n    '1': 'January',\n    '2': 'February',\n    '3': 'March',\n    '4': 'April',\n    '5': 'May',\n    '6': 'June',\n    '7': 'July',\n    '8': 'August',\n    '9': 'September',\n    '10': 'October',\n    '11': 'November',\n    '12': 'December'\n}\n\nstate = {\n    posts: [],\n    showPost: false,\n    viewedPost: null\n}\n\ncomponentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.focused === 'Post' && this.props.focused === 'MyBars') {\n        await this.fetchVotes(this.props.uid)\n        this.fetchPosts(this.props.uid)\n    } else if (prevState.showPost === true && this.state.showPost === false) {\n        await this.fetchVotes(this.props.uid)\n        this.fetchPosts(this.props.uid)\n    }\n}\n\n\nfetchPosts = async (uid) => {\n    var db = firebase.firestore()\n    await db.collection('submissions').where(\"uid\", \"==\", uid).orderBy('createdOn', 'desc').get()\n        .then(querySnapshot => {\n            var posts = []\n            querySnapshot.forEach(doc => {\n                var post = {\n                    ...doc.data(),\n                    pid: doc.id\n                }\n                posts.push(post)\n            })\n            this.setState({\n                ...this.state,\n                posts: posts\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}\nfetchVotes = async (uid) => {\n    var db = firebase.firestore()\n    await db.collection('postVotes').where('receiverID', '==', uid).get()\n        .then(querySnapshot => {\n            var votes = {}\n            querySnapshot.forEach(doc => {\n                var vote = doc.data()\n                votes[vote.pid] = votes[vote.pid] ? Math.max(votes[vote.pid] + vote.value < 0) : Math.max(vote.value, 0)\n            })\n            console.log(votes)\n            this.setState({\n                ...this.state,\n                votes: votes\n            })\n\n        })\n}\n\ngetOrdinal = (i) => {\n    var j = i % 10\n    var k = i % 100\n    if (j == 1 && k != 11) { return \"st\" }\n    if (j == 2 && k != 12) { return \"nd\" }\n    if (j == 3 && k != 13) { return \"rd\" }\n    else { return \"th\" }\n}\n\ninsertDateHeaders = (inputArr) => {\n    // create a copy\n    var arr = [...inputArr]\n    var currYear = 0\n    var currMonth = 0\n    var i = 0\n    while (i < arr.length) {\n        var postYear = arr[i].createdOn.toDate().getUTCFullYear()\n        var postMonth = arr[i].createdOn.toDate().getUTCMonth() + 1\n\n        // if a new year is introduced, update\n        if (postYear !== currYear) {\n            currYear = postYear\n        }\n        // if a new month is introduced, or the same month but different year\n        if (postMonth !== currMonth || postMonth == currMonth && currYear != postYear) {\n            arr.splice(i, 0, [postMonth, currYear])\n            currMonth = postMonth\n            i += 1\n        } else {\n            i += 1\n        }\n    }\n    // return copy with inserted variables\n    return arr\n}\n\ntoggleModal = (modal, value) => {\n    this.setState({\n        ...this.state,\n        [modal]: value\n    })\n}\n\nviewPost = async (pid) => {\n    this.setState({\n        ...this.state,\n        showPost: true,\n        viewedPost: pid\n    })\n}\n\n\n\n// UI\nlet focused = this.props.focused === \"MyBars\"\nlet myBarsId = focused ? 'mybars-expanded' : 'mybars-compressed'\nlet widgetHeader = focused ? 'my-bars-header-compressed' : 'my-bars-header-expanded'\nlet postsContainerId = focused ? 'posts-container-opaque' : 'posts-container-transparent'\n\n// insert the date headers into the array\nvar posts = [...this.state.posts]\nif (this.state.posts) {\n    posts = this.insertDateHeaders(this.state.posts)\n}\n\nreturn (\n    <div className=\"my-bars\" id={myBarsId}>\n        <div className={`my-bars-widget-header`} id={widgetHeader} onClick={!focused ? this.props.toggle : null}>Manage</div>\n        <div className=\"posts-container\" id={postsContainerId}>\n            {posts.map((post) => {\n                if ((typeof post === 'array' || post instanceof Array)) {\n                    return <div id='month-header' key={GenID()}>{MyBars.monthString[post[0]]} {post[1]}</div>\n                }\n                return (\n                    <div className=\"a-post\" onClick={() => this.viewPost(post.pid)} key={GenID()}>\n                        <div id='likes-overlay'>\n                            <span><i className=\"fas fa-fire\" id=\"my-bars-flame\"></i></span>\n                            {this.state.votes[post.pid] > 0 ? this.state.votes[post.pid] : 0}\n                        </div>\n                        <p>{post.content.lineOne + \"...\"}</p>\n                    </div>\n                )\n            })}\n        </div>\n        {this.state.showPost ? <ViewedPost toggleViewedPost={this.toggleModal} pid={this.state.viewedPost} toggleModal={this.toggleModal} /> : null}\n    </div>\n)\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(MyBars)\n\n"]},"metadata":{},"sourceType":"module"}