{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport firebase from 'firebase';\nimport './RegForm.css';\nimport axios from 'axios';\nimport { errorCreater } from '../../../shared/errorCreator';\n\nfunction RegForm(props) {\n  //state\n  var _useState = useState('profile'),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPass = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zipcode = _useState10[0],\n      setZipcode = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gender = _useState12[0],\n      pickGender = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      allEmails = _useState14[0],\n      setAllEmails = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allUsernames = _useState16[0],\n      setAllUsernames = _useState16[1]; // on mounting\n\n\n  useEffect(() => {\n    fetchEmailsAndUsernames();\n  }, []); // api calls\n\n  const fetchEmailsAndUsernames = async () => {\n    const db = firebase.firestore();\n    var emailsAndUsernames = await db.collection('users').get().then(snapshots => {\n      var emails = [];\n      var usernames = [];\n      snapshots.forEach(snapshot => {\n        emails.push(snapshot.data().email);\n        usernames.push(snapshot.data().username);\n      });\n      return [emails, usernames];\n    });\n    setAllEmails(emailsAndUsernames[0]);\n    setAllUsernames(emailsAndUsernames[1]);\n  };\n\n  const fetchAddressFromZipcode = async zipcode => {\n    return axios.get('https://www.zipcodeapi.com/rest/js-zF10dQxfazt7cMgYnzZphQk7jEzBwBYPb781ubkqZokAXEvUzbinxdGT5rzVrkmB/info.json/' + zipcode + '/degrees').then(res => {\n      return res.data;\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const createUser = async (userInput, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(userInput, password).then(authObj => {\n      return [authObj.user.email, authObj.user.uid];\n    }).catch(err => {\n      throw err;\n    });\n  }; // filter functions\n\n\n  const filterAndSetUsername = value => {\n    const regex = new RegExp(/^[A-Za-z0-9_]+$/);\n\n    if (regex.test(value) || value === '') {\n      setUsername(value);\n    } else {\n      return;\n    }\n  };\n\n  const filterAndSetZipcode = value => {\n    if (value.length <= 5) {\n      setZipcode(value);\n    }\n  }; // validate functions\n\n\n  const validateEmail = email => {\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validatePassword = password => {\n    if (password.length < 6) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateUsername = username => {\n    if (username.length < 3) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateZipcode = zipcode => {\n    var zipString = parseInt(zipcode);\n    var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n    return zipCodePattern.test(zipString);\n  }; // auth functions\n\n\n  const firstStep = () => {\n    if (allEmails.includes(email)) {\n      props.setErrMsg('An account with that email already exists.');\n      props.setShowErr(true);\n    } else {\n      setStep('profile');\n    }\n  };\n\n  const submit = async event => {\n    event.preventDefault();\n\n    try {\n      // username check\n      if (allUsernames.includes(username)) {\n        throw errorCreater('That username is taken.');\n      } // zipcode check\n\n\n      const address = await fetchAddressFromZipcode(zipcode);\n\n      const _ref = await createUser(username, password),\n            _ref2 = _slicedToArray(_ref, 2),\n            email = _ref2[0],\n            uid = _ref2[1];\n    } catch (err) {\n      console.log(err);\n      notifyWithErr(err.message);\n    }\n  };\n\n  const notifyWithErr = msg => {\n    props.setErrMsg(msg);\n    props.setShowErr(true);\n  }; // validate values (account)\n\n\n  const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null;\n  const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null;\n  const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null; // validate values (profile)\n\n  const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null;\n  const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null;\n  const maleSelected = gender === 'male' ? 'focused-sex' : null;\n  const femaleSelected = gender === 'female' ? 'focused-sex' : null;\n  const isValidSubmit = username && zipcode && gender && validateUsername(username) && validateZipcode(zipcode) ? 'valid' : null; // form\n\n  var form = React.createElement(\"div\", {\n    className: \"account-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Account Info\"), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidEmail),\n    placeholder: \"Email\",\n    value: email,\n    onInput: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidPass),\n    type: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onInput: event => setPass(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"reg-button \".concat(isValidContinue),\n    onClick: event => {\n      event.preventDefault();\n      firstStep();\n    },\n    disabled: !isValidContinue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Continue\"));\n  console.log(isInvalidUsername);\n\n  if (step === 'profile') {\n    form = React.createElement(\"div\", {\n      className: \"profile-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reg-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Profile Info\"), React.createElement(\"input\", {\n      className: \"large-input \".concat(isInvalidUsername),\n      placeholder: \"Username\",\n      value: username,\n      maxLength: 15,\n      onChange: event => filterAndSetUsername(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"zip-sex-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: \"zip-input \".concat(isInvalidZipcode),\n      placeholder: \"Hometown ZIP\",\n      value: zipcode,\n      onChange: event => filterAndSetZipcode(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sex-button \".concat(maleSelected),\n      onClick: event => {\n        event.preventDefault();\n        pickGender('male');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"button\", {\n      className: \"sex-button \".concat(femaleSelected),\n      onClick: event => {\n        event.preventDefault();\n        pickGender('female');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"button\", {\n      className: \"reg-button \".concat(isValidSubmit),\n      onClick: event => submit(event),\n      disabled: !isValidSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"reg-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-close\",\n    id: \"reg-form-close\",\n    onClick: () => props.updateReg(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"reg-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Sign Up\"), form);\n}\n\nexport default RegForm;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js"],"names":["React","useState","useEffect","validator","firebase","axios","errorCreater","RegForm","props","step","setStep","email","setEmail","password","setPass","username","setUsername","zipcode","setZipcode","gender","pickGender","allEmails","setAllEmails","allUsernames","setAllUsernames","fetchEmailsAndUsernames","db","firestore","emailsAndUsernames","collection","get","then","snapshots","emails","usernames","forEach","snapshot","push","data","fetchAddressFromZipcode","res","catch","err","createUser","userInput","auth","createUserWithEmailAndPassword","authObj","user","uid","filterAndSetUsername","value","regex","RegExp","test","filterAndSetZipcode","length","validateEmail","isEmail","validatePassword","validateUsername","validateZipcode","zipString","parseInt","zipCodePattern","firstStep","includes","setErrMsg","setShowErr","submit","event","preventDefault","address","console","log","notifyWithErr","message","msg","isInvalidEmail","isInvalidPass","isValidContinue","isInvalidUsername","isInvalidZipcode","maleSelected","femaleSelected","isValidSubmit","form","target","updateReg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport validator from 'validator'\nimport firebase from 'firebase'\nimport './RegForm.css'\nimport axios from 'axios'\nimport { errorCreater } from '../../../shared/errorCreator'\n\nfunction RegForm(props) {\n\n    //state\n    var [step, setStep] = useState('profile')\n\n    var [email, setEmail] = useState('')\n    var [password, setPass] = useState('')\n    var [username, setUsername] = useState('')\n    var [zipcode, setZipcode] = useState('')\n    var [gender, pickGender] = useState(null)\n\n    var [allEmails, setAllEmails] = useState([])\n    var [allUsernames, setAllUsernames] = useState([])\n\n    // on mounting\n    useEffect(() => {\n        fetchEmailsAndUsernames()\n    }, [])\n\n    // api calls\n    const fetchEmailsAndUsernames = async () => {\n        const db = firebase.firestore()\n        var emailsAndUsernames = await db.collection('users').get()\n            .then(snapshots => {\n                var emails = []\n                var usernames = []\n                snapshots.forEach(snapshot => {\n                    emails.push(snapshot.data().email)\n                    usernames.push(snapshot.data().username)\n                })\n                return [emails, usernames]\n            })\n        setAllEmails(emailsAndUsernames[0])\n        setAllUsernames(emailsAndUsernames[1])\n    }\n\n    const fetchAddressFromZipcode = async (zipcode) => {\n        return axios.get('https://www.zipcodeapi.com/rest/js-zF10dQxfazt7cMgYnzZphQk7jEzBwBYPb781ubkqZokAXEvUzbinxdGT5rzVrkmB/info.json/' + zipcode + '/degrees')\n            .then(res => { return res.data })\n            .catch(err => {\n                throw err\n            })\n    }\n    const createUser = async (userInput, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userInput, password)\n            .then(authObj => {\n                return [authObj.user.email, authObj.user.uid]\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n\n\n    // filter functions\n    const filterAndSetUsername = (value) => {\n        const regex = new RegExp(/^[A-Za-z0-9_]+$/)\n        if (regex.test(value) || value === '') {\n            setUsername(value)\n        } else {\n            return\n        }\n    }\n\n    const filterAndSetZipcode = (value) => {\n        if (value.length <= 5) {\n            setZipcode(value)\n        }\n    }\n\n    // validate functions\n    const validateEmail = (email) => {\n        if (!validator.isEmail(email)) {\n            return false\n        }\n        return true\n    }\n    const validatePassword = (password) => {\n        if (password.length < 6) {\n            return false\n        }\n        return true\n    }\n    const validateUsername = (username) => {\n        if (username.length < 3) {\n            return false\n        }\n        return true\n    }\n\n    const validateZipcode = (zipcode) => {\n        var zipString = parseInt(zipcode)\n        var zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n        return zipCodePattern.test(zipString);\n    }\n\n    // auth functions\n    const firstStep = () => {\n        if (allEmails.includes(email)) {\n            props.setErrMsg('An account with that email already exists.')\n            props.setShowErr(true)\n        } else {\n            setStep('profile')\n        }\n    }\n    \n    const submit = async (event) => {\n        event.preventDefault()\n\n        try {\n            // username check\n            if (allUsernames.includes(username)) {\n                throw errorCreater('That username is taken.')\n            }\n            // zipcode check\n            const address = await fetchAddressFromZipcode(zipcode)\n            const [email, uid] = await createUser(username, password)\n        }\n\n\n        catch (err) {\n            console.log(err)\n            notifyWithErr(err.message)\n        }\n\n\n\n\n\n\n\n\n    }\n    const notifyWithErr = (msg) => {\n        props.setErrMsg(msg)\n        props.setShowErr(true)\n    }\n\n    // validate values (account)\n    const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n    const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n    const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass ? 'valid' : null\n\n\n    // validate values (profile)\n    const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null\n    const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null\n    const maleSelected = gender === 'male' ? 'focused-sex' : null\n    const femaleSelected = gender === 'female' ? 'focused-sex' : null\n    const isValidSubmit = (\n        username &&\n        zipcode &&\n        gender &&\n        validateUsername(username) &&\n        validateZipcode(zipcode)\n    ) ? 'valid' : null\n\n\n    // form\n    var form = (\n        <div className='account-wrapper'>\n            <div className='reg-detail'>Account Info</div>\n            <input\n                className={`large-input ${isInvalidEmail}`}\n                placeholder='Email'\n                value={email}\n                onInput={event => setEmail(event.target.value)}></input>\n            <input\n                className={`large-input ${isInvalidPass}`}\n                type='password'\n                value={password}\n                placeholder='Password'\n                onInput={event => setPass(event.target.value)}></input>\n            <button\n                className={`reg-button ${isValidContinue}`}\n                onClick={(event) => {\n                    event.preventDefault();\n                    firstStep()\n                }}\n                disabled={!isValidContinue}>Continue</button>\n        </div>\n\n    )\n    console.log(isInvalidUsername)\n    if (step === 'profile') {\n        form = (\n            <div className='profile-wrapper'>\n                <div className='reg-detail'>Profile Info</div>\n                <input\n                    className={`large-input ${isInvalidUsername}`}\n                    placeholder='Username'\n                    value={username}\n                    maxLength={15}\n                    onChange={event => filterAndSetUsername(event.target.value)}></input>\n                <div className='zip-sex-wrapper'>\n                    <input\n                        type='number'\n                        className={`zip-input ${isInvalidZipcode}`}\n                        placeholder='Hometown ZIP'\n                        value={zipcode}\n                        onChange={event => filterAndSetZipcode(event.target.value)}></input>\n                    <button className={`sex-button ${maleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('male') }}>M</button>\n                    <button className={`sex-button ${femaleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('female') }}>F</button>\n                </div>\n                <button\n                    className={`reg-button ${isValidSubmit}`}\n                    onClick={event => submit(event)}\n                    disabled={!isValidSubmit}>Submit</button>\n            </div>\n        )\n    }\n    return (\n        <form className='reg-form'>\n            <i className=\"fa fa-close\" id='reg-form-close' onClick={() => props.updateReg(false)}></i>\n            <h1 className='reg-header'>Sign Up</h1>\n            {form}\n        </form>\n    )\n}\n\nexport default RegForm\n"]},"metadata":{},"sourceType":"module"}