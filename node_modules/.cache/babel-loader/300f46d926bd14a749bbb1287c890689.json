{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/barz/src/containers/Authenticate/Authenticate.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './Authenticate.css';\nimport * as actionTypes from '../../store/actions';\nimport { connect } from 'react-redux';\nimport SignIn from './SignIn/SignIn';\nimport Register from './Register/Register';\n\nclass Authenticate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: '',\n      passInput: '',\n      encryptInput: '',\n      showNotification: false,\n      notificationMsg: '',\n      notificationStatus: false,\n      creatingAccount: false\n    };\n\n    this.toggleNotification = (msg, status) => {\n      this.setState(_objectSpread({}, this.state, {\n        showNotification: true,\n        notificationMsg: msg,\n        notificationStatus: status\n      }));\n    };\n\n    this.endNotification = () => {\n      this.setState({\n        showNotification: false\n      });\n    };\n  }\n\n  toggleProcess(process, event) {\n    switch (process) {\n      case 'login':\n        this.setState(_objectSpread({}, this.state, {\n          creatingAccount: false\n        }));\n        break;\n\n      case 'signup':\n        this.setState(_objectSpread({}, this.state, {\n          creatingAccount: true\n        }));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    var content = React.createElement(SignIn, {\n      userInput: this.state.userInput,\n      encryptInput: this.state.encryptInput,\n      userInputHandler: event => this.userInputHandler(event),\n      passInputHandler: event => this.passInputHandler(event),\n      toggleProcess: event => this.toggleProcess('signup', event),\n      loginErrMsgHandler: this.toggleNotification,\n      errMessageState: this.state.showLoginErrMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n\n    if (this.state.creatingAccount) {\n      content = React.createElement(Register, {\n        errMessageState: this.state.showLoginErrMsg,\n        userInput: this.state.userInput,\n        encryptInput: this.state.encryptInput,\n        userInputHandler: event => this.userInputHandler(event),\n        passInputHandler: event => this.passInputHandler(event),\n        toggleProcess: event => this.toggleProcess('login', event),\n        loginErrMsgHandler: this.toggleNotification,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Backdrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"auth-notification-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.showNotification ? React.createElement(\"div\", {\n      className: \"authErrMsg\",\n      id: this.state.notificationStatus ? \"authSuccess\" : \"authFailure\",\n      onAnimationEnd: this.endNotification.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.notificationMsg) : null), content);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: () => dispatch({\n      type: actionTypes.AUTHENTICATE\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Authenticate);","map":{"version":3,"sources":["/Users/davidkang/Desktop/barz/src/containers/Authenticate/Authenticate.js"],"names":["React","Component","actionTypes","connect","SignIn","Register","Authenticate","state","userInput","passInput","encryptInput","showNotification","notificationMsg","notificationStatus","creatingAccount","toggleNotification","msg","status","setState","endNotification","toggleProcess","process","event","render","content","userInputHandler","passInputHandler","showLoginErrMsg","bind","mapDispatchToProps","dispatch","authenticate","type","AUTHENTICATE"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Authenticate.css'\nimport * as actionTypes from '../../store/actions'\nimport { connect } from 'react-redux'\nimport SignIn from './SignIn/SignIn'\nimport Register from './Register/Register'\n\n\n\n\n\nclass Authenticate extends Component {\n\n    state = {\n        userInput: '',\n        passInput: '',\n        encryptInput: '',\n        showNotification: false,\n        notificationMsg: '',\n        notificationStatus: false,\n        creatingAccount: false\n    }\n\n    toggleProcess(process, event) {\n        switch (process) {\n            case 'login':\n                this.setState({\n                    ...this.state,\n                    creatingAccount: false\n                })\n                break;\n            case 'signup':\n                this.setState({\n                    ...this.state,\n                    creatingAccount: true\n                })\n                break;\n            default:\n                break;\n        }\n    }\n\n    toggleNotification = (msg, status) => {\n        this.setState({\n            ...this.state,\n            showNotification: true,\n            notificationMsg: msg,\n            notificationStatus: status\n        })\n    }\n    endNotification = () => {\n        this.setState({\n            showNotification: false\n        })\n    }\n\n\n    render() {\n\n\n        var content = (\n                <SignIn\n                    userInput={this.state.userInput}\n                    encryptInput={this.state.encryptInput}\n                    userInputHandler={(event) => this.userInputHandler(event)}\n                    passInputHandler={(event) => this.passInputHandler(event)}\n                    toggleProcess={(event) => this.toggleProcess('signup', event)}\n                    loginErrMsgHandler={this.toggleNotification}\n                    errMessageState={this.state.showLoginErrMsg} />\n\n            \n        )\n        if (this.state.creatingAccount) {\n            content = (\n                <Register\n                    errMessageState={this.state.showLoginErrMsg}\n                    userInput={this.state.userInput}\n                    encryptInput={this.state.encryptInput}\n                    userInputHandler={(event) => this.userInputHandler(event)}\n                    passInputHandler={(event) => this.passInputHandler(event)}\n                    toggleProcess={(event) => this.toggleProcess('login', event)}\n                    loginErrMsgHandler={this.toggleNotification}></Register>\n            )\n        }\n\n        return (\n            <div className=\"Backdrop\">\n                <div id=\"auth-notification-container\">\n                    {this.state.showNotification ? \n                        <div \n                            className=\"authErrMsg\" \n                            id={this.state.notificationStatus ? \"authSuccess\" : \"authFailure\"}\n                            onAnimationEnd={this.endNotification.bind(this)}>{this.state.notificationMsg}</div> : null}\n                </div>\n                {content}\n            </div>\n        )\n    }\n\n    \n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticate: () => dispatch({ type: actionTypes.AUTHENTICATE })\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Authenticate)"]},"metadata":{},"sourceType":"module"}