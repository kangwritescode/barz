{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport './PostLikes.css';\n\nconst PostLikes = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        points = _useState2[0],\n        setPoints = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        likes = _useState4[0],\n        setLikes = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        dislikes = _useState6[0],\n        setDislikes = _useState6[1];\n\n  useEffect(() => {\n    const db = firebase.firestore();\n    const votesListener = db.collection('postVotes').where('pid', '==', props.viewedPost.pid).onSnapshot(snapshot => {\n      var points = 0;\n      var likes = 0;\n      var dislikes = 0; // for every vote of this post\n\n      snapshot.docs.forEach(vote => {\n        vote = vote.data();\n\n        if (vote.value === 1) {\n          likes += 1;\n        }\n\n        if (vote.value === -1) {\n          dislikes += 1;\n        }\n      });\n      points = likes - dislikes < 0 ? 0 : likes - dislikes;\n      setPoints(points);\n      setLikes(likes);\n      setDislikes(dislikes);\n    });\n    return () => {\n      votesListener();\n    };\n  }, [props.postSelected, props.viewedPost]);\n  const percentage = likes > 0 ? Math.floor(likes * 1.0 / (likes + dislikes * 1.0) * 100) : null;\n  return React.createElement(\"div\", {\n    className: \"likes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"vote-icon-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-fire vote-icon-container__fire\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"total-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, points, \" pt\", points === 1 ? null : 's', \". \", percentage ? '(' + percentage + '%)' : null), React.createElement(\"div\", {\n    className: \"fans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, likes, \" \", likes === 1 ? 'like' : 'likes'));\n};\n\nconst mapStatetoProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStatetoProps, null)(PostLikes);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js"],"names":["React","Component","useState","useEffect","connect","firebase","PostLikes","props","points","setPoints","likes","setLikes","dislikes","setDislikes","db","firestore","votesListener","collection","where","viewedPost","pid","onSnapshot","snapshot","docs","forEach","vote","data","value","postSelected","percentage","Math","floor","mapStatetoProps","state","uid"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\nimport './PostLikes.css'\n\nconst PostLikes = (props) => {\n\n    const [points, setPoints] = useState(0);\n    const [likes, setLikes] = useState(0)\n    const [dislikes, setDislikes] = useState(0)\n\n\n\n    useEffect(() => {\n\n        const db = firebase.firestore()\n        const votesListener = db.collection('postVotes').where('pid', '==', props.viewedPost.pid).onSnapshot(snapshot => {\n            var points = 0\n            var likes = 0\n            var dislikes = 0\n            // for every vote of this post\n            snapshot.docs.forEach(vote => {\n                vote = vote.data()\n                if (vote.value === 1) {\n                    likes += 1\n                }\n                if (vote.value === -1) {\n                    dislikes += 1\n                }\n            })\n            points = (likes - dislikes) < 0 ? 0 : (likes - dislikes)\n            setPoints(points)\n            setLikes(likes)\n            setDislikes(dislikes)\n        })\n        return () => {\n            votesListener()\n        };\n    }, [props.postSelected, props.viewedPost]);\n\n    const percentage = likes > 0 ? Math.floor((likes * 1.0) / (likes + dislikes * 1.0) * 100) : null\n\n    return (\n        <div className='likes'>\n            <div className={`vote-icon-container`}>\n                <i className=\"fas fa-fire vote-icon-container__fire\"></i>\n            </div>\n            <div className='total-score'>\n                {points} pt{points === 1 ? null : 's'}. {percentage ? '(' + percentage + '%)' : null}\n            </div>\n            <div className='fans'>\n                {likes} {likes === 1 ? 'like' : 'likes'}\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStatetoProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStatetoProps, null)(PostLikes)\n"]},"metadata":{},"sourceType":"module"}