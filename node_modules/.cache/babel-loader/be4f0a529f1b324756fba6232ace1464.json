{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport './ManyPost.css';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst ManyPost = props => {\n  // comment\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        commentsCount = _useState2[0],\n        setCommentsCount = _useState2[1];\n\n  useEffect(() => {\n    if (props.pid && props.votes && props.uid) {\n      var db = firebase.firestore();\n      const commentsCountListener = db.collection('postComments').where('pid', '==', props.pid).onSnapshot(snap => {\n        setCommentsCount(snap.size);\n      });\n      return () => {\n        commentsCountListener();\n      };\n    }\n  }, [props.pid, props.uid, props.votes]);\n\n  const vote = (myVote, newValue) => {\n    const db = firebase.firestore();\n\n    if (!myVote) {\n      var newVote = {\n        value: newValue,\n        date: new Date(),\n        pid: props.pid,\n        receiverID: props.uid,\n        voterID: props.myUID,\n        postDate: props.createdOn,\n        address: props.address\n      };\n      db.collection('postVotes').add(newVote).catch(err => console.log(err));\n    } else if (myVote) {\n      var updatedVote = _objectSpread({}, myVote[0], {\n        value: newValue === myVote[0].value ? 0 : newValue,\n        date: new Date()\n      });\n\n      db.collection('postVotes').doc(myVote[0].vid).set(updatedVote).catch(err => console.log(err));\n    }\n  }; // RENDER ---->\n  // date\n\n\n  var verboseDate = props.createdOn.toDate().toDateString();\n  const date = verboseDate.slice(4, verboseDate.length); // content\n\n  var content = props.content.lineOne + ' / ' + props.content.lineTwo + ' / ' + props.content.lineThree + ' / ' + props.content.lineFour; // votes\n\n  var score = props.votes.filter(vote => {\n    return props.pid === vote.pid && vote.value === 1;\n  }); // dict {coast: color}\n\n  const colorDict = {\n    'West': 'yellow',\n    'East': 'greeen',\n    'South': 'blue',\n    'Midwest': 'purple'\n  };\n  const coastColor = colorDict[props.address.region]; // myvote\n\n  var myVote = props.votes.filter(vote => vote.voterID === props.uid);\n  return React.createElement(\"div\", {\n    className: \"many-post scrollTo\".concat(props.pid),\n    id: \"scrollTo\".concat(props.pid),\n    onClick: () => props.selectPost(props.pid),\n    style: props.customStyle ? props.customStyle.body : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"many-post-details\",\n    id: props.pid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"many-post-pic\",\n    src: props.photoURL,\n    alt: \"pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"many-post-name-date-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: props.customStyle ? props.customStyle.username : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.username), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, date))), React.createElement(\"div\", {\n    className: \"many-post-region\",\n    id: coastColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.address.region.toLowerCase()), React.createElement(\"div\", {\n    className: \"many-post-misc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-comment\",\n    id: \"manyComment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), commentsCount, React.createElement(\"i\", {\n    className: \"fas fa-fire\",\n    id: \"manyFlame\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), score.length)), React.createElement(\"div\", {\n    className: \"many-post-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: props.customStyle ? props.customStyle.paragraph : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\\"\".concat(content, \"\\\"\"))), React.createElement(\"div\", {\n    className: \"vote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"vote-button dislike-button\",\n    onClick: () => vote(myVote, -1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-trash\",\n    style: myVote.length === 1 && myVote[0].value === -1 ? {\n      color: 'darkRed'\n    } : null,\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"vote-button like-button\",\n    onClick: () => vote(myVote, 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-fire\",\n    style: myVote.length === 1 && myVote[0].value === 1 ? {\n      color: 'orange'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    myUID: state.uid\n  };\n};\n\nexport default connect(mapStateToProps, null)(ManyPost);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost.js"],"names":["React","Component","useState","useEffect","connect","firebase","ManyPost","props","commentsCount","setCommentsCount","pid","votes","uid","db","firestore","commentsCountListener","collection","where","onSnapshot","snap","size","vote","myVote","newValue","newVote","value","date","Date","receiverID","voterID","myUID","postDate","createdOn","address","add","catch","err","console","log","updatedVote","doc","vid","set","verboseDate","toDate","toDateString","slice","length","content","lineOne","lineTwo","lineThree","lineFour","score","filter","colorDict","coastColor","region","selectPost","customStyle","body","photoURL","username","toLowerCase","paragraph","color","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport './ManyPost.css'\nimport {connect} from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\n\nconst ManyPost = (props) => {\n\n    // comment\n    const [commentsCount, setCommentsCount] = useState(0)\n\n\n    useEffect(() => {\n\n        if (props.pid && props.votes && props.uid) {\n            var db = firebase.firestore()\n            const commentsCountListener = db.collection('postComments').where('pid', '==', props.pid).onSnapshot(snap => {\n                setCommentsCount(snap.size)\n            })\n\n\n            return () => {\n                commentsCountListener()\n            };\n        }\n\n        \n    }, [props.pid, props.uid, props.votes]);\n\n    const vote = (myVote, newValue) => {\n        const db = firebase.firestore()\n        if (!myVote) {\n            var newVote = {\n                value: newValue,\n                date: new Date(),\n                pid: props.pid,\n                receiverID: props.uid,\n                voterID: props.myUID,\n                postDate: props.createdOn,\n                address: props.address\n            }\n            db.collection('postVotes').add(newVote)\n                .catch(err => console.log(err))\n        } else if (myVote) {\n            var updatedVote = {\n                ...myVote[0],\n                value: newValue === myVote[0].value ? 0 : newValue,\n                date: new Date()\n            }\n\n            db.collection('postVotes').doc(myVote[0].vid).set(updatedVote)\n                .catch(err => console.log(err))\n        }\n    }\n\n    // RENDER ---->\n    \n\n\n    // date\n    var verboseDate = props.createdOn.toDate().toDateString()\n    const date = verboseDate.slice(4, verboseDate.length)\n\n    // content\n    var content = props.content.lineOne + ' / ' + props.content.lineTwo + ' / ' + props.content.lineThree + ' / ' + props.content.lineFour\n\n    // votes\n    var score = props.votes.filter(vote => {\n        return props.pid === vote.pid && vote.value === 1\n    })\n\n    // dict {coast: color}\n    const colorDict = {\n        'West': 'yellow',\n        'East': 'greeen',\n        'South': 'blue',\n        'Midwest': 'purple',\n    }\n    const coastColor = colorDict[props.address.region]\n\n    // myvote\n    var myVote = props.votes.filter(vote => vote.voterID === props.uid)\n\n    return (\n\n        <div\n            className={`many-post scrollTo${props.pid}`}\n            id={`scrollTo${props.pid}`}\n            onClick={() => props.selectPost(props.pid)}\n            style={props.customStyle ? props.customStyle.body : null}>\n            <header>\n                <div className='many-post-details' id={props.pid}>\n                    <img className='many-post-pic' src={props.photoURL} alt='pic'></img>\n                    <div className='many-post-name-date-container'>\n                        <h6 style={props.customStyle ? props.customStyle.username : null}>{props.username}</h6>\n                        <p>{date}</p>\n                    </div>\n                </div>\n                <div className='many-post-region' id={coastColor}>\n                    {props.address.region.toLowerCase()}\n                </div>\n                <div className='many-post-misc'>\n                    <i className=\"fas fa-comment\" id='manyComment' ></i>\n                    {commentsCount}\n                    <i className=\"fas fa-fire\" id='manyFlame' aria-hidden=\"true\"></i>\n                    {score.length}\n                </div>\n            </header>\n            <div className='many-post-body'>\n                <p style={props.customStyle ? props.customStyle.paragraph : null}>{`\"${content}\"`}</p>\n            </div>\n\n            <div className='vote-box'>\n                <button className='vote-button dislike-button' onClick={() => vote(myVote, -1)}>\n                    <i className=\"fa fa-trash\" style={myVote.length === 1 && myVote[0].value === -1 ? {color: 'darkRed'}: null} aria-hidden=\"true\"></i>\n                </button>\n                <button className='vote-button like-button' onClick={() => vote(myVote, 1)}>\n                    <i className=\"fas fa-fire\" style={myVote.length === 1 && myVote[0].value === 1 ? {color: 'orange'}: null}></i>\n                </button>\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        myUID: state.uid\n    }\n}\n\nexport default connect(mapStateToProps, null)(ManyPost)\n"]},"metadata":{},"sourceType":"module"}