{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/Commenter/Commenter.js\";\nimport React, { useState, useEffect } from 'react';\nimport david from '../../../../../assets/davidFace.png';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport scrollToElement from 'scroll-to-element';\nimport './Commenter.css';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport PostLikes from '../../../../../components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes';\nimport PostComments from '../../../../../components/Scribble/MyBars/ViewedBar/PostComments/PostComments';\n\nvar Commenter = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  useEffect(() => {\n    setInput('');\n    scrollToElement(props.post.pid + '');\n  }, [props.selectedPost]); // firebase\n\n  const addComment = () => {\n    var db = firebase.firestore();\n    db.collection('postComments').add({\n      comment: input,\n      date: new Date(),\n      photoRef: props.photoRef,\n      pid: props.selectedPost.pid,\n      receiverUsername: props.selectedPost.username,\n      receiverUID: props.selectedPost.uid,\n      uid: props.uid,\n      username: props.username\n    }).then(() => {\n      setInput('');\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // ui \n\n\n  var isExpanded = props.postSelected ? 'expanded' : null;\n  var isHidden = props.postSelected ? 'hidden' : null;\n  var commentsAndLikes = null;\n\n  if (props.postSelected) {\n    commentsAndLikes = React.createElement(\"div\", {\n      className: \"comments-and-likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PostComments, {\n      viewedPost: props.selectedPost,\n      comments: props.comments,\n      toggleDeleteCommentModal: props.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(PostLikes, {\n      viewedPost: props.selectedPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"commenter-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"commenter-body \".concat(isExpanded),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"select-a-post \".concat(isHidden),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Select a Post\"), commentsAndLikes, React.createElement(\"form\", {\n    className: \"post-comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"alt\",\n    src: david,\n    className: \"comment-user-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(TextareaAutosize, {\n    disabled: !props.postSelected,\n    placeholder: \"Thoughts...\",\n    value: input,\n    onChange: event => setInput(event.target.value),\n    maxLength: \"200\",\n    className: \"comment-input\",\n    spellCheck: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: !props.postSelected || input === '' ? 'disabled' : null,\n    disabled: !props.postSelected || input === '' ? true : false,\n    onClick: event => {\n      event.preventDefault();\n      addComment();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid,\n    username: state.username,\n    state: state.address.state,\n    photoRef: state.photoRef,\n    handles: state.handles\n  };\n};\n\nexport default connect(mapStateToProps, null)(Commenter);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/Commenter/Commenter.js"],"names":["React","useState","useEffect","david","firebase","connect","scrollToElement","TextareaAutosize","PostLikes","PostComments","Commenter","props","input","setInput","post","pid","selectedPost","addComment","db","firestore","collection","add","comment","date","Date","photoRef","receiverUsername","username","receiverUID","uid","then","catch","err","console","log","isExpanded","postSelected","isHidden","commentsAndLikes","comments","toggleDeleteCommentModal","event","target","value","preventDefault","mapStateToProps","state","address","handles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport david from '../../../../../assets/davidFace.png'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport scrollToElement from 'scroll-to-element'\nimport './Commenter.css'\nimport TextareaAutosize from 'react-autosize-textarea/lib'\nimport PostLikes from '../../../../../components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes'\nimport PostComments from '../../../../../components/Scribble/MyBars/ViewedBar/PostComments/PostComments'\n\nvar Commenter = (props) => {\n\n    const [input, setInput] = useState('')\n\n\n    useEffect(() => {\n        setInput('')\n        scrollToElement(props.post.pid + '')\n    }, [props.selectedPost])\n\n    // firebase\n    const addComment = () => {\n        var db = firebase.firestore()\n        db.collection('postComments').add({\n            comment: input,\n            date: new Date(),\n            photoRef: props.photoRef,\n            pid: props.selectedPost.pid,\n            receiverUsername: props.selectedPost.username,\n            receiverUID: props.selectedPost.uid,\n            uid: props.uid,\n            username: props.username\n        })\n            .then(() => {\n                setInput('')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    // ui \n    var isExpanded = props.postSelected ? 'expanded' : null\n    var isHidden = props.postSelected ? 'hidden' : null\n\n    var commentsAndLikes = null\n\n    if (props.postSelected) {\n        commentsAndLikes = (\n            <div className='comments-and-likes'>\n                <PostComments \n                    viewedPost={props.selectedPost} \n                    comments={props.comments}\n                    toggleDeleteCommentModal={props.toggleDeleteCommentModal} />\n                <PostLikes viewedPost={props.selectedPost} />\n            </div>\n\n        )\n    }\n    return (\n        <div className='commenter-wrapper'>\n            <div className='header'></div>\n            <div className={`commenter-body ${isExpanded}`}>\n                <h2 className={`select-a-post ${isHidden}`}>Select a Post</h2>\n                {commentsAndLikes}\n                <form className='post-comment'>\n                    <div className='img-wrapper'><img alt='alt' src={david} className='comment-user-img'></img></div>\n                    <TextareaAutosize\n                        disabled={!props.postSelected}\n                        placeholder='Thoughts...'\n                        value={input}\n                        onChange={event => setInput(event.target.value)}\n                        maxLength='200'\n                        className='comment-input'\n                        spellCheck=\"false\">\n                    </TextareaAutosize>\n                    <button className={(!props.postSelected || input === '') ? 'disabled' : null}\n                        disabled={!props.postSelected || input === '' ? true : false}\n                        onClick={event => { event.preventDefault(); addComment() }}>Post</button>\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n        username: state.username,\n        state: state.address.state,\n        photoRef: state.photoRef,\n        handles: state.handles,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Commenter)"]},"metadata":{},"sourceType":"module"}