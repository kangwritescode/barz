{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Documents/GitHub/barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Documents/GitHub/barz/src/containers/Scribble/Toolkit/Toolkit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './Toolkit.css';\nimport axios from 'axios';\nimport DictModal from './DictModal/DictModal';\nimport ThesModal from './ThesModal/ThesModal';\nimport RhymeModal from './RhymeModal/RhymeModal';\n\nclass Toolkit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInput: '',\n      dictJSON: null,\n      thesJSON: null,\n      rhymeJSON: null,\n      showdictJSON: false,\n      showthesJSON: false,\n      showrhymeJSON: false,\n      spinner: false\n    };\n\n    this.toggleSpinner = value => {\n      this.setState(_objectSpread({}, this.state, {\n        spinner: value\n      }));\n    };\n\n    this.onChangeHandler = event => {\n      this.setState(_objectSpread({}, this.state, {\n        searchInput: event.target.value.toLowerCase()\n      }));\n    };\n\n    this.fetchJSON = async (type, input, event) => {\n      event.preventDefault();\n      this.toggleSpinner(true);\n      let URL = '';\n\n      switch (type) {\n        case 'dictJSON':\n          URL = \"https://cors-anywhere.herokuapp.com/https://www.dictionaryapi.com/api/v3/references/collegiate/json/\".concat(input, \"?key=\").concat(Toolkit.dictKEY);\n          break;\n\n        case 'thesJSON':\n          URL = \"https://cors-anywhere.herokuapp.com/https://www.dictionaryapi.com/api/v3/references/thesaurus/json/\".concat(input, \"?key=\").concat(Toolkit.thesKey);\n          break;\n\n        case 'rhymeJSON':\n          URL = \"https://cors-anywhere.herokuapp.com/https://api.datamuse.com/words?rel_rhy=\".concat(input);\n          break;\n\n        default:\n          break;\n      }\n\n      axios.get(URL).then(res => {\n        this.toggleSpinner(false);\n        this.setState(_objectSpread({}, this.state, {\n          [type]: res.data,\n          ['show' + type]: true\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.toggleSpinner(false);\n      });\n    };\n\n    this.toggleModal = (type, value) => {\n      this.setState(_objectSpread({}, this.state, {\n        [type]: value\n      }));\n    };\n\n    this.inputNotEmptyLetters = () => {\n      return this.state.searchInput && /^[a-zA-Z]+$/.test(this.state.searchInput);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Toolkit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.spinner ? React.createElement(\"div\", {\n      id: \"my-search-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : null, this.state.showdictJSON ? React.createElement(DictModal, {\n      theWord: this.state.searchInput.toLowerCase(),\n      dictJSON: this.state.dictJSON,\n      toggleModal: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : null, this.state.showthesJSON ? React.createElement(ThesModal, {\n      theWord: this.state.searchInput.toLowerCase(),\n      thesJSON: this.state.thesJSON,\n      toggleModal: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null, this.state.showrhymeJSON ? React.createElement(RhymeModal, {\n      theWord: this.state.searchInput.toLowerCase(),\n      rhymeJSON: this.state.rhymeJSON,\n      toggleModal: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"toolkit-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Toolkit\"), React.createElement(\"form\", {\n      id: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\",\n      value: this.state.searchInput,\n      onChange: this.onChangeHandler,\n      spellCheck: \"false\",\n      autoCorrect: 'off',\n      autoComplete: 'off',\n      maxLength: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"toolkit__button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: this.inputNotEmptyLetters() && !this.state.spinner ? \"button\" : 'disabled-button',\n      id: \"dict\",\n      disabled: !this.inputNotEmptyLetters() || this.state.spinner ? true : false,\n      onClick: this.inputNotEmptyLetters() ? event => this.fetchJSON('dictJSON', this.state.searchInput.toLowerCase(), event) : event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Dict\"), React.createElement(\"button\", {\n      className: this.inputNotEmptyLetters() && !this.state.spinner ? \"button\" : 'disabled-button',\n      id: \"thes\",\n      disabled: !this.inputNotEmptyLetters() || this.state.spinner ? true : false,\n      onClick: this.inputNotEmptyLetters() ? event => this.fetchJSON('thesJSON', this.state.searchInput.toLowerCase(), event) : event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Thes\"), React.createElement(\"button\", {\n      className: this.inputNotEmptyLetters() && !this.state.spinner ? \"button\" : 'disabled-button',\n      id: \"rhyme\",\n      disabled: !this.inputNotEmptyLetters() || this.state.spinner ? true : false,\n      onClick: this.inputNotEmptyLetters() ? event => this.fetchJSON('rhymeJSON', this.state.searchInput.toLowerCase(), event) : event => event.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Rhyme\"))));\n  }\n\n}\n\nToolkit.dictKEY = 'a3e24913-4128-48ea-a608-b32992b47b18';\nToolkit.thesKey = '4fee459c-2f1e-428d-8a92-e4bbf1e117c1';\nexport default Toolkit;","map":{"version":3,"sources":["/Users/davidkang/Documents/GitHub/barz/src/containers/Scribble/Toolkit/Toolkit.js"],"names":["React","Component","axios","DictModal","ThesModal","RhymeModal","Toolkit","state","searchInput","dictJSON","thesJSON","rhymeJSON","showdictJSON","showthesJSON","showrhymeJSON","spinner","toggleSpinner","value","setState","onChangeHandler","event","target","toLowerCase","fetchJSON","type","input","preventDefault","URL","dictKEY","thesKey","get","then","res","data","catch","err","console","log","toggleModal","inputNotEmptyLetters","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Toolkit.css'\nimport axios from 'axios'\nimport DictModal from './DictModal/DictModal'\nimport ThesModal from './ThesModal/ThesModal'\nimport RhymeModal from './RhymeModal/RhymeModal'\n\nclass Toolkit extends Component {\n\n    static dictKEY = 'a3e24913-4128-48ea-a608-b32992b47b18'\n    static thesKey = '4fee459c-2f1e-428d-8a92-e4bbf1e117c1'\n\n    state = {\n        searchInput: '',\n        dictJSON: null,\n        thesJSON: null,\n        rhymeJSON: null,\n\n        showdictJSON: false,\n        showthesJSON: false,\n        showrhymeJSON: false,\n\n        spinner: false\n    }\n    toggleSpinner = (value) => {\n        this.setState({\n            ...this.state,\n            spinner: value\n        })\n    }\n    onChangeHandler = (event) => {\n        this.setState({\n            ...this.state,\n            searchInput: event.target.value.toLowerCase()\n        })\n    }\n\n    fetchJSON = async (type, input, event) => {\n        event.preventDefault()\n        this.toggleSpinner(true)\n        let URL = ''\n        switch (type) {\n            case 'dictJSON': URL = `https://cors-anywhere.herokuapp.com/https://www.dictionaryapi.com/api/v3/references/collegiate/json/${input}?key=${Toolkit.dictKEY}`; break;\n            case 'thesJSON': URL = `https://cors-anywhere.herokuapp.com/https://www.dictionaryapi.com/api/v3/references/thesaurus/json/${input}?key=${Toolkit.thesKey}`; break;\n            case 'rhymeJSON': URL = `https://cors-anywhere.herokuapp.com/https://api.datamuse.com/words?rel_rhy=${input}`; break;\n            default: break;\n        }\n        axios.get(URL)\n            .then(res => {\n                this.toggleSpinner(false)\n                this.setState({\n                    ...this.state,\n                    [type]: res.data,\n                    ['show' + type]: true\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.toggleSpinner(false)\n\n            })\n    }\n\n\n    toggleModal = (type, value) => {\n        this.setState({\n            ...this.state,\n            [type]: value\n        })\n    }\n\n    inputNotEmptyLetters = () => {\n        return this.state.searchInput && /^[a-zA-Z]+$/.test(this.state.searchInput)\n    }\n\n    render() {\n        return (\n            <div className=\"Toolkit\">\n                {this.state.spinner ? <div id='my-search-spinner'></div> : null}\n                {this.state.showdictJSON ? <DictModal theWord={this.state.searchInput.toLowerCase()} dictJSON={this.state.dictJSON} toggleModal={this.toggleModal} /> : null}\n                {this.state.showthesJSON ? <ThesModal theWord={this.state.searchInput.toLowerCase()} thesJSON={this.state.thesJSON} toggleModal={this.toggleModal} /> : null}\n                {this.state.showrhymeJSON ? <RhymeModal theWord={this.state.searchInput.toLowerCase()} rhymeJSON={this.state.rhymeJSON} toggleModal={this.toggleModal} /> : null}\n                <div className=\"toolkit-header\">Toolkit</div>\n\n                <form id=\"body\">\n                    <input\n                        placeholder=\"\"\n                        value={this.state.searchInput}\n                        onChange={this.onChangeHandler}\n                        spellCheck='false'\n                        autoCorrect={'off'}\n                        autoComplete={'off'}\n                        maxLength=\"30\"></input>\n                    <div id=\"toolkit__button-wrapper\">\n                        <button\n                            className={this.inputNotEmptyLetters() && !this.state.spinner ? `button` : 'disabled-button'}\n                            id=\"dict\" \n                            disabled={!this.inputNotEmptyLetters() || this.state.spinner ? true : false}\n                            onClick={this.inputNotEmptyLetters() ? (event) => this.fetchJSON('dictJSON', this.state.searchInput.toLowerCase(), event) : (event) => event.preventDefault()}>\n                            Dict\n                        </button>\n                        <button\n                            className={this.inputNotEmptyLetters() && !this.state.spinner ? `button` : 'disabled-button'}\n                            id=\"thes\"\n                            disabled={!this.inputNotEmptyLetters() || this.state.spinner ? true : false}\n                            onClick={this.inputNotEmptyLetters() ? (event) => this.fetchJSON('thesJSON', this.state.searchInput.toLowerCase(), event) : (event) => event.preventDefault()}>\n                            Thes\n                        </button>\n                        <button\n                            className={this.inputNotEmptyLetters() && !this.state.spinner ? `button` : 'disabled-button'}\n                            id=\"rhyme\"\n                            disabled={!this.inputNotEmptyLetters() || this.state.spinner ? true : false}\n                            onClick={this.inputNotEmptyLetters() ? (event) => this.fetchJSON('rhymeJSON', this.state.searchInput.toLowerCase(), event) : (event) => event.preventDefault()}>\n                            Rhyme\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Toolkit\n"]},"metadata":{},"sourceType":"module"}