{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/Commenter/Commenter.js\";\nimport React, { useState, useEffect } from 'react';\nimport david from '../../../../../assets/davidFace.png';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport 'firebase/firestore';\nimport scrollToElement from 'scroll-to-element';\nimport './Commenter.css';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport PostLikes from '../../../../../components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes';\nimport PostComments from '../../../../../components/Scribble/MyBars/ViewedBar/PostComments/PostComments';\n\nvar Commenter = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isCommenting = _useState4[0],\n        setIsCommenting = _useState4[1];\n\n  useEffect(() => {\n    setInput('');\n  }, [props.selectedPost]); // firebase\n\n  const addComment = () => {\n    setIsCommenting(true);\n    var db = firebase.firestore();\n    db.collection('postComments').add({\n      comment: input,\n      date: new Date(),\n      photoURL: props.photoURL,\n      pid: props.selectedPost.pid,\n      receiverUsername: props.selectedPost.username,\n      receiverUID: props.selectedPost.uid,\n      uid: props.uid,\n      username: props.username\n    }).then(() => {\n      setInput('');\n      setIsCommenting(false);\n    }).catch(err => {\n      console.log(err.message);\n      setIsCommenting(false);\n    });\n  }; // ui \n\n\n  var isExpanded = props.postSelected ? 'expanded' : null;\n  var isHidden = props.postSelected ? 'hidden' : null;\n  var commentsAndLikes = null;\n\n  if (props.postSelected) {\n    commentsAndLikes = React.createElement(\"div\", {\n      className: \"comments-and-likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(PostComments, {\n      viewedPost: props.selectedPost,\n      comments: props.comments,\n      toggleDeleteCommentModal: props.toggleDeleteCommentModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(PostLikes, {\n      viewedPost: props.selectedPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"commenter-wrapper\",\n    style: props.customStyle ? props.customStyle.wrapper : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    style: props.customStyle ? props.customStyle.header : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"commenter-body \".concat(isExpanded),\n    style: props.customStyle ? props.customStyle.body : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"select-a-post \".concat(isHidden),\n    style: props.customStyle ? props.customStyle.selectAPost : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Select a Post\"), commentsAndLikes, React.createElement(\"form\", {\n    className: \"post-comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"\",\n    src: props.photoURL,\n    className: \"comment-user-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(TextareaAutosize, {\n    disabled: !props.postSelected,\n    placeholder: \"Thoughts...\",\n    value: input,\n    onChange: event => setInput(event.target.value),\n    maxLength: \"200\",\n    className: \"comment-input\",\n    spellCheck: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: !props.postSelected || input === '' || isCommenting ? 'disabled' : null,\n    disabled: !props.postSelected || input === '' ? true : false,\n    onClick: event => {\n      event.preventDefault();\n      addComment();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid,\n    username: state.username,\n    state: state.address.state,\n    photoURL: state.photoURL,\n    handles: state.handles\n  };\n};\n\nexport default connect(mapStateToProps, null)(Commenter);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/JudgeBarz/ManyView/Commenter/Commenter.js"],"names":["React","useState","useEffect","david","firebase","connect","scrollToElement","TextareaAutosize","PostLikes","PostComments","Commenter","props","input","setInput","isCommenting","setIsCommenting","selectedPost","addComment","db","firestore","collection","add","comment","date","Date","photoURL","pid","receiverUsername","username","receiverUID","uid","then","catch","err","console","log","message","isExpanded","postSelected","isHidden","commentsAndLikes","comments","toggleDeleteCommentModal","customStyle","wrapper","header","body","selectAPost","event","target","value","preventDefault","mapStateToProps","state","address","handles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport david from '../../../../../assets/davidFace.png'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport 'firebase/firestore'\nimport scrollToElement from 'scroll-to-element'\nimport './Commenter.css'\nimport TextareaAutosize from 'react-autosize-textarea/lib'\nimport PostLikes from '../../../../../components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes'\nimport PostComments from '../../../../../components/Scribble/MyBars/ViewedBar/PostComments/PostComments'\n\nvar Commenter = (props) => {\n\n    const [input, setInput] = useState('')\n    const [isCommenting, setIsCommenting] = useState(false)\n\n\n    useEffect(() => {\n        setInput('')\n    }, [props.selectedPost])\n\n    // firebase\n    const addComment = () => {\n        setIsCommenting(true)\n        var db = firebase.firestore()\n        db.collection('postComments').add({\n            comment: input,\n            date: new Date(),\n            photoURL: props.photoURL,\n            pid: props.selectedPost.pid,\n            receiverUsername: props.selectedPost.username,\n            receiverUID: props.selectedPost.uid,\n            uid: props.uid,\n            username: props.username\n        })\n            .then(() => {\n                setInput('')\n                setIsCommenting(false)\n            })\n            .catch(err => {\n                console.log(err.message)\n                setIsCommenting(false)\n            })\n    }\n\n    // ui \n    var isExpanded = props.postSelected ? 'expanded' : null\n    var isHidden = props.postSelected ? 'hidden' : null\n\n    var commentsAndLikes = null\n    if (props.postSelected) {\n        commentsAndLikes = (\n            <div className='comments-and-likes'>\n                <PostComments \n                    viewedPost={props.selectedPost} \n                    comments={props.comments}\n                    toggleDeleteCommentModal={props.toggleDeleteCommentModal} />\n                <PostLikes viewedPost={props.selectedPost} />\n            </div>\n\n        )\n    }\n    return (\n        <div className={`commenter-wrapper`} style={props.customStyle ? props.customStyle.wrapper : null}>\n            <div className='header' style={props.customStyle ? props.customStyle.header : null}></div>\n            <div className={`commenter-body ${isExpanded}`} style={props.customStyle ? props.customStyle.body : null}>\n                <h2 className={`select-a-post ${isHidden}`} style={props.customStyle ? props.customStyle.selectAPost : null}>Select a Post</h2>\n                {commentsAndLikes}\n                <form className='post-comment'>\n                    <div className='img-wrapper'><img alt='' src={props.photoURL} className='comment-user-img'></img></div>\n                    <TextareaAutosize\n                        disabled={!props.postSelected}\n                        placeholder='Thoughts...'\n                        value={input}\n                        onChange={event => setInput(event.target.value)}\n                        maxLength='200'\n                        className='comment-input'\n                        spellCheck=\"false\">\n                    </TextareaAutosize>\n                    <button className={(!props.postSelected || input === '' || isCommenting) ? 'disabled' : null}\n                        disabled={!props.postSelected || input === '' ? true : false}\n                        onClick={event => { event.preventDefault(); addComment() }}>Post</button>\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n        username: state.username,\n        state: state.address.state,\n        photoURL: state.photoURL,\n        handles: state.handles,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Commenter)"]},"metadata":{},"sourceType":"module"}