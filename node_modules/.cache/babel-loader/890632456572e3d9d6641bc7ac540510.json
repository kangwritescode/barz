{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js\";\nimport React, { useState, useEffect } from 'react';\nimport './PostEditor.css';\nimport { connect } from 'react-redux';\nimport FireApi from '../../../FireApi/FireApi';\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost';\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter';\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment';\n\nconst PostEditor = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        comments = _useState2[0],\n        setComments = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        votes = _useState4[0],\n        setVotes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        post = _useState6[0],\n        setPost = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cid = _useState8[0],\n        setCid = _useState8[1];\n\n  useEffect(() => {\n    FireApi.fetchSinglePost(setPost, props.pid);\n    const commentsListener = FireApi.allSubmissionCommentsListener(setComments, props.pid);\n    const votesListener = FireApi.allVotesListener(setVotes, props.pid);\n    return () => {\n      commentsListener();\n      votesListener();\n    };\n  }, [props.pid]);\n  var content = null;\n\n  if (post) {\n    content = React.createElement(\"div\", {\n      className: \"editor-layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, cid ? React.createElement(DeleteComment, {\n      cid: cid,\n      toggleDeleteCommentModal: () => setCid(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"editor-backdrop\",\n      onClick: () => props.toggleEditor(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"editor-layout__content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ManyPost, Object.assign({\n      comments: comments.filter(post => post.pid === props.pid),\n      selectPost: () => null,\n      votes: votes.filter(vote => vote.pid === props.pid)\n    }, post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container-edit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Commenter, {\n      toggleDeleteCommentModal: (bool, cid) => setCid(cid),\n      customStyle: null,\n      selectedPost: post,\n      postSelected: post,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n  return content;\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/PostEditor/PostEditor.js"],"names":["React","useState","useEffect","connect","FireApi","ManyPost","Commenter","DeleteComment","PostEditor","props","comments","setComments","votes","setVotes","post","setPost","cid","setCid","fetchSinglePost","pid","commentsListener","allSubmissionCommentsListener","votesListener","allVotesListener","content","toggleEditor","filter","vote","bool","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './PostEditor.css'\nimport { connect } from 'react-redux'\nimport FireApi from '../../../FireApi/FireApi'\nimport ManyPost from '../../../containers/Judge/JudgeBarz/ManyView/ManyPost/ManyPost'\nimport Commenter from '../../../containers/Judge/JudgeBarz/ManyView/Commenter/Commenter'\nimport DeleteComment from '../MyBars/ViewedBar/DeleteComment/DeleteComment'\n\nconst PostEditor = (props) => {\n\n    const [comments, setComments] = useState([])\n    const [votes, setVotes] = useState([])\n    const [post, setPost] = useState(null)\n    const [cid, setCid] = useState(null)\n\n    useEffect(() => {\n\n        FireApi.fetchSinglePost(setPost, props.pid)\n        const commentsListener = FireApi.allSubmissionCommentsListener(setComments, props.pid)\n        const votesListener = FireApi.allVotesListener(setVotes, props.pid)\n\n        return () => {\n            commentsListener()\n            votesListener()\n        };\n    }, [props.pid])\n\n    var content = null\n    if (post) {\n        content = (\n            <div className={`editor-layout`}>\n                {cid ?\n                    <DeleteComment\n                        cid={cid}\n                        toggleDeleteCommentModal={() => setCid(false)}\n                    />\n                    : null}\n                <div className='editor-backdrop' onClick={() => props.toggleEditor(null)} />\n                <div className={`editor-layout__content-container`}>\n                    <ManyPost\n                        comments={comments.filter(post => post.pid === props.pid)}\n                        selectPost={() => null}\n                        votes={votes.filter(vote => vote.pid === props.pid)}\n                        {...post} />\n                    <div className={`content-container-edit-container`}>\n                        <Commenter\n                            toggleDeleteCommentModal={(bool, cid) => setCid(cid)}\n                            customStyle={null}\n                            selectedPost={post}\n                            postSelected={post}\n                            comments={comments} />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n    return content\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostEditor)\n"]},"metadata":{},"sourceType":"module"}