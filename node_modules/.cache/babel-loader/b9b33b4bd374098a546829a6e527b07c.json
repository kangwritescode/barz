{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/AuthForm/AuthForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport validator from 'validator';\nimport './AuthForm.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport { regions } from '../../../shared/regions';\nimport DotSpinner from '../../../components/DotSpinner/DotSpinner';\n\nconst AuthForm = props => {\n  // ui state\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isRegistering = _useState2[0],\n        setisRegistering = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        notification = _useState4[0],\n        setNotification = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        sentiment = _useState6[0],\n        setSentiment = _useState6[1];\n\n  let _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  let _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        mysteryManBlob = _useState12[0],\n        setMysteryManBlob = _useState12[1]; // login\n\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        spinner = _useState14[0],\n        setSpinner = _useState14[1];\n\n  useEffect(() => {\n    fetchMysteryMan();\n    return () => {};\n  }, []); // sign in\n\n  const signIn = async event => {\n    setSpinner(true);\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    try {\n      const uid = await authenticate(email, password);\n      setSpinner(false);\n      props.getUserData(uid);\n    } catch (err) {\n      setSpinner(false);\n      console.log(err.message);\n\n      switch (err.code) {\n        case 'auth/invalid-email':\n          setNotification(err.message);\n          break;\n\n        case \"auth/too-many-requests\":\n          let errMsg = \"Too many unsuccessful login attempts. Please try again later.\";\n          setNotification(errMsg);\n          break;\n\n        case 'auth/user-not-found':\n          setNotification(err.message);\n          break;\n\n        case 'auth/wrong-password':\n          setNotification(err.message);\n          break;\n\n        default:\n      }\n    }\n  }; // authenticate\n\n\n  const authenticate = async (email, password) => {\n    return await firebase.auth().signInWithEmailAndPassword(email, password).then(successObj => {\n      // now's date\n      let expirationDate = new Date(); // now's date + 1 hour\n\n      expirationDate.setHours(expirationDate.getHours() + 100);\n      localStorage.setItem('token', successObj.user.refreshToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('uid', successObj.user.uid);\n      return successObj.user.uid;\n    }).catch(function (error) {\n      console.log(error);\n      throw error;\n    });\n  }; // uploades mysteryman and then...\n\n\n  const uploadMysteryMan = async uid => {\n    let storageRef = firebase.storage().ref();\n    let photoRef = storageRef.child(\"images/\".concat(uid, \"/userIMG.png\"));\n    return photoRef.put(mysteryManBlob).then(async successObj => {\n      // fetches and returns the download URL\n      const url = await successObj.ref.getDownloadURL();\n      return url;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  const fetchMysteryMan = () => {\n    let storage = firebase.storage();\n    storage.ref('mysteryman/mysteryman.png').getDownloadURL().then(url => {\n      let xhr = new XMLHttpRequest();\n      xhr.responseType = 'blob';\n\n      xhr.onload = event => {\n        let blob = xhr.response;\n        setMysteryManBlob(blob);\n      };\n\n      xhr.open('GET', url);\n      xhr.send();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // register \n\n\n  const createAuthUser = async (userInput, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(userInput, password).then(authObj => {\n      return [authObj.user.email, authObj.user.uid];\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const createFirebaseUser = async (email, uid, photoURL) => {\n    let db = firebase.firestore();\n    const user = {\n      email: email,\n      uid: uid,\n      photoURL: photoURL,\n      username: '',\n      address: '',\n      gender: '',\n      handles: {\n        facebook: '',\n        instagram: '',\n        soundcloud: '',\n        youtube: ''\n      }\n    };\n    return db.collection('users').doc(uid).set(user).then(() => {\n      return true;\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const createAccount = async (email, inputPass, event) => {\n    setSpinner(true);\n    event.preventDefault();\n\n    try {\n      let _ref = await createAuthUser(email, inputPass),\n          _ref2 = _slicedToArray(_ref, 2),\n          fireEmail = _ref2[0],\n          uid = _ref2[1];\n\n      const photoURL = await uploadMysteryMan(uid);\n      console.log(photoURL, '<----');\n      await createFirebaseUser(fireEmail, uid, photoURL);\n      setSpinner(false);\n      setNotification('Created Account Successfully!');\n      setSentiment(true);\n    } catch (err) {\n      setSpinner(false);\n      setNotification(err.message);\n    }\n  };\n\n  const isValidEmail = email => {\n    return validator.isEmail(email);\n  };\n\n  const isValidPassword = password => {\n    return password.length >= 6;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"landing__auth-frame\",\n    style: isRegistering ? {\n      paddingBottom: '2.9em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, notification ? React.createElement(\"p\", {\n    className: \"auth-frame__notification\",\n    style: sentiment ? {\n      background: 'darkgreen'\n    } : null,\n    onAnimationEnd: () => setNotification(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, notification) : null, React.createElement(\"div\", {\n    className: \"auth-frame__logo\",\n    style: isRegistering ? {\n      fontSize: '3.2em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, isRegistering ? 'Sign Up' : 'BARZ'), isRegistering ? null : React.createElement(\"div\", {\n    className: \"auth-frame__sub-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"The best hub for your \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), \" inner wordsmith.\"), React.createElement(\"div\", {\n    className: \"auth-frame__login-container\",\n    style: isRegistering ? {\n      marginTop: '.3em'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    autoComplete: true,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), isRegistering ? null : React.createElement(\"div\", {\n    className: \"login-container__forgot-pass-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"forgot-pass-container__button\",\n    onClick: () => props.toggleForgotPass(true),\n    tabIndex: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Forgot your password?\"))), React.createElement(\"button\", {\n    style: isRegistering ? {\n      marginTop: '2.45em'\n    } : null,\n    className: \"auth-frame__login-button \".concat(email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null),\n    onClick: isRegistering ? event => createAccount(email, password, event) : signIn,\n    disabled: !isValidEmail(email) || !isValidPassword(password) || spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, isRegistering ? 'Create Account' : 'Log In', spinner ? React.createElement(DotSpinner, {\n    customStyle: {\n      position: 'absolute',\n      left: '-55px',\n      bottom: '-104px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    className: \"auth-frame__or\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"button\", {\n    className: \"auth-frame__facebook-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fab fa-facebook-square facebook-login__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, isRegistering ? 'Sign Up' : 'Continue', \" with Facebook\")), isRegistering ? React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Already have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Log In\"))) : React.createElement(\"div\", {\n    className: \"auth-frame__dont-have\",\n    onClick: () => setisRegistering(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Don't have an account? \\xA0\", React.createElement(\"span\", {\n    className: \"dont-have__sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Sign Up\"))));\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: uid => dispatch(actions.fetchUserData(uid))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/AuthForm/AuthForm.js"],"names":["React","useState","useEffect","firebase","validator","connect","actions","regions","DotSpinner","AuthForm","props","isRegistering","setisRegistering","notification","setNotification","sentiment","setSentiment","email","setEmail","password","setPassword","mysteryManBlob","setMysteryManBlob","spinner","setSpinner","fetchMysteryMan","signIn","event","preventDefault","uid","authenticate","getUserData","err","console","log","message","code","errMsg","auth","signInWithEmailAndPassword","then","successObj","expirationDate","Date","setHours","getHours","localStorage","setItem","user","refreshToken","catch","error","uploadMysteryMan","storageRef","storage","ref","photoRef","child","put","url","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","blob","response","open","send","createAuthUser","userInput","createUserWithEmailAndPassword","authObj","createFirebaseUser","photoURL","db","firestore","username","address","gender","handles","facebook","instagram","soundcloud","youtube","collection","doc","set","createAccount","inputPass","fireEmail","isValidEmail","isEmail","isValidPassword","length","paddingBottom","background","fontSize","marginTop","target","value","toggleForgotPass","position","left","bottom","mapStateToProps","state","mapDispatchToProps","dispatch","fetchUserData"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB;AAFwB,oBAGkBT,QAAQ,CAAC,KAAD,CAH1B;AAAA;AAAA,QAGjBU,aAHiB;AAAA,QAGFC,gBAHE;;AAAA,qBAIgBX,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAIjBY,YAJiB;AAAA,QAIHC,eAJG;;AAAA,qBAKUb,QAAQ,CAAC,KAAD,CALlB;AAAA;AAAA,QAKjBc,SALiB;AAAA,QAKNC,YALM;;AAAA,mBAOAf,QAAQ,CAAC,EAAD,CAPR;AAAA;AAAA,MAOnBgB,KAPmB;AAAA,MAOZC,QAPY;;AAAA,mBAQMjB,QAAQ,CAAC,EAAD,CARd;AAAA;AAAA,MAQnBkB,QARmB;AAAA,MAQTC,WARS;;AAAA,sBAUoBnB,QAAQ,CAAC,IAAD,CAV5B;AAAA;AAAA,QAUjBoB,cAViB;AAAA,QAUDC,iBAVC,mBAWxB;;;AAXwB,sBAYMrB,QAAQ,CAAC,KAAD,CAZd;AAAA;AAAA,QAYjBsB,OAZiB;AAAA,QAYRC,UAZQ;;AAgBxBtB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,eAAe;AACf,WAAO,MAAM,CACZ,CADD;AAEH,GAJQ,EAIN,EAJM,CAAT,CAhBwB,CAqBxB;;AACA,QAAMC,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAIG,KAAJ,EAAW;AAAEA,MAAAA,KAAK,CAACC,cAAN;AAAwB;;AACrC,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,YAAY,CAACb,KAAD,EAAQE,QAAR,CAA9B;AACAK,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAd,MAAAA,KAAK,CAACqB,WAAN,CAAkBF,GAAlB;AACH,KAJD,CAKA,OAAOG,GAAP,EAAY;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;;AACA,cAAQH,GAAG,CAACI,IAAZ;AACI,aAAK,oBAAL;AACItB,UAAAA,eAAe,CAACkB,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ,aAAK,wBAAL;AACI,cAAIE,MAAM,GAAG,+DAAb;AACAvB,UAAAA,eAAe,CAACuB,MAAD,CAAf;AACA;;AACJ,aAAK,qBAAL;AACIvB,UAAAA,eAAe,CAACkB,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ,aAAK,qBAAL;AACIrB,UAAAA,eAAe,CAACkB,GAAG,CAACG,OAAL,CAAf;AACA;;AACJ;AAdJ;AAgBH;AACJ,GA5BD,CAtBwB,CAmDxB;;;AACA,QAAML,YAAY,GAAG,OAAOb,KAAP,EAAcE,QAAd,KAA2B;AAE5C,WAAO,MAAMhB,QAAQ,CAACmC,IAAT,GAAgBC,0BAAhB,CAA2CtB,KAA3C,EAAkDE,QAAlD,EACRqB,IADQ,CACHC,UAAU,IAAI;AAChB;AACA,UAAIC,cAAc,GAAG,IAAIC,IAAJ,EAArB,CAFgB,CAGhB;;AACAD,MAAAA,cAAc,CAACE,QAAf,CAAwBF,cAAc,CAACG,QAAf,KAA4B,GAApD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,UAAU,CAACO,IAAX,CAAgBC,YAA9C;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCL,cAAvC;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BN,UAAU,CAACO,IAAX,CAAgBnB,GAA5C;AACA,aAAOY,UAAU,CAACO,IAAX,CAAgBnB,GAAvB;AAEH,KAXQ,EAYRqB,KAZQ,CAYF,UAAUC,KAAV,EAAiB;AACpBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACA,YAAMA,KAAN;AACH,KAfQ,CAAb;AAgBH,GAlBD,CApDwB,CAwExB;;;AACA,QAAMC,gBAAgB,GAAG,MAAOvB,GAAP,IAAe;AACpC,QAAIwB,UAAU,GAAGlD,QAAQ,CAACmD,OAAT,GAAmBC,GAAnB,EAAjB;AACA,QAAIC,QAAQ,GAAGH,UAAU,CAACI,KAAX,kBAA2B5B,GAA3B,kBAAf;AACA,WAAO2B,QAAQ,CAACE,GAAT,CAAarC,cAAb,EACFmB,IADE,CACG,MAAOC,UAAP,IAAsB;AACxB;AACA,YAAMkB,GAAG,GAAG,MAAMlB,UAAU,CAACc,GAAX,CAAeK,cAAf,EAAlB;AACA,aAAOD,GAAP;AACH,KALE,EAMFT,KANE,CAMIlB,GAAG,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AAA0B,KANvC,CAAP;AAOH,GAVD;;AAYA,QAAMV,eAAe,GAAG,MAAM;AAC1B,QAAI6B,OAAO,GAAGnD,QAAQ,CAACmD,OAAT,EAAd;AACAA,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,cAAzC,GACKpB,IADL,CACUmB,GAAG,IAAI;AACT,UAAIE,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;AACAF,MAAAA,GAAG,CAACG,MAAJ,GAAarC,KAAK,IAAI;AAClB,YAAIsC,IAAI,GAAGJ,GAAG,CAACK,QAAf;AACA5C,QAAAA,iBAAiB,CAAC2C,IAAD,CAAjB;AACH,OAHD;;AAIAJ,MAAAA,GAAG,CAACM,IAAJ,CAAS,KAAT,EAAgBR,GAAhB;AACAE,MAAAA,GAAG,CAACO,IAAJ;AAEH,KAXL,EAWOlB,KAXP,CAWa,UAAUC,KAAV,EAAiB;AACtBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,KAbL;AAcH,GAhBD,CArFwB,CAsGxB;;;AACA,QAAMkB,cAAc,GAAG,OAAOC,SAAP,EAAkBnD,QAAlB,KAA+B;AAClD,WAAOhB,QAAQ,CAACmC,IAAT,GAAgBiC,8BAAhB,CAA+CD,SAA/C,EAA0DnD,QAA1D,EACFqB,IADE,CACGgC,OAAO,IAAI;AACb,aAAO,CAACA,OAAO,CAACxB,IAAR,CAAa/B,KAAd,EAAqBuD,OAAO,CAACxB,IAAR,CAAanB,GAAlC,CAAP;AACH,KAHE,EAIFqB,KAJE,CAIIlB,GAAG,IAAI;AACV,YAAMA,GAAN;AACH,KANE,CAAP;AAOH,GARD;;AASA,QAAMyC,kBAAkB,GAAG,OAAOxD,KAAP,EAAcY,GAAd,EAAmB6C,QAAnB,KAAgC;AACvD,QAAIC,EAAE,GAAGxE,QAAQ,CAACyE,SAAT,EAAT;AAEA,UAAM5B,IAAI,GAAG;AACT/B,MAAAA,KAAK,EAAEA,KADE;AAETY,MAAAA,GAAG,EAAEA,GAFI;AAGT6C,MAAAA,QAAQ,EAAEA,QAHD;AAITG,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,MAAM,EAAE,EANC;AAOTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,UAAU,EAAE,EAHP;AAILC,QAAAA,OAAO,EAAE;AAJJ;AAPA,KAAb;AAcA,WAAOT,EAAE,CAACU,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BzD,GAA3B,EAAgC0D,GAAhC,CAAoCvC,IAApC,EACFR,IADE,CACG,MAAM;AACR,aAAO,IAAP;AACH,KAHE,EAIFU,KAJE,CAIKlB,GAAD,IAAS;AACZ,YAAMA,GAAN;AACH,KANE,CAAP;AAOH,GAxBD;;AA0BA,QAAMwD,aAAa,GAAG,OAAOvE,KAAP,EAAcwE,SAAd,EAAyB9D,KAAzB,KAAmC;AACrDH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AAAA,iBACuB,MAAMyC,cAAc,CAACpD,KAAD,EAAQwE,SAAR,CAD3C;AAAA;AAAA,UACKC,SADL;AAAA,UACgB7D,GADhB;;AAEA,YAAM6C,QAAQ,GAAG,MAAMtB,gBAAgB,CAACvB,GAAD,CAAvC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYwC,QAAZ,EAAsB,OAAtB;AACA,YAAMD,kBAAkB,CAACiB,SAAD,EAAY7D,GAAZ,EAAiB6C,QAAjB,CAAxB;AACAlD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAV,MAAAA,eAAe,CAAC,+BAAD,CAAf;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KARD,CASA,OAAOgB,GAAP,EAAY;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAV,MAAAA,eAAe,CAACkB,GAAG,CAACG,OAAL,CAAf;AACH;AACJ,GAhBD;;AAkBA,QAAMwD,YAAY,GAAG1E,KAAK,IAAI;AAC1B,WAAOb,SAAS,CAACwF,OAAV,CAAkB3E,KAAlB,CAAP;AACH,GAFD;;AAGA,QAAM4E,eAAe,GAAG1E,QAAQ,IAAI;AAChC,WAAOA,QAAQ,CAAC2E,MAAT,IAAmB,CAA1B;AACH,GAFD;;AAGA,SACI;AAAK,IAAA,SAAS,uBAAd;AAAuC,IAAA,KAAK,EAAEnF,aAAa,GAAG;AAAEoF,MAAAA,aAAa,EAAE;AAAjB,KAAH,GAAgC,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlF,YAAY,GACT;AACI,IAAA,SAAS,4BADb;AAEI,IAAA,KAAK,EAAEE,SAAS,GAAG;AAACiF,MAAAA,UAAU,EAAE;AAAb,KAAH,GAA+B,IAFnD;AAGI,IAAA,cAAc,EAAE,MAAMlF,eAAe,CAAC,EAAD,CAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,YAJL,CADS,GAOP,IARV,EASI;AAAK,IAAA,SAAS,oBAAd;AAAoC,IAAA,KAAK,EAAEF,aAAa,GAAG;AAAEsF,MAAAA,QAAQ,EAAE;AAAZ,KAAH,GAA2B,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FtF,aAAa,GAAG,SAAH,GAAe,MAAtH,CATJ,EAUKA,aAAa,GAAG,IAAH,GACV;AAAK,IAAA,SAAS,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9D,sBAXR,EAcI;AAAK,IAAA,SAAS,+BAAd;AAA+C,IAAA,KAAK,EAAEA,aAAa,GAAG;AAAEuF,MAAAA,SAAS,EAAE;AAAb,KAAH,GAA2B,IAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,KAAK,EAAEjF,KAHX;AAII,IAAA,YAAY,MAJhB;AAKI,IAAA,QAAQ,EAAEU,KAAK,IAAIT,QAAQ,CAACS,KAAK,CAACwE,MAAN,CAAaC,KAAd,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEjF,QAHX;AAII,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,WAAW,CAACO,KAAK,CAACwE,MAAN,CAAaC,KAAd,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAYKzF,aAAa,GAAG,IAAH,GACV;AAAK,IAAA,SAAS,0CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,iCADb;AAEI,IAAA,OAAO,EAAE,MAAMD,KAAK,CAAC2F,gBAAN,CAAuB,IAAvB,CAFnB;AAGI,IAAA,QAAQ,EAAC,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAbR,CAdJ,EAmCI;AACI,IAAA,KAAK,EAAE1F,aAAa,GAAG;AAAEuF,MAAAA,SAAS,EAAE;AAAb,KAAH,GAA6B,IADrD;AAEI,IAAA,SAAS,qCAA8BjF,KAAK,CAAC6E,MAAN,GAAe,CAAf,IAAoBH,YAAY,CAAC1E,KAAD,CAAhC,IAA2C4E,eAAe,CAAC1E,QAAD,CAA1D,IAAwE,CAACI,OAAzE,GAAmF,iCAAnF,GAAuH,IAArJ,CAFb;AAGI,IAAA,OAAO,EAAEZ,aAAa,GAAIgB,KAAD,IAAW6D,aAAa,CAACvE,KAAD,EAAQE,QAAR,EAAkBQ,KAAlB,CAA3B,GAAsDD,MAHhF;AAII,IAAA,QAAQ,EAAE,CAACiE,YAAY,CAAC1E,KAAD,CAAb,IAAwB,CAAC4E,eAAe,CAAC1E,QAAD,CAAxC,IAAsDI,OAJpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKZ,aAAa,GAAG,gBAAH,GAAsB,QALxC,EAMKY,OAAO,GAAG,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAE;AAAE+E,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,IAAI,EAAE,OAA9B;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4F,IANxG,CAnCJ,EA2CI;AAAK,IAAA,SAAS,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA3CJ,EA4CI;AAAQ,IAAA,SAAS,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,6CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI7F,aAAa,GAAG,SAAH,GAAe,UAAhC,mBAFJ,CA5CJ,EAiDKA,aAAa,GAAG;AAAK,IAAA,SAAS,yBAAd;AAAyC,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgH;AAAM,IAAA,SAAS,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC,CAAhH,CAAH,GACR;AAAK,IAAA,SAAS,yBAAd;AAAyC,IAAA,OAAO,EAAE,MAAMA,gBAAgB,CAAC,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA6G;AAAM,IAAA,SAAS,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvC,CAA7G,CAlDV,CADJ;AAuDH,CAzND;;AA2NA,MAAM6F,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH7E,IAAAA,WAAW,EAAGF,GAAD,IAAS+E,QAAQ,CAACtG,OAAO,CAACuG,aAAR,CAAsBhF,GAAtB,CAAD;AAD3B,GAAP;AAGH,CAJD;;AAOA,eAAexB,OAAO,CAACoG,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClG,QAA7C,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport validator from 'validator'\nimport './AuthForm.css'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../store/actions/index'\nimport { regions } from '../../../shared/regions'\nimport DotSpinner from '../../../components/DotSpinner/DotSpinner'\n\nconst AuthForm = (props) => {\n\n    // ui state\n    const [isRegistering, setisRegistering] = useState(false)\n    const [notification, setNotification] = useState('')\n    const [sentiment, setSentiment] = useState(false)\n\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const [mysteryManBlob, setMysteryManBlob] = useState(null)\n    // login\n    const [spinner, setSpinner] = useState(false)\n\n\n\n    useEffect(() => {\n        fetchMysteryMan()\n        return () => {\n        };\n    }, [])\n    // sign in\n    const signIn = async (event) => {\n        setSpinner(true)\n        if (event) { event.preventDefault() }\n        try {\n            const uid = await authenticate(email, password)\n            setSpinner(false)\n            props.getUserData(uid)\n        }\n        catch (err) {\n            setSpinner(false)\n            console.log(err.message)\n            switch (err.code) {\n                case 'auth/invalid-email':\n                    setNotification(err.message)\n                    break;\n                case \"auth/too-many-requests\":\n                    let errMsg = \"Too many unsuccessful login attempts. Please try again later.\"\n                    setNotification(errMsg)\n                    break;\n                case 'auth/user-not-found':\n                    setNotification(err.message)\n                    break;\n                case 'auth/wrong-password':\n                    setNotification(err.message)\n                    break;\n                default:\n            }\n        }\n    }\n    // authenticate\n    const authenticate = async (email, password) => {\n\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(successObj => {\n                // now's date\n                let expirationDate = new Date()\n                // now's date + 1 hour\n                expirationDate.setHours(expirationDate.getHours() + 100)\n                localStorage.setItem('token', successObj.user.refreshToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('uid', successObj.user.uid)\n                return successObj.user.uid\n\n            })\n            .catch(function (error) {\n                console.log(error)\n                throw error\n            });\n    }\n\n    // uploades mysteryman and then...\n    const uploadMysteryMan = async (uid) => {\n        let storageRef = firebase.storage().ref();\n        let photoRef = storageRef.child(`images/${uid}/userIMG.png`);\n        return photoRef.put(mysteryManBlob)\n            .then(async (successObj) => {\n                // fetches and returns the download URL\n                const url = await successObj.ref.getDownloadURL()\n                return url\n            })\n            .catch(err => { console.log(err.message) })\n    }\n\n    const fetchMysteryMan = () => {\n        let storage = firebase.storage()\n        storage.ref('mysteryman/mysteryman.png').getDownloadURL()\n            .then(url => {\n                let xhr = new XMLHttpRequest();\n                xhr.responseType = 'blob';\n                xhr.onload = event => {\n                    let blob = xhr.response;\n                    setMysteryManBlob(blob)\n                };\n                xhr.open('GET', url);\n                xhr.send();\n\n            }).catch(function (error) {\n                console.log(error)\n            });\n    }\n    // register \n    const createAuthUser = async (userInput, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(userInput, password)\n            .then(authObj => {\n                return [authObj.user.email, authObj.user.uid]\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n    const createFirebaseUser = async (email, uid, photoURL) => {\n        let db = firebase.firestore();\n\n        const user = {\n            email: email,\n            uid: uid,\n            photoURL: photoURL,\n            username: '',\n            address: '',\n            gender: '',\n            handles: {\n                facebook: '',\n                instagram: '',\n                soundcloud: '',\n                youtube: ''\n            }\n        }\n        return db.collection('users').doc(uid).set(user)\n            .then(() => {\n                return true\n            })\n            .catch((err) => {\n                throw err\n            });\n    }\n\n    const createAccount = async (email, inputPass, event) => {\n        setSpinner(true)\n        event.preventDefault()\n        try {\n            let [fireEmail, uid] = await createAuthUser(email, inputPass)\n            const photoURL = await uploadMysteryMan(uid)\n            console.log(photoURL, '<----')\n            await createFirebaseUser(fireEmail, uid, photoURL)\n            setSpinner(false)\n            setNotification('Created Account Successfully!')\n            setSentiment(true)\n        }\n        catch (err) {\n            setSpinner(false)\n            setNotification(err.message)\n        }\n    }\n\n    const isValidEmail = email => {\n        return validator.isEmail(email)\n    }\n    const isValidPassword = password => {\n        return password.length >= 6\n    }\n    return (\n        <div className={`landing__auth-frame`} style={isRegistering ? { paddingBottom: '2.9em' } : null}>\n            {notification ?\n                <p\n                    className={`auth-frame__notification`}\n                    style={sentiment ? {background: 'darkgreen'} : null}\n                    onAnimationEnd={() => setNotification('')}>\n                    {notification}\n                </p>\n                : null}\n            <div className={`auth-frame__logo`} style={isRegistering ? { fontSize: '3.2em' } : null}>{isRegistering ? 'Sign Up' : 'BARZ'}</div>\n            {isRegistering ? null : (\n                <div className={`auth-frame__sub-text`}>The best hub for your <br /> inner wordsmith.</div>\n\n            )}\n            <div className={`auth-frame__login-container`} style={isRegistering ? { marginTop: '.3em' } : null}>\n                <input\n                    type='email'\n                    placeholder='Email'\n                    value={email}\n                    autoComplete\n                    onChange={event => setEmail(event.target.value)}></input>\n                <input\n                    placeholder='Password'\n                    type='password'\n                    value={password}\n                    onChange={event => setPassword(event.target.value)}></input>\n                {isRegistering ? null : (\n                    <div className={`login-container__forgot-pass-container`}>\n                        <button\n                            className={`forgot-pass-container__button`}\n                            onClick={() => props.toggleForgotPass(true)}\n                            tabIndex=\"-1\">Forgot your password?</button>\n                    </div>\n                )}\n            </div>\n            <button\n                style={isRegistering ? { marginTop: '2.45em' } : null}\n                className={`auth-frame__login-button ${email.length > 0 && isValidEmail(email) && isValidPassword(password) && !spinner ? 'auth-frame__login-button--valid' : null}`}\n                onClick={isRegistering ? (event) => createAccount(email, password, event) : signIn}\n                disabled={!isValidEmail(email) || !isValidPassword(password) || spinner}>\n                {isRegistering ? 'Create Account' : 'Log In'}\n                {spinner ? <DotSpinner customStyle={{ position: 'absolute', left: '-55px', bottom: '-104px' }} /> : null}\n            </button>\n            <div className={`auth-frame__or`}>or</div>\n            <button className={`auth-frame__facebook-login`}>\n                <i class=\"fab fa-facebook-square facebook-login__icon\"></i>\n                <b>{isRegistering ? 'Sign Up' : 'Continue'} with Facebook</b>\n\n            </button>\n            {isRegistering ? <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(false)}>Already have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Log In</b></span></div>\n                : <div className={`auth-frame__dont-have`} onClick={() => setisRegistering(true)}>Don't have an account? &nbsp;<span className={`dont-have__sign-up`}><b>Sign Up</b></span></div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserData: (uid) => dispatch(actions.fetchUserData(uid))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm)\n"]},"metadata":{},"sourceType":"module"}