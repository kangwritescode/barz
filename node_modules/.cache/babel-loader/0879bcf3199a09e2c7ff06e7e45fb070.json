{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport './FollowBox.css';\nimport FollowItem from './FollowItem/FollowItem';\n\nfunction FollowBox(props) {\n  const followBoxClasses = ['follow-box', 'follow-box__header', 'follow-box_body', \"header__section\"]; // follows\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        follows = _useState2[0],\n        setfollows = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        followersCount = _useState4[0],\n        setfollowersCount = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        followingCount = _useState6[0],\n        setfollowingCount = _useState6[1]; // users\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        users = _useState8[0],\n        setUsers = _useState8[1]; //ui\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        focusOn = _useState10[0],\n        setFocusOn = _useState10[1]; // componentDidMount\n\n\n  useEffect(() => {\n    document.addEventListener('click', toggleFocus);\n    return () => {\n      document.removeEventListener('click', toggleFocus);\n    };\n  }, []); // attach listeners for users, following, followers\n\n  useEffect(() => {\n    var db = firebase.firestore();\n\n    const fetchFollows = async () => {\n      return db.collection('follows').onSnapshot(snapshot => {\n        var arr = [];\n        snapshot.forEach(doc => {\n          arr.push(doc.data());\n        });\n        setfollows(arr);\n      });\n    };\n\n    if (props.uid) {\n      var fetchFollowsPromise = fetchFollows();\n      return () => {\n        fetchFollowsPromise.then(listener => listener());\n      };\n    }\n  }, [props.uid], followersCount, followingCount); // fetch followerUsers and followingUsers\n\n  useEffect(() => {\n    if (focusOn) {\n      var db = firebase.firestore();\n      db.collection('users').get().then(snapshot => {\n        var arr = [];\n        snapshot.forEach(doc => {\n          arr.push(_objectSpread({}, doc.data()));\n        });\n        setUsers(arr);\n      });\n    }\n\n    return () => {};\n  }, [focusOn]);\n\n  const toggleFocus = event => {\n    var clickedOnFollowBox = false;\n    followBoxClasses.forEach(className => {\n      if (event.target.classList.contains(className)) {\n        clickedOnFollowBox = true;\n      }\n    });\n\n    if (clickedOnFollowBox) {\n      return;\n    } else {\n      setFocusOn('');\n    }\n  };\n\n  const findMyFollowsFrom = follows => {\n    const myFollowsFrom = [];\n    follows.forEach(follow => {\n      if (follow.from === props.uid) {\n        myFollowsFrom.push(follow.from);\n      }\n    });\n    return myFollowsFrom;\n  };\n\n  const findMyFollowsTo = follows => {\n    const myFollowsTo = [];\n    follows.forEach(follow => {\n      if (follow.to === props.uid) {\n        myFollowsTo.push(follow.from);\n      }\n    });\n    return myFollowsTo;\n  };\n\n  const getFilteredUsers = (users, follows) => {\n    return users.filter(user => {\n      if (follows.includes(user.uid)) {\n        return true;\n      }\n    });\n  }; // ui\n\n\n  const expandedBody = focusOn ? 'follow-box__expanded' : 'follow-box__compressed';\n  const followersFocused = focusOn === 'followers' ? 'focused' : null;\n  const followingFocused = focusOn === 'following' ? 'focused' : null; // focus bar style\n\n  var focusedBarStyle = null;\n\n  if (focusOn === 'following') {\n    focusedBarStyle = 'under-following';\n  } else if (focusOn === 'followers') {\n    focusedBarStyle = 'under-followers';\n  }\n\n  const followsFrom = findMyFollowsFrom(follows);\n  const followsTo = findMyFollowsTo(follows);\n  var followingUsers = getFilteredUsers(users, followsTo);\n  var followedUsers = getFilteredUsers(users, followsFrom);\n  var displayedUsers;\n\n  if (focusOn === 'following') {\n    displayedUsers = followingUsers.map(user => {\n      return React.createElement(FollowItem, Object.assign({}, user, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n    });\n  } else if (focusOn === 'followers') {\n    displayedUsers = followedUsers.map(user => {\n      return React.createElement(FollowItem, Object.assign({}, user, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"follow-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"follow-box__header \".concat(focusOn ? 'follow-box_header-filled' : 'follow-box_header-unfilled'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header__section \".concat(followersFocused),\n    onClick: () => setFocusOn(focusOn === 'followers' ? '' : 'followers'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, followedUsers.length, \" \", 'follower' + (followedUsers.length !== 1 ? 's' : ''), React.createElement(\"div\", {\n    className: \"focused-bar \".concat(focusedBarStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"header__section \".concat(followingFocused),\n    onClick: () => setFocusOn(focusOn === 'following' ? '' : 'following'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, followingUsers.length, \" following\")), React.createElement(\"div\", {\n    className: \"follow-box_body \".concat(expandedBody),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, displayedUsers));\n}\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/FollowBox/FollowBox.js"],"names":["React","useState","useEffect","firebase","connect","FollowItem","FollowBox","props","followBoxClasses","follows","setfollows","followersCount","setfollowersCount","followingCount","setfollowingCount","users","setUsers","focusOn","setFocusOn","document","addEventListener","toggleFocus","removeEventListener","db","firestore","fetchFollows","collection","onSnapshot","snapshot","arr","forEach","doc","push","data","uid","fetchFollowsPromise","then","listener","get","event","clickedOnFollowBox","className","target","classList","contains","findMyFollowsFrom","myFollowsFrom","follow","from","findMyFollowsTo","myFollowsTo","to","getFilteredUsers","filter","user","includes","expandedBody","followersFocused","followingFocused","focusedBarStyle","followsFrom","followsTo","followingUsers","followedUsers","displayedUsers","map","length","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport './FollowBox.css'\nimport FollowItem from './FollowItem/FollowItem'\n\nfunction FollowBox(props) {\n\n    const followBoxClasses = [\n        'follow-box',\n        'follow-box__header',\n        'follow-box_body',\n        \"header__section\"\n    ]\n\n    // follows\n    const [follows, setfollows] = useState([])\n    const [followersCount, setfollowersCount] = useState(0);\n    const [followingCount, setfollowingCount] = useState(0);\n    // users\n    const [users, setUsers] = useState([]);\n    //ui\n    const [focusOn, setFocusOn] = useState('')\n\n\n    // componentDidMount\n    useEffect(() => {\n        document.addEventListener('click', toggleFocus)\n        return () => {\n            document.removeEventListener('click', toggleFocus)\n        };\n    }, [])\n\n    // attach listeners for users, following, followers\n    useEffect(() => {\n        var db = firebase.firestore()\n        const fetchFollows = async () => {\n            return db.collection('follows')\n                .onSnapshot(snapshot => {\n                    var arr = []\n                    snapshot.forEach(doc => {\n                        arr.push(doc.data())\n                    })\n                    setfollows(arr)\n                })\n        }\n        if (props.uid) {\n            var fetchFollowsPromise = fetchFollows()\n            return () => {\n                fetchFollowsPromise.then(listener => listener())\n            }\n        }\n    }, [props.uid], followersCount, followingCount)\n\n\n    // fetch followerUsers and followingUsers\n    useEffect(() => {\n        if (focusOn) {\n            var db = firebase.firestore()\n            db.collection('users').get()\n                .then(snapshot => {\n                    var arr = []\n                    snapshot.forEach(doc => {\n                        arr.push({...doc.data()})\n                    })\n                    setUsers(arr)\n                })\n        }\n        return () => {\n        };\n    }, [focusOn])\n\n    const toggleFocus = (event) => {\n        var clickedOnFollowBox = false;\n        followBoxClasses.forEach(className => {\n            if (event.target.classList.contains(className)) {\n                clickedOnFollowBox = true\n            }\n        });\n        if (clickedOnFollowBox) {\n            return\n        } else {\n            setFocusOn('')\n        }\n    }\n\n    const findMyFollowsFrom = (follows) => {\n        const myFollowsFrom = []\n        follows.forEach(follow => {\n            if (follow.from === props.uid) {\n                myFollowsFrom.push(follow.from)\n            }\n        })\n        return myFollowsFrom\n    }\n    const findMyFollowsTo = (follows) => {\n        const myFollowsTo = []\n        follows.forEach(follow => {\n            if (follow.to === props.uid) {\n                myFollowsTo.push(follow.from)\n            }\n        })\n        return myFollowsTo\n    }\n    const getFilteredUsers = (users, follows) => {\n        return users.filter(user => {\n            if (follows.includes(user.uid)) {\n                return true\n            }\n        })\n    }\n  \n\n    // ui\n    const expandedBody = focusOn ? 'follow-box__expanded' : 'follow-box__compressed'\n    const followersFocused = focusOn === 'followers' ? 'focused' : null\n    const followingFocused = focusOn === 'following' ? 'focused' : null\n\n    // focus bar style\n    var focusedBarStyle = null;\n    if (focusOn === 'following') {\n        focusedBarStyle = 'under-following'\n    } else if (focusOn === 'followers') {\n        focusedBarStyle = 'under-followers'\n    }\n\n\n\n    const followsFrom = findMyFollowsFrom(follows)\n    const followsTo = findMyFollowsTo(follows)\n    var followingUsers = getFilteredUsers(users, followsTo)\n    var followedUsers = getFilteredUsers(users, followsFrom)\n    \n    var displayedUsers;\n    if (focusOn === 'following') {\n        displayedUsers = followingUsers.map(user => {\n            return <FollowItem {...user}/>\n        })\n    } else if (focusOn === 'followers') {\n        displayedUsers = followedUsers.map(user => {\n            return <FollowItem {...user}/>\n        })\n    }\n\n    return (\n        <div className='follow-box'>\n            <div className={`follow-box__header ${focusOn ? 'follow-box_header-filled' : 'follow-box_header-unfilled'}`}>\n                <div className={`header__section ${followersFocused}`} onClick={() => setFocusOn(focusOn === 'followers' ? '' : 'followers')}>\n                    {followedUsers.length} {'follower' + (followedUsers.length !== 1 ? 's' : '')}\n                    <div className={`focused-bar ${focusedBarStyle}`}></div>\n                </div>\n                <div className={`header__section ${followingFocused}`} onClick={() => setFocusOn(focusOn === 'following' ? '' : 'following')}>\n                    {followingUsers.length} following\n                </div>\n            </div>\n            <div className={`follow-box_body ${expandedBody}`}>\n                {displayedUsers}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.uid,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FollowBox)\n"]},"metadata":{},"sourceType":"module"}