{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport validator from 'validator';\nimport firebase from 'firebase';\nimport { regions } from '../../../shared/regions';\nimport './RegForm.css';\nimport axios from 'axios';\nimport { errorCreater } from '../../../shared/utility';\n\nfunction RegForm(props) {\n  // State\n  // data \n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allEmails = _useState2[0],\n      setAllEmails = _useState2[1];\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allUsernames = _useState4[0],\n      setAllUsernames = _useState4[1];\n\n  let _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mysteryManBlob = _useState6[0],\n      setMysteryManBlob = _useState6[1]; // ui\n\n\n  let _useState7 = useState('account'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      step = _useState8[0],\n      setStep = _useState8[1];\n\n  let _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      spinning = _useState10[0],\n      setSpinner = _useState10[1]; //profile\n\n\n  let _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  let _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPass = _useState14[1];\n\n  let _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      username = _useState16[0],\n      setUsername = _useState16[1];\n\n  let _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      zipcode = _useState18[0],\n      setZipcode = _useState18[1];\n\n  let _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      gender = _useState20[0],\n      pickGender = _useState20[1]; // filter functions\n\n\n  const filterAndSetUsername = value => {\n    const regex = new RegExp(/^[A-Za-z0-9_]+$/);\n\n    if (regex.test(value) || value === '') {\n      setUsername(value.toLowerCase());\n    } else {\n      return;\n    }\n  };\n\n  const filterAndSetZipcode = value => {\n    if (value.length <= 5) {\n      setZipcode(value);\n    }\n  }; // validate functions\n\n\n  const validateEmail = email => {\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validatePassword = password => {\n    if (password.length < 6) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateUsername = username => {\n    if (username.length < 3) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateZipcode = zipcode => {\n    if (zipcode.length === 5) {\n      return true;\n    }\n\n    return false;\n  }; // auth functions\n\n\n  const firstStep = async () => {\n    setSpinner(true);\n\n    try {\n      await fetchEmailsAndUsernames();\n\n      if (allEmails.includes(email)) {\n        throw errorCreater('The email address is already in use by another account.');\n      } else {\n        setSpinner(false);\n        setStep('profile');\n      }\n    } catch (err) {\n      setSpinner(false);\n      notifyWithErr(err.message);\n    }\n  };\n\n  const submit = async event => {\n    event.preventDefault();\n    setSpinner(true);\n\n    try {\n      // username check\n      await fetchEmailsAndUsernames();\n\n      if (allUsernames.includes(username)) {\n        throw errorCreater('That username is taken.');\n      }\n\n      if (allEmails.includes(email)) {\n        throw errorCreater('The email address is already in use by another account.');\n      } // zipcode check\n\n\n      const address = await fetchAddressFromZipcode(zipcode);\n      console.log(address);\n\n      let _ref = await createAuthUser(email, password),\n          _ref2 = _slicedToArray(_ref, 2),\n          emailFire = _ref2[0],\n          uid = _ref2[1];\n\n      const photoURL = await uploadMysteryMan(uid);\n      await createFirebaseUser(emailFire, uid, address, photoURL); // success!\n\n      props.setErrSentiment(true);\n      notifyWithErr('Profile Created Successfully!');\n      setSpinner(false);\n      setUsername('');\n      setZipcode('');\n      pickGender('');\n      props.setEmail(email);\n      props.setPassword(password);\n      setEmail('');\n      setPass('');\n    } catch (err) {\n      notifyWithErr(err.message);\n      setSpinner(false);\n    }\n  };\n\n  const notifyWithErr = msg => {\n    props.setErrMsg(msg);\n    props.setShowErr(true);\n  }; // validate values (account)\n\n\n  const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null;\n  const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null;\n  const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass && !spinning ? 'valid' : null; // validate values (profile)\n\n  const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null;\n  const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null;\n  const maleSelected = gender === 'Male' ? 'focused-sex' : null;\n  const femaleSelected = gender === 'Female' ? 'focused-sex' : null;\n  const isValidSubmit = username && zipcode && gender && validateUsername(username) && validateZipcode(zipcode) && !spinning ? 'valid' : null; // form\n\n  let form = React.createElement(\"div\", {\n    className: \"account-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reg-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Account Info\"), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidEmail),\n    placeholder: \"Email\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"large-input \".concat(isInvalidPass),\n    type: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: event => setPass(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"reg-button \".concat(isValidContinue),\n    onClick: event => {\n      event.preventDefault();\n      firstStep();\n    },\n    disabled: !isValidContinue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Continue\"));\n\n  if (step === 'profile') {\n    form = React.createElement(\"div\", {\n      className: \"profile-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chevron-left\",\n      id: \"reg-form-back\",\n      onClick: () => setStep('account'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"reg-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Profile Info\"), React.createElement(\"input\", {\n      className: \"large-input \".concat(isInvalidUsername),\n      placeholder: \"Username\",\n      value: username,\n      maxLength: 15,\n      onChange: event => filterAndSetUsername(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"zip-sex-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: \"zip-input \".concat(isInvalidZipcode),\n      placeholder: \"Hometown ZIP\",\n      value: zipcode,\n      onChange: event => filterAndSetZipcode(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sex-button \".concat(maleSelected),\n      onClick: event => {\n        event.preventDefault();\n        pickGender('Male');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"M\"), React.createElement(\"button\", {\n      className: \"sex-button \".concat(femaleSelected),\n      onClick: event => {\n        event.preventDefault();\n        pickGender('Female');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"button\", {\n      className: \"reg-button \".concat(isValidSubmit),\n      onClick: event => submit(event, email),\n      disabled: !isValidSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"reg-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, spinning ? React.createElement(\"div\", {\n    className: \"reg-form-spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }) : null, React.createElement(\"h1\", {\n    className: \"reg-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Sign Up\"), form);\n}\n\nexport default RegForm;","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/RegForm/RegForm.js"],"names":["React","useState","useEffect","validator","firebase","regions","axios","errorCreater","RegForm","props","allEmails","setAllEmails","allUsernames","setAllUsernames","mysteryManBlob","setMysteryManBlob","step","setStep","spinning","setSpinner","email","setEmail","password","setPass","username","setUsername","zipcode","setZipcode","gender","pickGender","filterAndSetUsername","value","regex","RegExp","test","toLowerCase","filterAndSetZipcode","length","validateEmail","isEmail","validatePassword","validateUsername","validateZipcode","firstStep","fetchEmailsAndUsernames","includes","err","notifyWithErr","message","submit","event","preventDefault","address","fetchAddressFromZipcode","console","log","createAuthUser","emailFire","uid","photoURL","uploadMysteryMan","createFirebaseUser","setErrSentiment","setPassword","msg","setErrMsg","setShowErr","isInvalidEmail","isInvalidPass","isValidContinue","isInvalidUsername","isInvalidZipcode","maleSelected","femaleSelected","isValidSubmit","form","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport validator from 'validator'\nimport firebase from 'firebase'\nimport { regions } from '../../../shared/regions'\nimport './RegForm.css'\nimport axios from 'axios'\nimport { errorCreater } from '../../../shared/utility'\n\nfunction RegForm(props) {\n\n    // State\n\n    // data \n    let [allEmails, setAllEmails] = useState([])\n    let [allUsernames, setAllUsernames] = useState([])\n    let [mysteryManBlob, setMysteryManBlob] = useState(null)\n\n    // ui\n    let [step, setStep] = useState('account')\n    let [spinning, setSpinner] = useState(false)\n\n    //profile\n    let [email, setEmail] = useState('')\n    let [password, setPass] = useState('')\n    let [username, setUsername] = useState('')\n    let [zipcode, setZipcode] = useState('')\n    let [gender, pickGender] = useState('')\n\n\n    // filter functions\n    const filterAndSetUsername = (value) => {\n        const regex = new RegExp(/^[A-Za-z0-9_]+$/)\n        if (regex.test(value) || value === '') {\n            setUsername(value.toLowerCase())\n        } else {\n            return\n        }\n    }\n\n    const filterAndSetZipcode = (value) => {\n        if (value.length <= 5) {\n            setZipcode(value)\n        }\n    }\n\n    // validate functions\n    const validateEmail = (email) => {\n        if (!validator.isEmail(email)) {\n            return false\n        }\n        return true\n    }\n    const validatePassword = (password) => {\n        if (password.length < 6) {\n            return false\n        }\n        return true\n    }\n    const validateUsername = (username) => {\n        if (username.length < 3) {\n            return false\n        }\n        return true\n    }\n\n    const validateZipcode = (zipcode) => {\n        if (zipcode.length === 5) {\n            return true\n        } return false\n    }\n\n    // auth functions\n    const firstStep = async () => {\n        setSpinner(true)\n        try {\n            await fetchEmailsAndUsernames()\n            if (allEmails.includes(email)) {\n                throw errorCreater('The email address is already in use by another account.')\n            } else {\n                setSpinner(false)\n                setStep('profile')\n            }\n        }\n\n        catch (err) {\n            setSpinner(false)\n            notifyWithErr(err.message)\n        }\n    }\n\n\n\n    const submit = async (event) => {\n        event.preventDefault()\n        setSpinner(true)\n\n        try {\n            // username check\n            await fetchEmailsAndUsernames()\n            if (allUsernames.includes(username)) {\n                throw errorCreater('That username is taken.')\n            }\n            if (allEmails.includes(email)) {\n                throw errorCreater('The email address is already in use by another account.')\n            }\n            // zipcode check\n            const address = await fetchAddressFromZipcode(zipcode)\n            console.log(address)\n            let [emailFire, uid] = await createAuthUser(email, password)\n            const photoURL = await uploadMysteryMan(uid)\n            await createFirebaseUser(emailFire, uid, address, photoURL)\n\n            // success!\n\n            props.setErrSentiment(true)\n            notifyWithErr('Profile Created Successfully!')\n            setSpinner(false)\n            setUsername('')\n            setZipcode('')\n            pickGender('')\n            props.setEmail(email)\n            props.setPassword(password)\n            setEmail('')\n            setPass('')\n\n\n\n        }\n        catch (err) {\n            notifyWithErr(err.message)\n            setSpinner(false)\n        }\n    }\n    const notifyWithErr = (msg) => {\n        props.setErrMsg(msg)\n        props.setShowErr(true)\n    }\n\n    // validate values (account)\n    const isInvalidEmail = email && !validateEmail(email) ? 'invalid' : null\n    const isInvalidPass = password && !validatePassword(password) ? 'invalid' : null\n    const isValidContinue = email && password && !isInvalidEmail && !isInvalidPass && !spinning ? 'valid' : null\n\n\n    // validate values (profile)\n    const isInvalidUsername = username && !validateUsername(username) ? 'invalid' : null\n    const isInvalidZipcode = zipcode && !validateZipcode(zipcode) ? 'invalid' : null\n    const maleSelected = gender === 'Male' ? 'focused-sex' : null\n    const femaleSelected = gender === 'Female' ? 'focused-sex' : null\n    const isValidSubmit = (\n        username &&\n        zipcode &&\n        gender &&\n        validateUsername(username) &&\n        validateZipcode(zipcode) &&\n        !spinning\n    ) ? 'valid' : null\n\n\n    // form\n    let form = (\n        <div className={`account-wrapper`}>\n            <div className='reg-detail'>Account Info</div>\n            <input\n                className={`large-input ${isInvalidEmail}`}\n                placeholder='Email'\n                value={email}\n                onChange={event => setEmail(event.target.value)}></input>\n            <input\n                className={`large-input ${isInvalidPass}`}\n                type='password'\n                value={password}\n                placeholder='Password'\n                onChange={event => setPass(event.target.value)}></input>\n            <button\n                className={`reg-button ${isValidContinue}`}\n                onClick={(event) => {\n                    event.preventDefault();\n                    firstStep()\n                }}\n                disabled={!isValidContinue}>Continue</button>\n        </div>\n\n    )\n    if (step === 'profile') {\n        form = (\n            <div className={`profile-wrapper`}>\n                <i className=\"fas fa-chevron-left\" id='reg-form-back' onClick={() => setStep('account')}></i>\n                <div className='reg-detail'>Profile Info</div>\n                <input\n                    className={`large-input ${isInvalidUsername}`}\n                    placeholder='Username'\n                    value={username}\n                    maxLength={15}\n                    onChange={event => filterAndSetUsername(event.target.value)}></input>\n                <div className='zip-sex-wrapper'>\n                    <input\n                        type='number'\n                        className={`zip-input ${isInvalidZipcode}`}\n                        placeholder='Hometown ZIP'\n                        value={zipcode}\n                        onChange={event => filterAndSetZipcode(event.target.value)}></input>\n                    <button className={`sex-button ${maleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Male') }}>M</button>\n                    <button className={`sex-button ${femaleSelected}`} onClick={(event) => { event.preventDefault(); pickGender('Female') }}>F</button>\n                </div>\n                <button\n                    className={`reg-button ${isValidSubmit}`}\n                    onClick={event => submit(event, email)}\n                    disabled={!isValidSubmit}>Submit</button>\n            </div>\n        )\n    }\n    return (\n        <form className='reg-form'>\n            {spinning ? <div className='reg-form-spinner'></div> : null}\n            <h1 className='reg-header'>Sign Up</h1>\n            {form}\n        </form>\n    )\n}\n\nexport default RegForm\n"]},"metadata":{},"sourceType":"module"}