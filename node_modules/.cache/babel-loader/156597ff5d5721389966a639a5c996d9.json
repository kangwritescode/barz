{"ast":null,"code":"const myPlaceFinder = (votes, myUID) => {\n  const dict = {};\n  votes.forEach(vote => {\n    if (vote.receiverID in dict) {\n      dict[vote.receiverID] = dict[vote.receiverID] + vote.value;\n    } else {\n      dict[vote.receiverID] = vote.value;\n    }\n  });\n  var arr = [];\n\n  for (let key in dict) {\n    var obj = {\n      uid: key,\n      score: dict[key]\n    };\n    arr.push(obj);\n  }\n\n  arr = arr.sort((a, b) => {\n    if (a.score > b.score) {\n      return -1;\n    }\n\n    return 1;\n  });\n  var myPosition;\n  arr.forEach((item, index) => {\n    if (item.uid === myUID) {\n      myPosition = index + 1;\n    }\n  }); // if you've received no votes\n\n  if (!myPosition) {\n    return arr.length + 1;\n  }\n\n  return myPosition;\n};\n\nexport default {\n  myPlaceFinder: myPlaceFinder\n};","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubTools/HubTools.js"],"names":["myPlaceFinder","votes","myUID","dict","forEach","vote","receiverID","value","arr","key","obj","uid","score","push","sort","a","b","myPosition","item","index","length"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,QAAMC,IAAI,GAAG,EAAb;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AAClB,QAAIA,IAAI,CAACC,UAAL,IAAmBH,IAAvB,EAA6B;AACzBA,MAAAA,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBH,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBD,IAAI,CAACE,KAArD;AACH,KAFD,MAEO;AACHJ,MAAAA,IAAI,CAACE,IAAI,CAACC,UAAN,CAAJ,GAAwBD,IAAI,CAACE,KAA7B;AACH;AACJ,GAND;AAOA,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,GAAT,IAAgBN,IAAhB,EAAsB;AAClB,QAAIO,GAAG,GAAG;AAAEC,MAAAA,GAAG,EAAEF,GAAP;AAAYG,MAAAA,KAAK,EAAET,IAAI,CAACM,GAAD;AAAvB,KAAV;AACAD,IAAAA,GAAG,CAACK,IAAJ,CAASH,GAAT;AACH;;AACDF,EAAAA,GAAG,GAAGA,GAAG,CAACM,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,QAAID,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAhB,EAAuB;AACnB,aAAO,CAAC,CAAR;AACH;;AAAC,WAAO,CAAP;AACL,GAJK,CAAN;AAKA,MAAIK,UAAJ;AACAT,EAAAA,GAAG,CAACJ,OAAJ,CAAY,CAACc,IAAD,EAAOC,KAAP,KAAiB;AACzB,QAAID,IAAI,CAACP,GAAL,KAAaT,KAAjB,EAAwB;AACpBe,MAAAA,UAAU,GAAGE,KAAK,GAAG,CAArB;AACH;AACJ,GAJD,EApBoC,CAyBpC;;AACA,MAAI,CAACF,UAAL,EAAiB;AACb,WAAOT,GAAG,CAACY,MAAJ,GAAa,CAApB;AACH;;AACD,SAAOH,UAAP;AACH,CA9BD;;AAgCA,eAAe;AACXjB,EAAAA,aAAa,EAAEA;AADJ,CAAf","sourcesContent":["const myPlaceFinder = (votes, myUID) => {\n    const dict = {}\n    votes.forEach(vote => {\n        if (vote.receiverID in dict) {\n            dict[vote.receiverID] = dict[vote.receiverID] + vote.value\n        } else {\n            dict[vote.receiverID] = vote.value\n        }\n    })\n    var arr = []\n    for (let key in dict) {\n        var obj = { uid: key, score: dict[key] }\n        arr.push(obj)\n    }\n    arr = arr.sort((a, b) => {\n        if (a.score > b.score) {\n            return -1\n        } return 1\n    })\n    var myPosition\n    arr.forEach((item, index) => {\n        if (item.uid === myUID) {\n            myPosition = index + 1\n        }\n    })\n    // if you've received no votes\n    if (!myPosition) {\n        return arr.length + 1\n    }\n    return myPosition\n}\n\nexport default {\n    myPlaceFinder: myPlaceFinder\n}\n\n"]},"metadata":{},"sourceType":"module"}