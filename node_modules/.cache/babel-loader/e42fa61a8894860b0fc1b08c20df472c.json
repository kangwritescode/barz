{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Scribble/Scribble.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'firebase/firestore';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport vinyl from '../../assets/videos/vinyl.mov';\nimport vinyIMG from '../../assets/images/vinylIMG.png';\nimport * as actions from '../../store/actions/index';\nimport MyBars from './MyBars/MyBars';\nimport Post from './Post/Post';\nimport PostEditor from './PostEditor/PostEditor';\nimport './Scribble.css';\nimport Toolkit from './Toolkit/Toolkit';\nimport Turntable from './Turntable/Turntable';\n\nconst Scribble = () => {\n  const _useState = useState('Post'),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewFocus = _useState2[0],\n        setViewFocus = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editedPost = _useState4[0],\n        setEditedPost = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        redirect = _useState6[0],\n        setRedirect = _useState6[1];\n\n  const toggleView = () => {\n    return viewFocus === 'Post' ? setViewFocus('MyBars') : setViewFocus('Post');\n  };\n\n  const editPost = pid => {\n    setEditedPost(pid);\n  };\n\n  const assignRedirect = event => {\n    console.log(event.key);\n\n    switch (event.key) {\n      case 1:\n        return setRedirect(React.createElement(Redirect, {\n          to: \"/hub\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n\n      case 3:\n        return setRedirect(React.createElement(Redirect, {\n          to: \"/judge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n\n      case 4:\n        return setRedirect(React.createElement(Redirect, {\n          to: \"/wordsmiths\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', assignRedirect);\n    return () => {\n      document.removeEventListener('keydown', assignRedirect);\n    };\n  }, []);\n  var content;\n\n  if (redirect) {\n    content = redirect;\n  } else {\n    content = React.createElement(\"div\", {\n      className: \"Scribble\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"backup-img\",\n      src: vinyIMG,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      src: vinyl,\n      autoPlay: true,\n      loop: true,\n      playsInline: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"scribbleOverlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), editedPost ? React.createElement(PostEditor, {\n      pid: editedPost,\n      toggleEditor: setEditedPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"row-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(MyBars, {\n      focused: viewFocus,\n      toggle: toggleView,\n      editPost: editPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Post, {\n      focused: viewFocus,\n      toggle: toggleView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Toolkit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"scribble-turntable-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Turntable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n  return content;\n};\n\nlet mapStatetoProps = state => {\n  return {\n    musicURL: state.music.musicURL,\n    volume: state.music.volume,\n    playing: state.music.playing,\n    allStations: _objectSpread({}, state.music.allStations)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    playMusic: () => dispatch(actions.playMusic()),\n    stopMusic: () => dispatch(actions.stopMusic()),\n    changeURL: newURL => dispatch(actions.changeURL(newURL)),\n    changeVol: volume => dispatch(actions.changeVol(volume))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Scribble/Scribble.js"],"names":["React","useState","useEffect","connect","Redirect","vinyl","vinyIMG","actions","MyBars","Post","PostEditor","Toolkit","Turntable","Scribble","viewFocus","setViewFocus","editedPost","setEditedPost","redirect","setRedirect","toggleView","editPost","pid","assignRedirect","event","console","log","key","document","addEventListener","removeEventListener","content","mapStatetoProps","state","musicURL","music","volume","playing","allStations","mapDispatchToProps","dispatch","playMusic","stopMusic","changeURL","newURL","changeVol"],"mappings":"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","sourcesContent":["import 'firebase/firestore'\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router'\nimport vinyl from '../../assets/videos/vinyl.mov'\nimport vinyIMG from '../../assets/images/vinylIMG.png'\nimport * as actions from '../../store/actions/index'\nimport MyBars from './MyBars/MyBars'\nimport Post from './Post/Post'\nimport PostEditor from './PostEditor/PostEditor'\nimport './Scribble.css'\nimport Toolkit from './Toolkit/Toolkit'\nimport Turntable from './Turntable/Turntable'\n\n\nconst Scribble = () => {\n\n    const [viewFocus, setViewFocus] = useState('Post')\n    const [editedPost, setEditedPost] = useState(null)\n    const [redirect, setRedirect] = useState(null)\n\n    const toggleView = () => {\n        return viewFocus === 'Post' ? setViewFocus('MyBars') : setViewFocus('Post')\n    }\n    const editPost = (pid) => {\n        setEditedPost(pid)\n    }\n    const assignRedirect = (event) => {\n        console.log(event.key)\n        switch (event.key) {\n            case 1: return setRedirect(<Redirect to='/hub' />)\n            case 3: return setRedirect(<Redirect to='/judge' />)\n            case 4: return setRedirect(<Redirect to='/wordsmiths' />)\n            default: break;\n        }\n    }\n    useEffect(() => {\n        document.addEventListener('keydown', assignRedirect)\n        return () => {\n            document.removeEventListener('keydown', assignRedirect)\n        };\n    }, [])\n\n    var content;\n    if (redirect) {\n        content = redirect\n    } else {\n        content = (\n            <div className=\"Scribble\">\n                <img id='backup-img' src={vinyIMG} alt=''></img>\n                <video src={vinyl} autoPlay={true} loop={true} playsInline={true} muted />\n                <div id=\"scribbleOverlay\" />\n\n                {editedPost ? <PostEditor pid={editedPost} toggleEditor={setEditedPost} /> : null}\n\n                <div className=\"row-one\">\n                    <MyBars focused={viewFocus} toggle={toggleView} editPost={editPost} />\n                    <Post focused={viewFocus} toggle={toggleView} />\n                    <div></div>\n                </div>\n                <div className=\"row-two\">\n                    <Toolkit />\n                    <div className='scribble-turntable-wrapper'>\n                        <Turntable />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return content\n}\nlet mapStatetoProps = state => {\n    return {\n        musicURL: state.music.musicURL,\n        volume: state.music.volume,\n        playing: state.music.playing,\n        allStations: {\n            ...state.music.allStations\n        }\n    }\n}\nlet mapDispatchToProps = dispatch => {\n    return {\n        playMusic: () => dispatch(actions.playMusic()),\n        stopMusic: () => dispatch(actions.stopMusic()),\n        changeURL: (newURL) => dispatch(actions.changeURL(newURL)),\n        changeVol: (volume) => dispatch(actions.changeVol(volume)),\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Scribble);"]},"metadata":{},"sourceType":"module"}