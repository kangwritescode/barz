{"ast":null,"code":"var _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Scribble from './components/Scribble/Scribble';\nimport Hub from './containers/Hub/Hub';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { connect } from 'react-redux';\nimport Judge from './containers/Judge/Judge';\nimport { fetchUserData, authCheckState } from './store/actionCreators';\nimport Wordsmiths from './containers/Wordsmiths/Wordsmiths';\nimport './App.css';\nimport Landing from './containers/Landing/Landing';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignin();\n  }\n\n  render() {\n    let app = React.createElement(Landing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n\n    if (!this.props.authenticated) {\n      app = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(ReactPlayer, {\n        volume: this.props.volume * 1.0 / 100,\n        url: this.props.musicURL,\n        a: true,\n        playing: this.props.playing,\n        loop: true,\n        width: \"0px\",\n        height: \"0px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/scribble\",\n        component: Scribble,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/judge\",\n        component: Judge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/wordsmiths\",\n        component: Wordsmiths,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/hub\",\n        component: Hub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: Hub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, app);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    playing: state.playing,\n    musicURL: state.musicURL,\n    volume: state.volume,\n    authenticated: state.loggedIn,\n    email: state.email\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignin: () => dispatch(authCheckState()),\n    fetchUserData: uid => dispatch(fetchUserData(uid))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/App.js"],"names":["React","Component","Navbar","Scribble","Hub","Route","Switch","withRouter","ReactPlayer","connect","Judge","fetchUserData","authCheckState","Wordsmiths","Landing","App","componentDidMount","props","onTryAutoSignin","render","app","authenticated","volume","musicURL","playing","mapStateToProps","state","loggedIn","email","mapDispatchToProps","dispatch","uid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,wBAA9C;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAGA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAE1Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,GAAG,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;;AACA,QAAI,CAAC,KAAKH,KAAL,CAAWI,aAAhB,EAA+B;AAC7BD,MAAAA,GAAG,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWK,MAAX,GAAoB,GAApB,GAA0B,GADpC;AAEE,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,QAFlB;AAE2B,QAAA,CAAC,MAF5B;AAGE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAHtB;AAIE,QAAA,IAAI,MAJN;AAKE,QAAA,KAAK,EAAC,KALR;AAME,QAAA,MAAM,EAAC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAErB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEO,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEG,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAET,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEA,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAVF,CADF;AAsBD;;AAGC,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,GADH,CADF;AAKH;;AAxCyB;;AA0C5B,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,OAAO,EAAEE,KAAK,CAACF,OADV;AAELD,IAAAA,QAAQ,EAAEG,KAAK,CAACH,QAFX;AAGLD,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MAHT;AAILD,IAAAA,aAAa,EAAEK,KAAK,CAACC,QAJhB;AAKLC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AALR,GAAP;AAQD,CATD;;AAWA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,eAAe,EAAE,MAAMY,QAAQ,CAAClB,cAAc,EAAf,CAD1B;AAELD,IAAAA,aAAa,EAAGoB,GAAD,IAASD,QAAQ,CAACnB,aAAa,CAACoB,GAAD,CAAd;AAF3B,GAAP;AAID,CALD;;AAOA,eAAetB,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CtB,UAAU,CAACQ,GAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport Scribble from './components/Scribble/Scribble'\nimport Hub from './containers/Hub/Hub'\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport ReactPlayer from 'react-player'\nimport { connect } from 'react-redux'\nimport Judge from './containers/Judge/Judge'\nimport { fetchUserData, authCheckState } from './store/actionCreators'\nimport Wordsmiths from './containers/Wordsmiths/Wordsmiths'\nimport './App.css'\nimport Landing from './containers/Landing/Landing';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignin()\n  }\n\n  render() {\n\n    let app = <Landing />\n    if (!this.props.authenticated) {\n      app = (\n        <div>\n          <Navbar />\n          <ReactPlayer\n            volume={this.props.volume * 1.0 / 100}\n            url={this.props.musicURL}a\n            playing={this.props.playing}\n            loop\n            width=\"0px\"\n            height=\"0px\" />\n  \n          <Switch>\n            <Route path=\"/scribble\" component={Scribble} ></Route>\n            <Route path=\"/judge\" component={Judge} ></Route>\n            <Route path=\"/wordsmiths\" component={Wordsmiths} ></Route>\n            <Route path=\"/hub\" component={Hub} ></Route>\n            <Route path=\"/\" component={Hub}></Route>\n          </Switch>\n        </div>\n  \n      )\n  \n    }\n\n\n      return (\n        <div className=\"App\">\n          {app}\n        </div>\n      )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    playing: state.playing,\n    musicURL: state.musicURL,\n    volume: state.volume,\n    authenticated: state.loggedIn,\n    email: state.email\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignin: () => dispatch(authCheckState()),\n    fetchUserData: (uid) => dispatch(fetchUserData(uid))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n"]},"metadata":{},"sourceType":"module"}