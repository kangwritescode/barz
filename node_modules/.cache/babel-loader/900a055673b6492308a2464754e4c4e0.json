{"ast":null,"code":"import * as actionTypes from './actions';\nimport firebase from '../Firebase';\nimport 'firebase/firestore'; // asynchronous actionCreators\n\nexport function fetchUserData(uid) {\n  return dispatch => {\n    var db = firebase.firestore();\n    var docRef = db.collection(\"users/\").doc(\"\".concat(uid));\n    docRef.get().then(doc => {\n      if (doc.exists) {\n        dispatch({\n          type: actionTypes.SET_USER_DATA,\n          data: doc.data()\n        });\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n}\nexport const postUserData = (uid, newInfo) => {\n  return dispatch => {\n    var db = firebase.firestore();\n    db.collection(\"users\").doc(uid).update(newInfo).then(function () {\n      console.log(\"Document successfully updated!\");\n      dispatch({\n        type: actionTypes.SET_USER_DATA,\n        data: newInfo\n      });\n    }).catch(function (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error);\n    });\n  };\n};\nexport const fetchPhotoURL = photoRef => {\n  return dispatch => {\n    var storage = firebase.storage();\n    storage.ref(photoRef).getDownloadURL().then(url => {\n      dispatch({\n        type: actionTypes.SET_PHOTO_URL,\n        photoURL: url\n      });\n    }).catch(function (error) {\n      console.log(\"error in Profile.js: \", error);\n    });\n    return () => {// cleanup\n    };\n  };\n}; // synchronous action creators\n\nexport function authCheckState() {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      firebase.auth().signOut();\n      dispatch({\n        type: actionTypes.LOG_OUT\n      });\n    } else {\n      const expirationTime = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationTime < new Date()) {\n        console.log(\"would've logged out\");\n        firebase.auth().signOut();\n        dispatch({\n          type: actionTypes.LOG_OUT\n        });\n      } else {\n        const uid = localStorage.getItem('uid');\n        dispatch(fetchUserData(uid));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/store/actionCreators.js"],"names":["actionTypes","firebase","fetchUserData","uid","dispatch","db","firestore","docRef","collection","doc","get","then","exists","type","SET_USER_DATA","data","console","log","catch","error","postUserData","newInfo","update","fetchPhotoURL","photoRef","storage","ref","getDownloadURL","url","SET_PHOTO_URL","photoURL","authCheckState","token","localStorage","getItem","auth","signOut","LOG_OUT","expirationTime","Date"],"mappings":"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","sourcesContent":["\nimport * as actionTypes from './actions'\nimport firebase from '../Firebase'\nimport 'firebase/firestore'\n\n\n// asynchronous actionCreators\n\nexport function fetchUserData(uid) {\n    return dispatch => {\n        var db = firebase.firestore()\n        var docRef = db.collection(`users/`).doc(`${uid}`);\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                dispatch({ type: actionTypes.SET_USER_DATA, data: doc.data() })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n}\n\nexport const postUserData = (uid, newInfo) => {\n\n    return dispatch => {\n\n        var db = firebase.firestore()\n        db.collection(\"users\").doc(uid).update(newInfo)\n            .then(function () {\n                console.log(\"Document successfully updated!\");\n                dispatch({ type: actionTypes.SET_USER_DATA, data: newInfo })\n            })\n            .catch(function (error) {\n                // The document probably doesn't exist.\n                console.error(\"Error updating document: \", error);\n            });\n    }   \n}\n\nexport const fetchPhotoURL = (photoRef) => {\n    return dispatch => {\n        var storage = firebase.storage();\n            storage.ref(photoRef).getDownloadURL()\n            .then(url => {\n                dispatch({ type: actionTypes.SET_PHOTO_URL, photoURL: url})\n            })\n            .catch(function (error) { console.log(\"error in Profile.js: \", error) });\n            return () => {\n                // cleanup\n            };\n    }\n}\n\n\n\n// synchronous action creators\n\nexport function authCheckState() {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (!token) {\n            firebase.auth().signOut()\n            dispatch({ type: actionTypes.LOG_OUT })\n        } else {\n            const expirationTime = new Date(localStorage.getItem('expirationDate'))\n            if (expirationTime < new Date()) {\n                console.log(\"would've logged out\")\n                firebase.auth().signOut()\n                dispatch({ type: actionTypes.LOG_OUT })\n            } else {\n                const uid = localStorage.getItem('uid')\n                dispatch(fetchUserData(uid))\n            }\n\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}