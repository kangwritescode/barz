{"ast":null,"code":"var _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubNavBar/HubNavBar.js\";\nimport React, { Component } from 'react';\nimport './HubNavBar.css';\nimport { connect } from 'react-redux';\nimport WordNavItem from '../../Wordsmiths/WordNavBar/WordNavItem/WordNavItem';\n\nclass HubNavBar extends Component {\n  componentDidMount() {\n    document.addEventListener('click', this.toggleDropdown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.toggleDropdown);\n  }\n\n  toggleDropdown(event) {\n    const feedDrop = document.getElementById(\"feed\");\n    event.target.classList.contains('feed') ? feedDrop.classList.toggle('show') : feedDrop.classList.remove('show');\n  }\n\n  render() {\n    var contents = React.createElement(\"div\", {\n      className: \"HubNavBarSectionContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SortContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Feed:\"), React.createElement(WordNavItem, {\n      dropItems: ['Personal', 'Following'],\n      type: \"feed\",\n      display: this.props.feed,\n      sortAndFilter: this.props.sortAndFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n\n    if (this.props.needsInfo) {\n      contents = null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"HubNavBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, contents);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    needsInfo: state.user.needsInfo\n  };\n};\n\nexport default connect(mapStateToProps, null)(HubNavBar);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Hub/HubNavBar/HubNavBar.js"],"names":["React","Component","connect","WordNavItem","HubNavBar","componentDidMount","document","addEventListener","toggleDropdown","componentWillUnmount","removeEventListener","event","feedDrop","getElementById","target","classList","contains","toggle","remove","render","contents","props","feed","sortAndFilter","needsInfo","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAE9BI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,cAAxC;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnBH,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKF,cAA3C;AACH;;AAEDA,EAAAA,cAAc,CAACG,KAAD,EAAQ;AAClB,UAAMC,QAAQ,GAAGN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAAjB;AACAF,IAAAA,KAAK,CAACG,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,MAAhC,IAA0CJ,QAAQ,CAACG,SAAT,CAAmBE,MAAnB,CAA0B,MAA1B,CAA1C,GAA8EL,QAAQ,CAACG,SAAT,CAAmBG,MAAnB,CAA0B,MAA1B,CAA9E;AACH;;AAIDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,QAAQ,GACR;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,WAAD;AACI,MAAA,SAAS,EAAE,CAAC,UAAD,EAAa,WAAb,CADf;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,IAHxB;AAII,MAAA,aAAa,EAAE,KAAKD,KAAL,CAAWE,aAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;;AAYA,QAAI,KAAKF,KAAL,CAAWG,SAAf,EAA0B;AACtBJ,MAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,QADL,CADJ;AAKH;;AAtC6B;;AA0ClC,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHF,IAAAA,SAAS,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADnB,GAAP;AAGH,CAJD;;AAOA,eAAetB,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CAAP,CAA+BrB,SAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './HubNavBar.css'\nimport { connect } from 'react-redux'\nimport WordNavItem from '../../Wordsmiths/WordNavBar/WordNavItem/WordNavItem'\n\nclass HubNavBar extends Component {\n\n    componentDidMount() {\n        document.addEventListener('click', this.toggleDropdown)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this.toggleDropdown)\n    }\n\n    toggleDropdown(event) {\n        const feedDrop = document.getElementById(\"feed\");\n        event.target.classList.contains('feed') ? feedDrop.classList.toggle('show') : feedDrop.classList.remove('show');\n    }\n\n\n\n    render() {\n\n        var contents = (\n            <div className=\"HubNavBarSectionContainer\">\n                <div className=\"SortContainer\">\n                    <p id=\"sort\">Feed:</p>\n                    <WordNavItem\n                        dropItems={['Personal', 'Following']}\n                        type=\"feed\"\n                        display={this.props.feed}\n                        sortAndFilter={this.props.sortAndFilter} />\n                </div>\n            </div>\n        )\n        if (this.props.needsInfo) {\n            contents = null\n        }\n        return (\n            <div className=\"HubNavBar\">\n                {contents}\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        needsInfo: state.user.needsInfo\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(HubNavBar);"]},"metadata":{},"sourceType":"module"}