{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport './PostLikes.css';\n\nclass PostLikes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      points: 0,\n      likes: 0,\n      dislikes: 0,\n      myVote: 0,\n      votesListener: null\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      console.log('hello');\n\n      if (prevProps.viewedPost !== this.props.viewedPost) {\n        if (this.state.votesListener) {\n          this.state.votesListener();\n        }\n\n        this.fetchInfo();\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      if (this.state.votesListener) {\n        this.state.votesListener();\n      }\n    };\n\n    this.fetchInfo = () => {\n      const db = firebase.firestore();\n      var votesListener = db.collection('postVotes').where('pid', '==', this.props.viewedPost.pid).onSnapshot(snapshot => {\n        var points = 0;\n        var likes = 0;\n        var dislikes = 0; // for every vote of this post\n\n        snapshot.docs.forEach(vote => {\n          vote = vote.data();\n\n          if (vote.value === 1) {\n            likes += 1;\n          }\n\n          if (vote.value === -1) {\n            dislikes += 1;\n          }\n        });\n        points = likes - dislikes < 0 ? 0 : likes - dislikes;\n        this.setState(_objectSpread({}, this.state, {\n          points: points,\n          likes: likes,\n          dislikes: dislikes\n        }));\n      });\n      this.setState(_objectSpread({}, this.state, {\n        votesListener: votesListener\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.points, \" total pt\", this.state.points === 1 ? null : 's', \".\"), React.createElement(\"div\", {\n      className: \"fans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.likes, \" \", this.state.likes === 1 ? 'sdf' : 'likes'));\n  }\n\n}\n\nPostLikes.defaultProps = {\n  pid: ''\n};\n\nconst mapStatetoProps = state => {\n  return {\n    uid: state.uid\n  };\n};\n\nexport default connect(mapStatetoProps, null)(PostLikes);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/PostLikes/PostLikes.js"],"names":["React","Component","connect","firebase","PostLikes","state","points","likes","dislikes","myVote","votesListener","componentDidUpdate","prevProps","prevState","console","log","viewedPost","props","fetchInfo","componentWillUnmount","db","firestore","collection","where","pid","onSnapshot","snapshot","docs","forEach","vote","data","value","setState","render","defaultProps","mapStatetoProps","uid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\n\n\nimport './PostLikes.css'\n\nclass PostLikes extends Component {\n    static defaultProps = {\n        pid: ''\n    }\n    state = {\n        points: 0,\n        likes: 0,\n        dislikes: 0,\n        myVote: 0,\n        votesListener: null\n    }\n\n\n    componentDidUpdate = (prevProps, prevState) => {\n        console.log('hello')\n        if (prevProps.viewedPost !== this.props.viewedPost) {\n            if (this.state.votesListener) {\n                this.state.votesListener()\n            }\n            this.fetchInfo()\n        }\n    }\n    componentWillUnmount = () => {\n        if (this.state.votesListener) {\n            this.state.votesListener()\n        }\n    }\n    fetchInfo = () => {\n        const db = firebase.firestore()\n        var votesListener = db.collection('postVotes').where('pid', '==', this.props.viewedPost.pid).onSnapshot(snapshot => {\n            var points = 0\n            var likes = 0\n            var dislikes = 0\n            // for every vote of this post\n            snapshot.docs.forEach(vote => {\n                vote = vote.data()\n                if (vote.value === 1) {\n                    likes += 1\n                }\n                if (vote.value === -1) {\n                    dislikes += 1\n                }\n            })\n            points = (likes - dislikes) < 0 ? 0 : (likes - dislikes)\n            this.setState({\n                ...this.state,\n                points: points,\n                likes: likes,\n                dislikes: dislikes\n            })\n        })\n        this.setState({\n            ...this.state,\n            votesListener: votesListener\n        })\n    }\n\n    render() {\n        return (\n            <div className='likes'>\n                <div className='total-score'>\n                    {this.state.points} total pt{this.state.points === 1 ? null : 's'}.\n                </div>\n                <div className='fans'>\n                    {this.state.likes} {this.state.likes === 1 ? 'sdf' : 'likes'}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        uid: state.uid\n    }\n}\n\nexport default connect(mapStatetoProps, null)(PostLikes)\n"]},"metadata":{},"sourceType":"module"}