{"ast":null,"code":"import _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js\";\nimport React, { useState } from 'react';\nimport './Landing.css';\nimport { fetchUserData } from '../../store/actionCreators';\nimport { connect } from 'react-redux';\nimport splashVid from '../../assets/splash-vid.m4v';\nimport LandingNav from './LandingNav/LandingNav';\nimport firebase from 'firebase';\nimport RegForm from './RegForm/RegForm';\n\nconst Landing = () => {\n  // ui state\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReg = _useState2[0],\n      updateReg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showErr = _useState4[0],\n      setShowErr = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errMsg = _useState6[0],\n      setErrMsg = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errSentiment = _useState8[0],\n      setErrSentiment = _useState8[1]; // login\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1]; // sign in\n\n\n  const signIn = async event => {\n    event.preventDefault();\n\n    try {\n      const uid = await authenticate(email, password);\n      this.props.getUserData(uid);\n    } catch (err) {\n      switch (err.code) {\n        case 'auth/invalid-email':\n          this.props.loginErrMsgHandler(err.message, false);\n          this.setBadInput('email');\n          break;\n\n        case \"auth/too-many-requests\":\n          var errMsg = \"Too many unsuccessful login attempts. Please try again later.\";\n          this.props.loginErrMsgHandler(errMsg, false);\n          this.setBadInput('password');\n          break;\n\n        case 'auth/user-not-found':\n          this.props.loginErrMsgHandler(err.message, false);\n          this.setBadInput('email');\n          break;\n\n        case 'auth/wrong-password':\n          this.props.loginErrMsgHandler(err.message, false);\n          this.setBadInput('password');\n          break;\n\n        default:\n          console.log(err, 'default!');\n      }\n    }\n  }; // authenticate\n\n\n  const authenticate = async (email, password) => {\n    return await firebase.auth().signInWithEmailAndPassword(email, password).then(successObj => {\n      // now's date\n      var expirationDate = new Date(); // now's date + 1 hour\n\n      expirationDate.setHours(expirationDate.getHours() + 100);\n      localStorage.setItem('token', successObj.user.refreshToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('uid', successObj.user.uid);\n      return successObj.user.uid;\n    }).catch(function (error) {\n      console.log(error);\n      throw error;\n    });\n  }; // header-text \n\n\n  var blurOne = isReg ? 'blurOne' : null;\n  var blurTwo = isReg ? 'blurTwo' : null;\n  var blurThree = isReg ? 'blurThree' : null; // register form\n\n  var registerBody = isReg ? 'expanded' : null;\n  var regText = isReg ? 'register-text-hidden' : null;\n  var regForm = null;\n\n  if (isReg) {\n    regForm = React.createElement(RegForm, {\n      updateReg: updateReg,\n      setErrMsg: setErrMsg,\n      setShowErr: setShowErr,\n      setErrSentiment: setErrSentiment,\n      setEmail: setEmail,\n      setPassword: setPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"splash-video-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    className: \"splash-video\",\n    src: splashVid,\n    autoPlay: true,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(LandingNav, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    trySignIn: signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"header-word \".concat(blurOne),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Scribble. \"), React.createElement(\"span\", {\n    className: \"header-word \".concat(blurTwo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Judge. \"), React.createElement(\"span\", {\n    className: \"header-word \".concat(blurThree),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Compete. \")), React.createElement(\"div\", {\n    className: \"register \".concat(registerBody),\n    onClick: () => !isReg ? updateReg(!isReg) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, showErr && isReg ? React.createElement(\"div\", {\n    className: \"error-msg \".concat(errSentiment ? 'positive-msg' : null),\n    onAnimationEnd: () => {\n      setShowErr(false);\n      setErrSentiment(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, errMsg) : null, React.createElement(\"span\", {\n    className: regText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Sign Up\"), regForm)), React.createElement(\"div\", {\n    className: \"scribble-tut\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserData: uid => dispatch(fetchUserData(uid))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Landing/Landing.js"],"names":["React","useState","fetchUserData","connect","splashVid","LandingNav","firebase","RegForm","Landing","isReg","updateReg","showErr","setShowErr","errMsg","setErrMsg","errSentiment","setErrSentiment","email","setEmail","password","setPassword","signIn","event","preventDefault","uid","authenticate","props","getUserData","err","code","loginErrMsgHandler","message","setBadInput","console","log","auth","signInWithEmailAndPassword","then","successObj","expirationDate","Date","setHours","getHours","localStorage","setItem","user","refreshToken","catch","error","blurOne","blurTwo","blurThree","registerBody","regText","regForm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './Landing.css'\nimport { fetchUserData } from '../../store/actionCreators'\nimport { connect } from 'react-redux'\nimport splashVid from '../../assets/splash-vid.m4v'\nimport LandingNav from './LandingNav/LandingNav'\nimport firebase from 'firebase'\nimport RegForm from './RegForm/RegForm'\n\nconst Landing = () => {\n\n    // ui state\n    var [isReg, updateReg] = useState(false)\n    var [showErr, setShowErr] = useState(false)\n    var [errMsg, setErrMsg] = useState('')\n    var [errSentiment, setErrSentiment] = useState(false)\n\n    // login\n    var [email, setEmail] = useState('')\n    var [password, setPassword] = useState('')\n\n\n\n    // sign in\n    const signIn = async (event) => {\n\n        event.preventDefault()\n        try {\n            const uid = await authenticate(email, password)\n            this.props.getUserData(uid)\n        }\n        catch (err) {\n            switch (err.code) {\n                case 'auth/invalid-email':\n                    this.props.loginErrMsgHandler(err.message, false)\n                    this.setBadInput('email')\n                    break;\n                case \"auth/too-many-requests\":\n                    var errMsg = \"Too many unsuccessful login attempts. Please try again later.\"\n                    this.props.loginErrMsgHandler(errMsg, false)\n                    this.setBadInput('password')\n                    break;\n                case 'auth/user-not-found':\n                    this.props.loginErrMsgHandler(err.message, false)\n                    this.setBadInput('email')\n                    break;\n                case 'auth/wrong-password':\n                    this.props.loginErrMsgHandler(err.message, false)\n                    this.setBadInput('password')\n                    break;\n                default:\n                    console.log(err, 'default!')\n            }\n        }\n    }\n    // authenticate\n    const authenticate = async (email, password) => {\n\n        return await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(successObj => {\n                // now's date\n                var expirationDate = new Date()\n                // now's date + 1 hour\n                expirationDate.setHours(expirationDate.getHours() + 100)\n                localStorage.setItem('token', successObj.user.refreshToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('uid', successObj.user.uid)\n                return successObj.user.uid\n\n            })\n            .catch(function (error) {\n                console.log(error)\n                throw error\n            });\n    }\n\n\n\n\n\n\n\n    // header-text \n    var blurOne = isReg ? 'blurOne' : null\n    var blurTwo = isReg ? 'blurTwo' : null\n    var blurThree = isReg ? 'blurThree' : null\n\n    // register form\n    var registerBody = isReg ? 'expanded' : null\n    var regText = isReg ? 'register-text-hidden' : null\n\n    var regForm = null;\n    if (isReg) {\n        regForm = (\n            <RegForm\n                updateReg={updateReg}\n                setErrMsg={setErrMsg}\n                setShowErr={setShowErr}\n                setErrSentiment={setErrSentiment}\n                setEmail={setEmail}\n                setPassword={setPassword} />\n        )\n    }\n\n    return (\n\n        <div className='landing'>\n            <div className='splash-video-overlay'></div>\n            <video className=\"splash-video\" src={splashVid} autoPlay={true} loop={true} playsInline={true} muted />\n            <LandingNav\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                trySignIn={signIn} />\n            <div className='content'>\n                <div className='header-wrapper'>\n                    <div className={`header-text`}>\n                        <span className={`header-word ${blurOne}`}>Scribble. </span>\n                        <span className={`header-word ${blurTwo}`}>Judge. </span>\n                        <span className={`header-word ${blurThree}`}>Compete. </span>\n                    </div>\n                    <div className={`register ${registerBody}`} onClick={() => !isReg ? updateReg(!isReg) : null}>\n                        {showErr && isReg ? <div className={`error-msg ${errSentiment ? 'positive-msg' : null}`} onAnimationEnd={() => { setShowErr(false); setErrSentiment(false); }}>{errMsg}</div> : null}\n                        <span className={regText}>Sign Up</span>\n                        {regForm}\n                    </div>\n                </div>\n                <div className='scribble-tut'></div>\n            </div>\n        </div>\n    )\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserData: (uid) => dispatch(fetchUserData(uid))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Landing)\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}