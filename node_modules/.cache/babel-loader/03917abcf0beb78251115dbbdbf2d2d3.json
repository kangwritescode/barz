{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/containers/Judge/Judge.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport vinyl2_IMG from '../../assets/images/vinyl2_IMG.png';\nimport vinyl2 from '../../assets/videos/vinyl2.mp4';\nimport './Judge.css';\nimport JudgeNavBar from './JudgeNavBar/JudgeNavBar';\nimport ManyView from './ManyView/ManyView';\nimport SingleView from './SingleView/SingleView';\n\nconst Judge = props => {\n  const _useState = useState({\n    view: 'Explore',\n    sort: 'Newest',\n    filter: 'All Posts',\n    time: 'All Time',\n    coast: 'All Coasts'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        sortFilterState = _useState2[0],\n        setSortFilterState = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        keyPressed = _useState4[0],\n        setKeyPressed = _useState4[1];\n\n  useEffect(() => {\n    const assignRedirect = event => {\n      switch (event.key) {\n        case '1':\n          return setKeyPressed(1);\n\n        case '2':\n          return setKeyPressed(2);\n\n        case '4':\n          return setKeyPressed(4);\n\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', assignRedirect);\n    return () => {\n      document.removeEventListener('keydown', assignRedirect);\n    };\n  }, []);\n\n  const updateJudgeState = (newState, value) => {\n    setSortFilterState(_objectSpread({}, sortFilterState, {\n      [newState]: value\n    }));\n  };\n\n  let view = React.createElement(SingleView, {\n    uid: props.uid,\n    sort: sortFilterState.sort,\n    filter: sortFilterState.filter,\n    view: sortFilterState.view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n\n  if (sortFilterState.view === 'Explore') {\n    view = React.createElement(ManyView, {\n      sort: sortFilterState.sort,\n      filter: sortFilterState.filter,\n      view: sortFilterState.view,\n      coast: sortFilterState.coast,\n      time: sortFilterState.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n  var content = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"JudgeContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    id: \"backup-img\",\n    src: vinyl2_IMG,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"video\", {\n    src: vinyl2,\n    autoPlay: true,\n    loop: true,\n    playsInline: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"judgeOverlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(JudgeNavBar, {\n    sort: sortFilterState.sort,\n    filter: sortFilterState.filter,\n    view: sortFilterState.view,\n    time: sortFilterState.time,\n    coast: sortFilterState.coast,\n    updateJudgeState: updateJudgeState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), view));\n\n  switch (keyPressed) {\n    case 1:\n      return content = React.createElement(Redirect, {\n        to: \"/hub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n\n    case 2:\n      return content = React.createElement(Redirect, {\n        to: \"/scribble\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n\n    case 4:\n      return content = React.createElement(Redirect, {\n        to: \"/wordsmiths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n\n    default:\n      break;\n  }\n\n  return content;\n};\n\nconst mapStateToProps = state => {\n  return {\n    uid: state.user.uid\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Judge);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/containers/Judge/Judge.js"],"names":["React","Component","useState","useEffect","connect","Redirect","vinyl2_IMG","vinyl2","JudgeNavBar","ManyView","SingleView","Judge","props","view","sort","filter","time","coast","sortFilterState","setSortFilterState","keyPressed","setKeyPressed","assignRedirect","event","key","document","addEventListener","removeEventListener","updateJudgeState","newState","value","uid","content","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect} from 'react-router'\nimport vinyl2_IMG from '../../assets/images/vinyl2_IMG.png'\nimport vinyl2 from '../../assets/videos/vinyl2.mp4'\nimport './Judge.css'\nimport JudgeNavBar from './JudgeNavBar/JudgeNavBar'\nimport ManyView from './ManyView/ManyView'\nimport SingleView from './SingleView/SingleView'\n\n\n\nconst Judge = props => {\n\n    const [sortFilterState, setSortFilterState] = useState({\n        view: 'Explore',\n        sort: 'Newest',\n        filter: 'All Posts',\n        time: 'All Time',\n        coast: 'All Coasts',\n    })\n\n    const [keyPressed, setKeyPressed] = useState(null)\n    useEffect(() => {\n        const assignRedirect = (event) => {\n            switch (event.key) {\n                case '1': return setKeyPressed(1)\n                case '2': return setKeyPressed(2)\n                case '4': return setKeyPressed(4)\n                default: break;\n            }\n        }\n        document.addEventListener('keydown', assignRedirect)\n\n        return () => {\n            document.removeEventListener('keydown', assignRedirect)\n        };\n    }, [])\n\n \n\n\n    const updateJudgeState = (newState, value) => {\n        setSortFilterState({\n            ...sortFilterState,\n            [newState]: value\n        })\n    }\n\n\n    let view = (\n        <SingleView\n            uid={props.uid}\n            sort={sortFilterState.sort}\n            filter={sortFilterState.filter}\n            view={sortFilterState.view} />\n    )\n    if (sortFilterState.view === 'Explore') {\n        view = (\n            <ManyView\n                sort={sortFilterState.sort}\n                filter={sortFilterState.filter}\n                view={sortFilterState.view}\n                coast={sortFilterState.coast}\n                time={sortFilterState.time}/>\n        )\n    }\n    \n    var content = (\n        <div>\n            <div className=\"JudgeContainer\">\n\n                <img id='backup-img' src={vinyl2_IMG} alt=''></img>\n                <video src={vinyl2} autoPlay={true} loop={true} playsInline={true} muted />\n                <div id=\"judgeOverlay\" />\n                <JudgeNavBar\n                    sort={sortFilterState.sort}\n                    filter={sortFilterState.filter}\n                    view={sortFilterState.view}\n                    time={sortFilterState.time}\n                    coast={sortFilterState.coast}\n                    updateJudgeState={updateJudgeState} />\n                {view}\n            </div>\n        </div>\n\n    )\n\n    switch (keyPressed) {\n        case 1: return content = <Redirect to='/hub'></Redirect>\n        case 2: return content = <Redirect to='/scribble'></Redirect>\n        case 4: return content = <Redirect to='/wordsmiths'></Redirect>\n        default: break;\n\n    }\n\n\n    return content\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.user.uid\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Judge)\n\n"]},"metadata":{},"sourceType":"module"}