{"ast":null,"code":"import _defineProperty from \"/Users/davidkang/Desktop/local-barz/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/DeletePost/DeletePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport './DeletePost.css';\nimport firebase from '../../../../../Firebase';\nimport 'firebase/firestore';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../../../store/actions';\n\nclass DeletePost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      spinner: false\n    };\n\n    this.toggleSpinner = bool => {\n      this.setState(_objectSpread({}, this.state, {\n        spinner: bool\n      }));\n    };\n\n    this.deletePost = async pid => {\n      this.toggleSpinner(true);\n      var db = firebase.firestore();\n      await db.collection('submissions').doc(pid).delete().then(() => {\n        console.log(\"document successfully deleted\");\n      }).catch(err => {\n        this.toggleSpinner(false);\n      });\n      await db.collection('postVotes').where('pid', '==', pid).get().then(snap => {\n        snap.forEach(doc => {\n          doc.ref.delete().then(() => {\n            console.log('doc successfully deleted!!!');\n          });\n        });\n      }).catch(err => {\n        this.toggleSpinner(false);\n      });\n      this.toggleSpinner(false);\n      this.props.toggleModal('showPost', false, 'deleted');\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"delete-post-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"delete-post-backdrop\",\n      onClick: () => this.props.toggle(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"delete-post-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.spinner ? React.createElement(\"div\", {\n      id: \"delete-post-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null, React.createElement(\"i\", {\n      className: \"fa fa-close\",\n      id: \"close-delete-post-x\",\n      onClick: () => this.props.toggle(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"delete-post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Delete Post?\"), React.createElement(\"div\", {\n      id: \"delete-post-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"This cannot be reversed.\"), React.createElement(\"div\", {\n      id: \"delete-post-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"delete-post-button\",\n      id: \"cancel-button\",\n      onClick: () => this.props.toggle(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"div\", {\n      className: \"delete-post-button\",\n      id: \"delete-button\",\n      onClick: () => this.deletePost(this.props.pid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default connect(null, null)(DeletePost);","map":{"version":3,"sources":["/Users/davidkang/Desktop/local-barz/src/components/Scribble/MyBars/ViewedBar/DeletePost/DeletePost.js"],"names":["React","Component","useState","firebase","connect","actionTypes","DeletePost","state","spinner","toggleSpinner","bool","setState","deletePost","pid","db","firestore","collection","doc","delete","then","console","log","catch","err","where","get","snap","forEach","ref","props","toggleModal","render","toggle"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport './DeletePost.css'\nimport firebase from '../../../../../Firebase'\nimport 'firebase/firestore'\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../../../../store/actions'\n\nclass DeletePost extends Component {\n\n    state = {\n        spinner: false\n    }\n\n    toggleSpinner = (bool) => {\n        this.setState({\n            ...this.state,\n            spinner: bool\n        })\n    }\n\n    deletePost = async (pid) => {\n        this.toggleSpinner(true)\n        var db = firebase.firestore()\n        await db.collection('submissions').doc(pid).delete()\n            .then(() => { console.log(\"document successfully deleted\") })\n            .catch(err => { this.toggleSpinner(false)})\n        await db.collection('postVotes').where('pid', '==', pid).get()\n            .then(snap => {\n                snap.forEach(doc => {\n                    doc.ref.delete().then(() => {\n                        console.log('doc successfully deleted!!!')\n                    })\n                })\n            })\n            .catch(err => { this.toggleSpinner(false)})\n        this.toggleSpinner(false)\n        this.props.toggleModal('showPost', false, 'deleted')\n        \n    }\n    render() {\n        return (\n            <div id=\"delete-post-wrapper\">\n                <div id=\"delete-post-backdrop\" onClick={() => this.props.toggle(null)}></div>\n                <div id=\"delete-post-body\">\n                    {this.state.spinner ? <div id='delete-post-spinner'></div> : null}\n                    <i className=\"fa fa-close\" id=\"close-delete-post-x\" onClick={() => this.props.toggle(null)}></i>\n                    <div id=\"delete-post-header\">Delete Post?</div>\n                    <div id=\"delete-post-question\">This cannot be reversed.</div>\n                    <div id='delete-post-button-container'>\n                        <div className='delete-post-button' id='cancel-button' onClick={() => this.props.toggle(null)}>Cancel</div>\n                        <div className='delete-post-button' id='delete-button' onClick={() => this.deletePost(this.props.pid)}>Delete</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect(null, null)(DeletePost); "]},"metadata":{},"sourceType":"module"}